1,283d0
< /* fast forward-in-time simulator for prediction of population genetic metrics and ABC inference */
< 
< #include <stdio.h>
< #include <stdlib.h>
< #include <math.h>
< #include <unistd.h>
< #include <getopt.h>
< #include <time.h>
< #include <sys/time.h>
< #include <string.h>
< #include <string.h>
< 
< #include <gsl_rng.h>            // gnu scientific library //
< #include <gsl_randist.h>        // gnu scientific library //
< const gsl_rng_type *rngType;    /* generator type */
< gsl_rng *rngState;              /* rng instance */
< 
< 
< 
< const char *version = "ffits1.0.0";
< 
< // defaults for globals
< #define nSITES_DEFAULT 1000000 // imaginary length of DNA we are watching evolve
< #define nLINKAGE_GROUPS_DEFAULT 2 // # of independently assorting units
< #define nGENERATIONS_DEFAULT 10
< #define nPOPULATIONS_DEFAULT 3 // # islands/metapopulations/demes
< #define MU_DEFAULT 1E-9 // per base mutation rate per meiosis per generation
< #define MIGRATION_RATE_DEFAULT 0.01
< #define K_DEFAULT 1000.0
< #define INCLUDE_SELECTION_DEFAULT 1
< #define MEAN_S_DEFAULT 0.01
< #define FIXED_POP_SIZE_DEFAULT 0
< #define MAX_POP_GROWTH_RATE_DEFAULT 0.01
< #define RECOMBINATION_RATE_PER_KB_DEFAULT 0.001
< #define PROBABILITY_SITE_SELECTED_DEFAULT 0.01
< #define TIME_SERIES_SAMPLE_FREQ_DEFAULT 1000
< 
< // globals for cmd line and or parameter file options
< unsigned long long int nSITES = nSITES_DEFAULT;
< long int nGENERATIONS = nGENERATIONS_DEFAULT;
< int nPOPULATIONS = nPOPULATIONS_DEFAULT;
< double MU = MU_DEFAULT, GENOME_MU;
< int nLINKAGE_GROUPS = nLINKAGE_GROUPS_DEFAULT;
< int nDEMOGRAPHIC_CHANGES;
< long int *DEMOGRAPHIC_CHANGE_TIMES, *MIGRATION_CHANGE_TIMES;
< int nMIGRATION_CHANGES;
< _Bool INCLUDE_SELECTION = INCLUDE_SELECTION_DEFAULT, FIXED_POP_SIZE = FIXED_POP_SIZE_DEFAULT;
< double MEAN_S_BGS = MEAN_S_DEFAULT, MEAN_S_DIV = MEAN_S_DEFAULT, MEAN_S_POS = MEAN_S_DEFAULT;
< double MAX_POP_GROWTH_RATE = MAX_POP_GROWTH_RATE_DEFAULT;
< double RECOMBINATION_RATE_PER_KB = RECOMBINATION_RATE_PER_KB_DEFAULT;
< double PROBABILITY_SITE_DIV = PROBABILITY_SITE_SELECTED_DEFAULT;
< double PROBABILITY_SITE_POS = PROBABILITY_SITE_SELECTED_DEFAULT;
< double PROBABILITY_SITE_BGS = PROBABILITY_SITE_SELECTED_DEFAULT;
< double PROBABILITY_SITE_NEUTRAL;
< int ENVIRONMENT_TYPE = 0, FITNESS_MODEL = 0; // defaults for how selection works; magic numbers defined below
< double *environmentGradient, ENVT_MAX = 1.0, ENVT_MIN = -1.0;
< long int nSelectedSites;
< long int TIME_SERIES_SAMPLE_FREQ = TIME_SERIES_SAMPLE_FREQ_DEFAULT;
< 
< short int *genotypes0, *genotypes1, *gts; // pointer to memory blocks for individual genotypes
< int *locations, *linkageGroupMembership; // locations in discrete space of individuals
< unsigned long long int *parentalTrackedSiteIndexes, *siteIndexes, *SFScounts, *alleleCounts; // pointers for memory blocks for sites in genome
< double *alleleFrequencies, *migrationRates, *K_VALUES, *M_VALUES, *selectionCoefficients;
< short int *sitesStatuses; // codes for locus's current status (see below for codes)
< short int currentBlock = 0; // keep track of which block is in use
< unsigned long long int blockSizes[2];
< long int t; // time counter
< long int N; // current total population size
< long int *abundances; // size of each population
< unsigned long long int nTrackedSitesInParents = 0;
< _Bool VERBOSE = 0;
< int currentMigrationPeriod = 0;
< int currentDemographyPeriod = 0;
< double *migRatePt, *KvalPt;
< FILE *dataFile_alleleFreqTS, *dataFile_alleleFreqTSbyPop, *dataFile_SFS_TS, *dataFile_segSiteTS;
< FILE *dataFile_derivedFixationTS;
< 
< // site classifications and magic numbers
< int *siteClassifications;
< #define nSITE_CLASSES 4
< #define SITE_CLASS_NEUTRAL 0
< #define SITE_CLASS_BGS 1 // background selection
< #define SITE_CLASS_POS 2 // positive selection
< #define SITE_CLASS_DIV 3 // divergent selection
< #define ALLELE_CODE_ANCESTRAL 0
< #define ALLELE_CODE_DERIVED 1
< #define PLOIDY 2 // diploid
< #define ENVT_TYPE_GRADIENT 0
< #define ENVT_TYPE_MOSAIC 1
< #define ENVT_TYPE_INVARIANT 2
< #define CODOMINANCE 0.5 // codominant effects of alleles in diploid genotypes
< #define FITNESS_MODEL_ADDITIVE 0
< #define FITNESS_MODEL_MULTIPLICATIVE 1
< #define LOCUS_STATUS_INACTIVE 0
< #define LOCUS_STATUS_VARIABLE_IN_PARENTS 1
< #define LOCUS_STATUS_VARIABLE_PLUS_MUT 2
< #define LOCUS_STATUS_NEW_MUT_ONLY 3
< #define LOCUS_STATUS_TRACKED_IN_PARENTS 4
< 
< 
< // function declarations
< long int calculateNumOffspring(int pop);
< void calculatePopGenMetrics(void);
< short int * checkMemoryBlocks(long int totalOffspring, long int nSitesInOffspring);
< void chooseParents(long int *mommy, long int *daddy, double *dpt, long int nparents);
< void chooseParentsAtRandom(long int *mommy, long int *daddy, long int *randomNumberLine, long int nhere);
< void computeFitness(double *fitnessValues);
< long int figureOutOffspringGenomeSites( unsigned long long int *offsp_SiteIndexes, short int *offsp_lociStates, long int nNewMutations, unsigned long long int *mutatedLoci );
< void finalTasks(unsigned RNG_SEED);
< void initializeRNG(unsigned int RNG_SEED);
< void makeCumulativeFitnessNumLines(double *fitnessValues, double *fitnessNumLines, long int *individualsInDeme);
< void makeDemesIndexes(long int *individualsInDeme);
< void makeOneOffspring(long int momIndex, long int dadIndex, short int *offGTpt, long int nSitesInOffspring, unsigned long long int *offsp_SiteIndexes, short int *offsp_lociStates);
< void migration(void);
< void printParametersToFiles(unsigned RNG_SEED);
< void putInMutations( short int *offspringGTs, short int *offsp_lociStates, unsigned long long int *offsp_SiteIndexes, long int nNewMutations, long int totalOffspring, long int nSitesInOffspring );
< double randExp(double meanValue);
< unsigned readInParametersFromFile(void);
< void reproduction(void);
< void setUpDataFiles(void);
< void setUpGenome(void);
< void setUpInitialAlleleFrequencies(double *expectedFreq);
< void setUpPopulations(void);
< void usage(char *progname);
< //void viabilitySelection(void);
< void wrongParametersIniOption(char *expected, char *previous, char *found);
< 
< 
< 
< int main(int argc, char *argv[])
< {
<     unsigned int RNG_SEED;
<     int ch;
<     char *progname = argv[0];
<     
<     
<     // read in optional command line arguments
<     while ((ch = getopt(argc, argv, "T:V?")) != -1) {
<         switch (ch) {
<             case 'T':
<                 nGENERATIONS = atoi(optarg);
<                 break;
<             case 'V':
<                 VERBOSE = 1;
<                 break;
<             case '?':
<             default:
<                 usage(progname);
<                 exit(-1);
<         }
<     }
<     
<     RNG_SEED = readInParametersFromFile();
<     
<     // initialization steps
<     initializeRNG(RNG_SEED);
<     setUpGenome();
<     setUpPopulations();
<     setUpDataFiles();
<     
<     for ( t = 1; t <= nGENERATIONS; t++ ) {
< 
<         migration();
<         
<         reproduction(); // includes fecundity selection
<         
<         if ( N == 0 ) {
<             // all extinct
<             fprintf(stdout, "\nAll extinct at end of generation %li.\n", t);
<             finalTasks(RNG_SEED);
<             exit(1);
<         }
<         
<         if ( (t % TIME_SERIES_SAMPLE_FREQ == 0) || (t == nGENERATIONS) )
<             calculatePopGenMetrics();
<     }
<     
<     finalTasks(RNG_SEED);
<     return 0;
< }
< 
< 
< long int calculateNumOffspring(int pop)
< {
<     long int numOffspring = 0, focalTime, nhere;
<     double expected, currentPop, k;
<     
<     // check to see if now is a time to change demographic parameters
<     if ( nDEMOGRAPHIC_CHANGES > 0 ) {
<         focalTime = DEMOGRAPHIC_CHANGE_TIMES[currentDemographyPeriod];
<         if ( t == focalTime ) {
<             KvalPt += nPOPULATIONS;
<             currentDemographyPeriod++;
<         }
<     }
<     
<     nhere = *(abundances + pop);
<     if ( nhere > 1 ) {
<         if ( FIXED_POP_SIZE )
<             numOffspring = (long int) *(KvalPt + pop);
<         else {
<             k = *(KvalPt + pop);
<             currentPop = ((double) nhere);
<             expected = currentPop + (currentPop * MAX_POP_GROWTH_RATE * (k - currentPop)/k); // logistic equation
<             numOffspring = gsl_ran_poisson( rngState, expected );
<         }
<     }
<     else
<         numOffspring = 0;
<     
<     return numOffspring;
< }
< 
< 
< void calculatePopGenMetrics(void)
< {
<     long int i, j, alleleCountsByPopulation[(nPOPULATIONS * nTrackedSitesInParents)];
<     unsigned long long int SFScountsByPopulation[(nPOPULATIONS * 2 * N)], nDivSites = 0, nPosSites = 0;
<     unsigned long long int siteMasterIndex, nSegSites = 0, nNeutralSites = 0, nBGsites = 0;
<     int pop;
<     short int *sipt, siteClass;
<     long int nhere, count;
<     double oneOver2N;
<     
<     oneOver2N = 1.0 / (((double) PLOIDY) * ((double) N));
<     
<     memset( SFScounts, 0, PLOIDY * N * sizeof(unsigned long long int) );
<     
<     for ( i = 0; i < nTrackedSitesInParents; i++ ) {
<         sipt = gts + (PLOIDY * i);
<         
<         // overall counts and frequencies
<         siteMasterIndex = *(parentalTrackedSiteIndexes + i);
<         if ( *(sitesStatuses + siteMasterIndex) == LOCUS_STATUS_VARIABLE_IN_PARENTS ) {
<             // site types
<             nSegSites++;
<             siteClass = *(siteClassifications + siteMasterIndex);
<             if ( siteClass == SITE_CLASS_NEUTRAL )
<                 nNeutralSites++;
<             else if ( siteClass == SITE_CLASS_BGS )
<                 nBGsites++;
<             else if ( siteClass == SITE_CLASS_DIV )
<                 nDivSites++;
<             else if ( siteClass == SITE_CLASS_POS )
<                 nPosSites++;
<             else {
<                 fprintf(stderr, "\nError in calculatePopGenMetrics():\n siteClass = %i not recognized\n", siteClass);
<                 exit(-1);
<             }
<             
<             // global allele frequencies and SFS
<             count = *(alleleCounts + siteMasterIndex);
<             
<             if ( count <= 0 ) {
<                 fprintf(stderr, "\nError in calculatePopGenMetrics():\n\tcount (%li) <= 0 for siteMasterIndex = %llu\n", count, siteMasterIndex);
<                 exit(-1);
<             }
<             fprintf(dataFile_alleleFreqTS, "%li,%llu,%i,%li,%E,%E,%i\n", t, siteMasterIndex, *(linkageGroupMembership + siteMasterIndex), count, (((double) count) * oneOver2N), *(selectionCoefficients + siteMasterIndex), *(siteClassifications + siteMasterIndex) );
<             
<             *(SFScounts + count) += 1;
<         }
<         
<         for ( j = 0; j < nPOPULATIONS; j++ ) {
<             
<         }
<     }
<     
<     // print segregating site counts
<     fprintf(dataFile_segSiteTS, "%li,%llu,%llu,%llu,%llu,%llu\n", t, nSegSites, nNeutralSites, nBGsites, nPosSites, nDivSites);
<     
<     // print the SFS
<     for ( i = 1; i < (PLOIDY * N); i++ ) {
<         if ( *(SFScounts + i) ) {
<             fprintf(dataFile_SFS_TS, "%li,%li,%llu\n", t, i, *(SFScounts + i));
<         }
<     }
<     
<     for ( i = 0; i < nPOPULATIONS; i++ ) {
<         
<     }
<     
< }
< 
286,629d2
< short int * checkMemoryBlocks(long int totalOffspring, long int nSitesInOffspring)
< {
<     int offspringBlock;
<     unsigned long long int neededSize, makeSize;
<     
<     if ( currentBlock )
<         offspringBlock = 0; // current parents use 1, so offspring will use 0
<     else
<         offspringBlock = 1; // current 0, offspring 1
<     
<     neededSize = PLOIDY * totalOffspring * nSitesInOffspring * (sizeof(short int));
<     
<     // check if we need bigger memory blocks and allocate if needed
<     if ( blockSizes[offspringBlock] < neededSize ) {
<         makeSize = PLOIDY * totalOffspring * (nSitesInOffspring + 10) * (sizeof(short int));
<         if ( offspringBlock ) {
<             free( genotypes1 );
<             genotypes1 = (short int *) malloc( makeSize );
<         }
<         else {
<             free( genotypes0 );
<             genotypes0 = (short int *) malloc( makeSize );
<         }
<         blockSizes[offspringBlock] = makeSize;
<     }
<     
<     if ( offspringBlock )
<         return genotypes1;
<     else
<         return genotypes0;
< }
< 
< 
< void chooseParents(long int *mommy, long int *daddy, double *fnlpt, long int nparents)
< {
<     long int i, j;
<     double dum, *dpt;
< 
<     dpt = fnlpt;
<     // dpt is the pointer to first entry in the the fitness number line for this patch
< 
<     // choose mom
<     dum = gsl_rng_uniform(rngState);
<     i = 0;
<     while ( dum > *dpt ) {
<         i++;
<         dpt++;
<     }
<     *mommy = i;
<     
<     // choose dad; make sure not the same as mom
<     do {
<         dum = gsl_rng_uniform(rngState);
<         j = 0;
<         dpt = fnlpt;
<         while ( dum > *dpt ) {
<             dpt++;
<             j++;
<         }
<     } while ( j == i );
<     *daddy = j;
<     
< //    if ( VERBOSE ) {
< //        printf("\nMommy = %li, daddy = %li\n", *mommy, *daddy);
< //    }
< 
< }
< 
< 
< void chooseParentsAtRandom(long int *mommy, long int *daddy, long int *randomNumberLine, long int nhere)
< {
<     long int chosenOnes[2];
<     
<     gsl_ran_choose( rngState, chosenOnes, 2, randomNumberLine, nhere, sizeof(long int) );
<     
<     *mommy = chosenOnes[0];
<     *daddy = chosenOnes[1];
< }
< 
< 
< void computeFitness(double *fitnessValues)
< {
<     unsigned long long int i, j, selectedSiteIndexesMaster[nSelectedSites];
<     unsigned long long int selectedSiteIndexesLocal[nSelectedSites], *ullpt;
<     double cf_scoeffs[nSelectedSites], *dpt, cf_s, cf_gradient; // prefix cf_ denoting local to this function
<     long int nFound;
<     int cf_siteClass, cf_siteClasses[nSelectedSites], *locpt;
<     short int *sipt, gtsum;
< //    unsigned long long int *dbpt1, *dbpt2; // pointers for debugging with lldb
< //    double *dbpt3;
< //    int *dbpt4;
<     
<     dpt = fitnessValues;
<     for ( i = 0; i < N; i++ ) {
<         *dpt = 1.0;
<         dpt++;
<     }
<     
< //    dbpt1 = selectedSiteIndexesMaster;
< //    dbpt2 = selectedSiteIndexesLocal;
< //    dbpt3 = cf_scoeffs;
< //    dbpt4 = cf_siteClasses;
<     
<     nFound = 0;
<     ullpt = parentalTrackedSiteIndexes;
<     for ( i = 0; i < nTrackedSitesInParents; i++ ) {
<         j = *ullpt; // focal site master index
<         cf_siteClass = *(siteClassifications + j);
<         if ( cf_siteClass > SITE_CLASS_NEUTRAL ) {
<             cf_siteClasses[nFound] = cf_siteClass;
<             selectedSiteIndexesLocal[nFound] = i;
<             selectedSiteIndexesMaster[nFound] = j;
<             cf_scoeffs[nFound] = *(selectionCoefficients + j);
<             nFound++;
<         }
<         ullpt++;
<     }
<     
<     if ( VERBOSE && t < 10 ) {
<         printf("\nLocal and Master selected site indexes, site type codes, and selection coefficients:\n");
<         for ( i = 0; i < nSelectedSites; i++ )
<             printf("\t%llu\t%llu\t%i\t%f\n", selectedSiteIndexesLocal[i], selectedSiteIndexesMaster[i], cf_siteClasses[i], cf_scoeffs[i]);
<     }
<     
<     for ( i = 0; i < nSelectedSites; i++ ) {
<         sipt = gts + (PLOIDY * selectedSiteIndexesLocal[i]); // first individual, selected site i
<         dpt = fitnessValues; // first individual's fitness score
<         cf_siteClass = cf_siteClasses[i];
<         cf_s = cf_scoeffs[i];
<         locpt = locations;
<         for ( j = 0; j < N; j++ ) {
<             gtsum = *sipt + *(sipt + 1); // number of derived alleles at this locus
<             if ( (cf_siteClass == SITE_CLASS_POS || cf_siteClass == SITE_CLASS_BGS) && gtsum ) { // + and - selection handled same
<                 if ( FITNESS_MODEL == FITNESS_MODEL_ADDITIVE )
<                     *dpt += ((double) gtsum) * cf_s;
<                 else
<                     *dpt *= 1.0 + ((double) gtsum) * cf_s;
<             }
<             else if ( cf_siteClass == SITE_CLASS_DIV ) { // divergent selection requires special handling.
<                 cf_gradient = *( environmentGradient + *locpt );
<                 if ( gtsum == 2 ) { // homozygous derived
<                     if ( FITNESS_MODEL == FITNESS_MODEL_ADDITIVE )
<                         *dpt += 2.0 * cf_s * cf_gradient;
<                     else
<                         *dpt *= 1.0 + (2.0 * cf_s * cf_gradient);
<                 }
<                 else if ( gtsum == 0 ) { // homozygous ancestral
<                     if ( FITNESS_MODEL == FITNESS_MODEL_ADDITIVE )
<                         *dpt += -2.0 * cf_s * cf_gradient;
<                     else
<                         *dpt *= 1.0 - (2.0 * cf_s * cf_gradient);
<                 }
<                 else if ( gtsum != 1 ) {
<                     fprintf(stderr, "\nError in computeFitness():\n\tgtsum (= %i) out of bounds.\n", gtsum);
<                     exit(-1);
<                     // heterozygotes are assumed intermediate everywhere, so no fitness change
<                 }
<             }
<             else if ( cf_siteClass == SITE_CLASS_NEUTRAL ) {
<                 fprintf(stderr, "\nError in computeFitness():\n\tneutral site made it into calcs.\n");
<                 exit(-1);
<             }
<             
<             sipt += PLOIDY * nTrackedSitesInParents; // advance to locus i in next individual's genotype
<             dpt++; // advance to next individual's fitness
<             locpt++; // advance to next individual's location
<         }
<     }
<     
<     if ( t == 1 ) {
<         FILE *cf_fitvals;
<         cf_fitvals = fopen("InitialFitnessValues.csv", "w");
<         fprintf(cf_fitvals, "individual,location,fitness\n");
<         for ( i = 0; i < N; i++ )
<             fprintf(cf_fitvals, "%llu,%i,%f\n", i, *(locations + i), *(fitnessValues + i));
<         fclose(cf_fitvals);
<     }
<     dpt = fitnessValues;
<     for ( i = 0; i < N; i++ ) {
<         if ( *dpt < 0.0 )
<             *dpt = 0.0;
<         dpt++;
<     }
< }
< 
< 
< long int figureOutOffspringGenomeSites( unsigned long long int *offsp_SiteIndexes, short int *offsp_lociStates, long int nNewMutations, unsigned long long int *mutatedLoci )
< {
<     long int nSitesInOffspring = 0, newMutationSiteCount = 0, parentalSiteCount = 0, nRepeatMutations = 0;
<     unsigned long long int locus, *newLocusIndexPt, *variableSitePt, *offsp_pt;
<     long int i, totalSitesDone = 0, retainedSites = 0, nSitesToDo, nBrandNewMutations = 0;
<     short int *offsp_ls;
< 
<     newLocusIndexPt = mutatedLoci;
<     variableSitePt = parentalTrackedSiteIndexes;
<     offsp_pt = offsp_SiteIndexes;
<     offsp_ls = offsp_lociStates;
<     
<     nSitesToDo = nNewMutations + nTrackedSitesInParents;
<     while ( totalSitesDone < nSitesToDo ) {
<         if ( (parentalSiteCount < nTrackedSitesInParents) && (newMutationSiteCount < nNewMutations) ) {
<             // there are remaining sites to fill in for both types
<             if ( *newLocusIndexPt > *variableSitePt ) {
<                 // add in the parental locus
<                 locus = *variableSitePt;
<                 if ( *(sitesStatuses + locus) == LOCUS_STATUS_VARIABLE_IN_PARENTS ) {
<                     // should be added in, else ignored
<                     *offsp_pt = locus; // record the locus
<                     offsp_pt++; // advance offspring locus pointer
<                     
<                     *offsp_ls = LOCUS_STATUS_VARIABLE_IN_PARENTS; // record the status
<                     offsp_ls++; // advance the status pointer
<                     
<                     nSitesInOffspring++; // increment the total offspring site counter
<                     retainedSites++;
<                 }
<                 parentalSiteCount++; // one more parental site taken care of
<                 variableSitePt++; // increment the variable site pointer
<                 
<                 totalSitesDone++;
<             }
<             else if ( *newLocusIndexPt < *variableSitePt ) {
<                 // add in the new locus
<                 *offsp_pt = *newLocusIndexPt; // record the index
<                 offsp_pt++; // advance the index pointer
<                 
<                 *offsp_ls = LOCUS_STATUS_NEW_MUT_ONLY; // record the status
<                 offsp_ls++; // advance the status pointer
<                 
<                 newLocusIndexPt++; // advance new locus index pointer
<                 
<                 nSitesInOffspring++; // increment the total site counter
<                 
<                 newMutationSiteCount++;
<                 
<                 totalSitesDone++;
<                 
<                 nBrandNewMutations++;
<             }
<             else {
<                 // the mutation is at an already used site
<                 if ( *newLocusIndexPt != *variableSitePt ) {
<                     fprintf(stderr, "\nError in figureOutOffspringGenomeSites():\n\t*newLocusIndexPt (%llu) != *variableSitePt (%llu)\n", *newLocusIndexPt, *variableSitePt);
<                     exit(-1);
<                 }
<                 *offsp_pt = *newLocusIndexPt; // record the index
<                 offsp_pt++; // advance the index pointer
<                 
<                 *offsp_ls = LOCUS_STATUS_VARIABLE_PLUS_MUT; // record the status
<                 offsp_ls++; // advance the status pointer
<                 
<                 newLocusIndexPt++; // advance BOTH parental AND mutations pointers and their respective counts
<                 newMutationSiteCount++;
<                 variableSitePt++;
<                 parentalSiteCount++;
<                 
<                 nSitesInOffspring++; // increment count of sites in offspring
<                 nRepeatMutations++;
<                 
<                 
<                 totalSitesDone += 2; // took care of a parental site AND a mutation site at the same time
<             }
<         }
<         else if ( parentalSiteCount < nTrackedSitesInParents && newMutationSiteCount == nNewMutations ) {
<             // done with new, just need to add parentals
<             locus = *variableSitePt;
<             if ( *(sitesStatuses + locus) == LOCUS_STATUS_VARIABLE_IN_PARENTS ) {
<                 // should be added in, else ignored
<                 *offsp_pt = locus; // record the locus
<                 offsp_pt++; // advance offspring locus pointer
<                 
<                 *offsp_ls = LOCUS_STATUS_VARIABLE_IN_PARENTS; // record the status
<                 offsp_ls++; // advance the status pointer
<                 
<                 nSitesInOffspring++; // increment the total offspring site counter
<                 retainedSites++;
<             }
<             parentalSiteCount++; // one more parental site taken care of
<             variableSitePt++; // increment the variable site pointer
<             
<             totalSitesDone++;
<         }
<         else if ( parentalSiteCount == nTrackedSitesInParents && newMutationSiteCount < nNewMutations ) {
<             // done with parentals, just need to add new
<             *offsp_pt = *newLocusIndexPt; // record the index
<             offsp_pt++; // advance the index pointer
<             
<             *offsp_ls = LOCUS_STATUS_NEW_MUT_ONLY; // record the status
<             offsp_ls++; // advance the status pointer
<             
<             newLocusIndexPt++; // advance new locus index pointer
<             
<             nSitesInOffspring++; // increment the total site counter
<             
<             newMutationSiteCount++;
<             
<             totalSitesDone++;
<             
<             nBrandNewMutations++;
<         }
<         else {
<             fprintf(stderr, "\nError in figureOutOffspringGenomeSites():\n\tcounts aren't working how you think\n\t");
<             fprintf(stderr, "parental count = %li\tnewMutationSiteCount = %li\n\tnTrackedSitesInParents = %llu, nNewMutations = %li\n", parentalSiteCount, newMutationSiteCount, nTrackedSitesInParents, nNewMutations);
<             exit(-1);
<         }
<     }
<     
<     // error checking
<     if ( nNewMutations != newMutationSiteCount ) {
<         fprintf(stderr, "\nError in figureOutOffspringGenomeSites():\n\tnNewMutations (%li) != newMutationSiteCount (%li)\n", nNewMutations, newMutationSiteCount);
<         exit(-1);
<     }
<     if ( newMutationSiteCount != (nRepeatMutations + nBrandNewMutations) ) {
<         fprintf(stderr, "\nError in figureOutOffspringGenomeSites():\n\tnewMutationSiteCount (%li) != (nRepeatMutations (%li) + nBrandNewMutations (%li))\n", newMutationSiteCount, nRepeatMutations, nBrandNewMutations);
<         exit(-1);
<     }
<     if ( totalSitesDone != (parentalSiteCount + newMutationSiteCount) ) {
<         fprintf(stderr, "\nError in figureOutOffspringGenomeSites():\n\ttotalSitesDone (%li) != (parentalSiteCount (%li) + newMutationSiteCount (%li))\n", totalSitesDone, parentalSiteCount, newMutationSiteCount);
<         exit(-1);
<     }
<     
<     if ( VERBOSE && t < 10 ) {
<         printf("\nParental loci and status codes:\n\tnumber\tindex\tcode\n");
<         for ( i = 0; i < nTrackedSitesInParents; i++ ) {
<             locus = *(parentalTrackedSiteIndexes + i);
<             printf("\t%li\t%llu\t%i\n", i, locus, sitesStatuses[locus]);
<         }
<         printf("\nOffspring loci and status codes:\n\tnumber\tindex\tcode\n");
<         for ( i = 0; i < nSitesInOffspring; i++ ) {
<             locus = *(offsp_SiteIndexes + i);
<             printf("\t%li\t%llu\t%i\n", i, locus, offsp_lociStates[i]);
<         }
<         for ( i = 1; i < nSitesInOffspring; i++ ) {
<             if ( *(offsp_SiteIndexes + i) <= *(offsp_SiteIndexes + i - 1) ) {
<                 fprintf(stderr, "\nError in figureOutOffspringGenomeSites():\n\t*(offsp_SiteIndexes + i) (%llu) <= *(offsp_SiteIndexes + i - 1) (%llu)\n", *(offsp_SiteIndexes + i), *(offsp_SiteIndexes + i - 1));
<                 exit(-1);
<             }
<         }
<         
<         printf("\nnSitesInOffspring = %li\nNew sites from mutations = %li, retained sites = %li, repeat mutations = %li\n", nSitesInOffspring, newMutationSiteCount, retainedSites, nRepeatMutations);
<     }
<     
<     return nSitesInOffspring;
< }
630a4,73
> <!DOCTYPE html>
> <html lang="en" class="">
>   <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
>     <meta charset='utf-8'>
>     <meta http-equiv="X-UA-Compatible" content="IE=edge">
>     <meta http-equiv="Content-Language" content="en">
>     <meta name="viewport" content="width=1020">
>     
>     
>     <title>fffits/fffits.c at master · flaxmans/fffits</title>
>     <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
>     <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
>     <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
>     <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
>     <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
>     <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
>     <meta property="fb:app_id" content="1401488693436528">
> 
>       <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="flaxmans/fffits" name="twitter:title" /><meta content="fffits - fast forward-in-time population genetics simulator" name="twitter:description" /><meta content="https://avatars3.githubusercontent.com/u/6106149?v=3&amp;s=400" name="twitter:image:src" />
>       <meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars3.githubusercontent.com/u/6106149?v=3&amp;s=400" property="og:image" /><meta content="flaxmans/fffits" property="og:title" /><meta content="https://github.com/flaxmans/fffits" property="og:url" /><meta content="fffits - fast forward-in-time population genetics simulator" property="og:description" />
>       <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
>     <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
>     <link rel="assets" href="https://assets-cdn.github.com/">
>     <link rel="web-socket" href="wss://live.github.com/_sockets/NjEwNjE0OTpjYzM2N2MzNmFmYzA2YmI2NTA3YTk4Y2MyNzYyMjFhYjo1NTI0MmE1NWY0ZDRmOGUzZmE3MTcxOGVjNWQxMmFkMDQ5NzQ5ODc3OWNlNzVhYmRmYTI1ODJhZWUwMTAyZGNj--c302c821864a3302ff43ff3da3c56f72eb64c3bb">
>     <meta name="pjax-timeout" content="1000">
>     <link rel="sudo-modal" href="/sessions/sudo_modal">
> 
>     <meta name="msapplication-TileImage" content="/windows-tile.png">
>     <meta name="msapplication-TileColor" content="#ffffff">
>     <meta name="selected-link" value="repo_source" data-pjax-transient>
> 
>     <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
>         <meta name="google-analytics" content="UA-3769691-2">
> 
>     <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="808ADCB2:50FB:171A72:55F83117" name="octolytics-dimension-request_id" /><meta content="6106149" name="octolytics-actor-id" /><meta content="flaxmans" name="octolytics-actor-login" /><meta content="3e372ffb91a2a2d6ce57c161a44b791edc2293316a076ecd5af77497fc4e9f9c" name="octolytics-actor-hash" />
>     
>     <meta content="Rails, view, blob#show" data-pjax-transient="true" name="analytics-event" />
>     <meta class="js-ga-set" name="dimension1" content="Logged In">
>       <meta class="js-ga-set" name="dimension4" content="Current repo nav">
>     <meta name="is-dotcom" content="true">
>         <meta name="hostname" content="github.com">
>     <meta name="user-login" content="flaxmans">
> 
>       <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#4078c0">
>       <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">
> 
>     <!-- </textarea> --><!-- '"` --><meta content="authenticity_token" name="csrf-param" />
> <meta content="IfheIWK5lcHvDqZcFz+3RH91i+fXurDfZ7egHuzk+dgPWzIk+jHTuSAX8w/RJjgOeqE/271HJRugrj/kF5G6Qw==" name="csrf-token" />
>     <meta content="57cb58c75544e7494c25941629fb146e2947f588" name="form-nonce" />
> 
>     <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-d1b5abdc908e0d7b1177dec08377119b557ebf6285955d1d4b3a49990b7f2f95.css" media="all" rel="stylesheet" />
>     <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github2-00d70d23e080bb79c83c3daa18cd186d5eb6c23337129c790e06d2f80df593ad.css" media="all" rel="stylesheet" />
>     
>     
> 
> 
>     <meta http-equiv="x-pjax-version" content="5035d51d213df3fbfbf9a20ba491a891">
> 
>       
>   <meta name="description" content="fffits - fast forward-in-time population genetics simulator">
>   <meta name="go-import" content="github.com/flaxmans/fffits git https://github.com/flaxmans/fffits.git">
> 
>   <meta content="6106149" name="octolytics-dimension-user_id" /><meta content="flaxmans" name="octolytics-dimension-user_login" /><meta content="41680112" name="octolytics-dimension-repository_id" /><meta content="flaxmans/fffits" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="41680112" name="octolytics-dimension-repository_network_root_id" /><meta content="flaxmans/fffits" name="octolytics-dimension-repository_network_root_nwo" />
>   <link href="https://github.com/flaxmans/fffits/commits/master.atom" rel="alternate" title="Recent Commits to fffits:master" type="application/atom+xml">
> 
>   </head>
> 
> 
>   <body class="logged_in  env-production macintosh vis-public page-blob">
>     <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
632,634d74
< void finalTasks(unsigned RNG_SEED)
< {
<     printParametersToFiles(RNG_SEED);
636,640d75
<     fclose(dataFile_alleleFreqTS);
<     fclose(dataFile_alleleFreqTSbyPop);
<     fclose(dataFile_SFS_TS);
<     fclose(dataFile_segSiteTS);
<     fclose(dataFile_derivedFixationTS);
642,672d76
<     free(genotypes0);
<     free(genotypes1);
<     free(parentalTrackedSiteIndexes);
<     free(siteIndexes);
<     free(sitesStatuses);
<     free(alleleFrequencies);
<     free(alleleCounts);
<     free(SFScounts);
<     free(siteClassifications);
<     free(DEMOGRAPHIC_CHANGE_TIMES);
<     free(K_VALUES);
<     free(MIGRATION_CHANGE_TIMES);
<     free(M_VALUES);
<     free(abundances);
<     free(selectionCoefficients);
<     free(locations);
<     free(environmentGradient);
<     free(linkageGroupMembership);
< }
< 
< 
< void initializeRNG(unsigned int RNG_SEED)
< {
<     int i;
< 
<     // initialize random number generator
<     // T and r are global variables for the RNG state and calls
<     gsl_rng_env_setup(); // set up the environment variables for the RNG
<     rngType = gsl_rng_mt19937; // Mersenne Twister// for default you can say T = gsl_rng_default;
<     rngState = gsl_rng_alloc(rngType);
<     gsl_rng_set(rngState, RNG_SEED);
674,676d77
< //    for ( i = 0; i < 10; i++ )
< //        printf("%f\n", gsl_rng_uniform(rngState) );
< }
679,742d79
< void makeCumulativeFitnessNumLines(double *fitnessValues, double *fitnessNumLines, long int *individualsInDeme)
< {
<     int pop;
<     long int i, j, nhere, *lipt, masterIndex, count;
<     double fitSum, *dptfnl, fitval, *startpt;
<     
<     dptfnl = fitnessNumLines; // ordered for each deme
<     lipt = individualsInDeme; // list of individual indexes in deme
<     count = 0;
<     for ( pop = 0; pop < nPOPULATIONS; pop++ ) { // go population by population
<         nhere = abundances[pop]; // get total number here
<         if ( nhere > 0 ) {
<             startpt = dptfnl; // save starting point in array
<             masterIndex = *lipt; // individual's index
<             if ( VERBOSE ) {
<                 if ( pop != *(locations + masterIndex) ) {
<                     fprintf(stderr, "\nError in makeCumulativeFitnessNumLines():\n\tlocation (%i) doesn't match pop (%i)!\n", *(locations + masterIndex), pop);
<                     exit(-1);
<                 }
<             }
<             
<             fitval = *(fitnessValues + masterIndex);  // individual's fitness
<             fitSum = fitval; // first individual in deme: set cumulative sum start point
<             *dptfnl = fitval; // save value in fitness number line
<             lipt++; // advance individual indexing pointer
<             dptfnl++; // advance number line pointer
<             
<             for ( i = 1; i < nhere; i++ ) { // start with 1 because 0 done above
<                 masterIndex = *lipt; // individual's index
<                 fitval = *(fitnessValues + masterIndex); // individual's fitness
<                 *dptfnl = *(dptfnl - 1) + fitval; // make number line cumulative;
<                 fitSum += fitval; // store total sum
<                 lipt++; // advance individual's index pointer
<                 dptfnl++; // advance fitness number line pointer
<             }
<             fitSum = 1.0 / fitSum; // now done with this deme's raw numbers; time to normalize
<             for ( i = 0; i < nhere; i++ ) {
<                 *startpt *= fitSum;
<                 startpt++;
<             }
<         }
<     }
<     
<     if ( VERBOSE ) {
<         printf("\n");
<         dptfnl = fitnessNumLines;
<         for ( pop = 0; pop < nPOPULATIONS; pop++ ) {
<             if ( abundances[pop] > 0 ) {
<                 printf("Deme %i, first fit = %f, last fit = %f\n", pop, *dptfnl, *(dptfnl + abundances[pop] - 1));
<                 dptfnl++;
<                 for ( i = 1; i < abundances[pop]; i++ ) {
<                     if ( *dptfnl < *(dptfnl - 1) ) {
<                         printf("\nError in makeCumulativeFitnessNumLines():\n\tDecreasing values in fitness vector:\n\t%f\t%f\n", *dptfnl, *(dptfnl - 1) );
<                         exit(-1);
<                     }
<                     dptfnl++;
<                 }
<             }
<             else
<                 printf("No individuals in Deme %i\n", pop);
<         }
<     }
<     
< }
743a81,140
>       <div class="header header-logged-in true" role="banner">
>   <div class="container clearfix">
> 
>     <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
>   <span class="mega-octicon octicon-mark-github"></span>
> </a>
> 
> 
>       <div class="site-search repo-scope js-site-search" role="search">
>           <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/flaxmans/fffits/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/flaxmans/fffits/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
>   <label class="js-chromeless-input-container form-control">
>     <div class="scope-badge">This repository</div>
>     <input type="text"
>       class="js-site-search-focus js-site-search-field is-clearable chromeless-input"
>       data-hotkey="s"
>       name="q"
>       placeholder="Search"
>       aria-label="Search this repository"
>       data-global-scope-placeholder="Search GitHub"
>       data-repo-scope-placeholder="Search"
>       tabindex="1"
>       autocapitalize="off">
>   </label>
> </form>
>       </div>
> 
>       <ul class="header-nav left" role="navigation">
>         <li class="header-nav-item">
>           <a href="/pulls" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
>             Pull requests
> </a>        </li>
>         <li class="header-nav-item">
>           <a href="/issues" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
>             Issues
> </a>        </li>
>           <li class="header-nav-item">
>             <a class="header-nav-link" href="https://gist.github.com/" data-ga-click="Header, go to gist, text:gist">Gist</a>
>           </li>
>       </ul>
> 
>     
> <ul class="header-nav user-nav right" id="user-links">
>   <li class="header-nav-item">
>       <span class="js-socket-channel js-updatable-content"
>         data-channel="notification-changed:flaxmans"
>         data-url="/notifications/header">
>       <a href="/notifications" aria-label="You have no unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:read" data-hotkey="g n">
>           <span class="mail-status all-read"></span>
>           <span class="octicon octicon-bell"></span>
> </a>  </span>
> 
>   </li>
> 
>   <li class="header-nav-item dropdown js-menu-container">
>     <a class="header-nav-link tooltipped tooltipped-s js-menu-target" href="/new"
>        aria-label="Create new…"
>        data-ga-click="Header, create new, icon:add">
>       <span class="octicon octicon-plus left"></span>
>       <span class="dropdown-caret"></span>
>     </a>
745,802c142,143
< void makeDemesIndexes(long int *individualsInDeme)
< {
<     // this function makes a vector of consecutive indexes in each deme
<     // this is done because -- at times that this is called -- the individuals are unsorted due to migration
<     // with high migration rates, maybe a sort would actually be more efficient???
<     
<     long int i, j, demePosition[nPOPULATIONS], spot;
<     int *ipt, loc;
<     
<     demePosition[0] = 0;
<     for ( i = 1; i < nPOPULATIONS; i++ )
<         demePosition[i] = demePosition[(i-1)] + abundances[(i-1)];
<     
<     
<     ipt = locations;
<     
<     for ( i = 0; i < N; i++ ) {
<         loc = *ipt;
<         spot = demePosition[loc];
<         *(individualsInDeme + spot) = i;
<         demePosition[loc] = demePosition[loc] + 1;
<         
<         ipt++;
<     }
<     
<     if ( VERBOSE ) {
<         FILE *testMakeIndexes;
<         testMakeIndexes = fopen("TestMakeDemesIndexes.txt","w");
<         for ( i = 0; i < N; i++ ) {
<             j = individualsInDeme[i];
<             fprintf(testMakeIndexes, "%li,%i\n", j, locations[j]);
<         }
<         fclose(testMakeIndexes);
<     }
< }
< 
< 
< void makeOneOffspring(long int momIndex, long int dadIndex, short int *offGTpt, long int nSitesInOffspring, unsigned long long int *offsp_SiteIndexes, short int *offsp_lociStates)
< {
<     int i, currentLinkageGroup;
<     unsigned long long int j, focalSite, *offsp_SIpt, *parentalLocusIndexes;
<     short int *sipt, *parentPoint, *offsp_ls;
<     int chromosome;
<     double meanRecombDistance = 1000.0 / RECOMBINATION_RATE_PER_KB;
<     unsigned long long int nextRecombinationSpot;
<     long int parentalLocusCounter;
<     
<     if ( VERBOSE ) {
<         if ( *(locations + momIndex) != *(locations + dadIndex) ) {
<             printf("\nError in makeOneOffspring:\n\tIndexes are off giving bogus mom or dad\n");
<             exit(-1);
<         }
<     }
<     
<     for ( i = 0; i < 2; i++ ) {
<         
<         sipt = offGTpt + i; // which haploid set in offspring
<         
---
>     <div class="dropdown-menu-content js-menu-content">
>       <ul class="dropdown-menu dropdown-menu-sw">
804,909c145,433
<         parentalLocusCounter = 0;
<         parentalLocusIndexes = parentalTrackedSiteIndexes;
<         if ( nTrackedSitesInParents ) {
<             while ( *(sitesStatuses + *parentalLocusIndexes) != LOCUS_STATUS_VARIABLE_IN_PARENTS ) {
<                 parentalLocusCounter++;
<                 parentalLocusIndexes++;
<             }
<         }
<         
<         // which parent
<         if ( i == 0 )
<             parentPoint = gts + (PLOIDY * nTrackedSitesInParents * momIndex ) + (PLOIDY * parentalLocusCounter);
<         else
<             parentPoint = gts + (PLOIDY * nTrackedSitesInParents * dadIndex ) + (PLOIDY * parentalLocusCounter);
<         
<         
<         
<         // which chromosome to start with in the parent
<         if ( gsl_rng_uniform( rngState ) < 0.5 ) {
<             chromosome = 0;
<         }
<         else {
<             chromosome = 1;
<             parentPoint++; // advance 1 to "second" choromosome
<         }
<         currentLinkageGroup = 0;
< 
<         offsp_ls = offsp_lociStates;
<         offsp_SIpt = offsp_SiteIndexes;
<         nextRecombinationSpot = (unsigned long long int) randExp( meanRecombDistance );
<         for ( j = 0; j < nSitesInOffspring; j++ ) {
<             focalSite = *offsp_SIpt;
<             
<             // now copy alleles from parents to offspring
<             if ( *offsp_ls == LOCUS_STATUS_VARIABLE_IN_PARENTS || *offsp_ls == LOCUS_STATUS_VARIABLE_PLUS_MUT ) {
<                 
<                 // first handle recombination and independent assortment
<                 if ( *(linkageGroupMembership + focalSite) != currentLinkageGroup ) {
<                     // new "chromosome"; need to implement independent assortment
<                     if ( gsl_rng_uniform(rngState) < 0.5 ) {
<                         // flip to other chromosome in parent
<                         if ( chromosome ) {
<                             parentPoint--; // move back one
<                             chromosome = 0;
<                         }
<                         else {
<                             parentPoint++; // move forward one
<                             chromosome = 1;
<                         }
<                     }
<                     if ( *(linkageGroupMembership + focalSite) < currentLinkageGroup ) {
<                         fprintf(stderr, "\nError in makeOneOffspring():\n\t*(linkageGroupMembership + focalSite) (%i) < currentLinkageGroup (%i)\n", *(linkageGroupMembership + focalSite), currentLinkageGroup );
<                         exit(-1);
<                     }
<                     currentLinkageGroup = *(linkageGroupMembership + focalSite);
<                     
<                     nextRecombinationSpot = focalSite + ((unsigned long long int) randExp( meanRecombDistance ));
<                 }
<                 else if ( focalSite > nextRecombinationSpot ) {
<                     // implement recombination within a linkage group
<                     do {
<                         // do-while loop allows for multiple recombination events
<                         if ( chromosome ) {
<                             parentPoint--; // move back one
<                             chromosome = 0;
<                         }
<                         else {
<                             parentPoint++; // move forward one
<                             chromosome = 1;
<                         }
<                         nextRecombinationSpot += ((unsigned long long int) randExp( meanRecombDistance ));
<                     } while ( focalSite > nextRecombinationSpot );
<                 }
<                 
<                 *sipt = *parentPoint;
<                 parentalLocusCounter++;  // one more parental locus taken care of
<                 if ( j < (nSitesInOffspring - 1) && parentalLocusCounter < nTrackedSitesInParents ) {
<                     parentalLocusIndexes++; // advance to index of next parental site/locus
<                     parentPoint += PLOIDY; // advance to next site in genome
<                     while ( *(sitesStatuses + *parentalLocusIndexes) != LOCUS_STATUS_VARIABLE_IN_PARENTS && parentalLocusCounter < nTrackedSitesInParents ) {
<                         parentalLocusIndexes++; // advance to index of next parental site/locus
<                         parentPoint += PLOIDY; // advance to next site in genome
<                         parentalLocusCounter++; // count prior locus toward those that are "done"
<                         // the while part helps skip over loci that will no longer be tracked
<                     }
<                 }
<             }
<             else if ( *offsp_ls == LOCUS_STATUS_NEW_MUT_ONLY ) {
<                 *sipt = ALLELE_CODE_ANCESTRAL; // just put in the locus as a placeholder; mutations added later
<                 // do NOT advance any parent pointers or counters
<             }
<             else {
<                 fprintf(stderr, "\nError in makeOneOffspring():\n\t*offsp_ls = %i code not recognized.\n", *offsp_ls);
<                 exit(-1);
<             }
<             
<             if ( *sipt )
<                 *(alleleCounts + focalSite) += *sipt;
<             
<             sipt += PLOIDY;
<             offsp_SIpt++;
<             offsp_ls++;
<         }
<     }
<     
< }
---
> <a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
>   New repository
> </a>
> 
> 
>   <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
>     New organization
>   </a>
> 
> 
> 
>   <div class="dropdown-divider"></div>
>   <div class="dropdown-header">
>     <span title="flaxmans/fffits">This repository</span>
>   </div>
>     <a class="dropdown-item" href="/flaxmans/fffits/issues/new" data-ga-click="Header, create new issue">
>       New issue
>     </a>
>     <a class="dropdown-item" href="/flaxmans/fffits/settings/collaboration" data-ga-click="Header, create new collaborator">
>       New collaborator
>     </a>
> 
>       </ul>
>     </div>
>   </li>
> 
>   <li class="header-nav-item dropdown js-menu-container">
>     <a class="header-nav-link name tooltipped tooltipped-s js-menu-target" href="/flaxmans"
>        aria-label="View profile and more"
>        data-ga-click="Header, show menu, icon:avatar">
>       <img alt="@flaxmans" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/6106149?v=3&amp;s=40" width="20" />
>       <span class="dropdown-caret"></span>
>     </a>
> 
>     <div class="dropdown-menu-content js-menu-content">
>       <div class="dropdown-menu dropdown-menu-sw">
>         <div class="dropdown-header header-nav-current-user css-truncate">
>           Signed in as <strong class="css-truncate-target">flaxmans</strong>
>         </div>
>         <div class="dropdown-divider"></div>
> 
>         <a class="dropdown-item" href="/flaxmans" data-ga-click="Header, go to profile, text:your profile">
>           Your profile
>         </a>
>         <a class="dropdown-item" href="/stars" data-ga-click="Header, go to starred repos, text:your stars">
>           Your stars
>         </a>
>         <a class="dropdown-item" href="/explore" data-ga-click="Header, go to explore, text:explore">
>           Explore
>         </a>
>         <a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
>           Help
>         </a>
>         <div class="dropdown-divider"></div>
> 
>         <a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
>           Settings
>         </a>
> 
>         <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/logout" class="logout-form" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="IN1XRmCtmZHGmh+7aXhKfu3738LkReBBnfW2WN7RWiz0/9MJ3ydovFdTFyjxYJaO6WG6IeH/JVzPEvz1/uldCg==" /></div>
>           <button class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
>             Sign out
>           </button>
> </form>      </div>
>     </div>
>   </li>
> </ul>
> 
> 
>     
>   </div>
> </div>
> 
>       
> 
>       
> 
> 
>     <div id="start-of-content" class="accessibility-aid"></div>
> 
>     <div id="js-flash-container">
> </div>
> 
> 
>     <div role="main" class="main-content">
>         <div itemscope itemtype="http://schema.org/WebPage">
>     <div class="pagehead repohead instapaper_ignore readability-menu">
>       <div class="container">
> 
>         <div class="clearfix">
>           
> <ul class="pagehead-actions">
> 
>   <li>
>       <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="j4WuUNsZMpaALZ2vmN8/bQccsN6xerg3fpdGLbqVOH0TCZNSVAi4j0oa6h9bdM1v20++hky7KfvDQaRp66+sLw==" /></div>    <input id="repository_id" name="repository_id" type="hidden" value="41680112" />
> 
>       <div class="select-menu js-menu-container js-select-menu">
>         <a href="/flaxmans/fffits/subscription"
>           class="btn btn-sm btn-with-count select-menu-button js-menu-target" role="button" tabindex="0" aria-haspopup="true"
>           data-ga-click="Repository, click Watch settings, action:blob#show">
>           <span class="js-select-button">
>             <span class="octicon octicon-eye"></span>
>             Unwatch
>           </span>
>         </a>
>         <a class="social-count js-social-count" href="/flaxmans/fffits/watchers">
>           1
>         </a>
> 
>         <div class="select-menu-modal-holder">
>           <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
>             <div class="select-menu-header">
>               <span class="select-menu-title">Notifications</span>
>               <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
>             </div>
> 
>             <div class="select-menu-list js-navigation-container" role="menu">
> 
>               <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
>                 <span class="select-menu-item-icon octicon octicon-check"></span>
>                 <div class="select-menu-item-text">
>                   <input id="do_included" name="do" type="radio" value="included" />
>                   <span class="select-menu-item-heading">Not watching</span>
>                   <span class="description">Be notified when participating or @mentioned.</span>
>                   <span class="js-select-button-text hidden-select-button-text">
>                     <span class="octicon octicon-eye"></span>
>                     Watch
>                   </span>
>                 </div>
>               </div>
> 
>               <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
>                 <span class="select-menu-item-icon octicon octicon octicon-check"></span>
>                 <div class="select-menu-item-text">
>                   <input checked="checked" id="do_subscribed" name="do" type="radio" value="subscribed" />
>                   <span class="select-menu-item-heading">Watching</span>
>                   <span class="description">Be notified of all conversations.</span>
>                   <span class="js-select-button-text hidden-select-button-text">
>                     <span class="octicon octicon-eye"></span>
>                     Unwatch
>                   </span>
>                 </div>
>               </div>
> 
>               <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
>                 <span class="select-menu-item-icon octicon octicon-check"></span>
>                 <div class="select-menu-item-text">
>                   <input id="do_ignore" name="do" type="radio" value="ignore" />
>                   <span class="select-menu-item-heading">Ignoring</span>
>                   <span class="description">Never be notified.</span>
>                   <span class="js-select-button-text hidden-select-button-text">
>                     <span class="octicon octicon-mute"></span>
>                     Stop ignoring
>                   </span>
>                 </div>
>               </div>
> 
>             </div>
> 
>           </div>
>         </div>
>       </div>
> </form>
>   </li>
> 
>   <li>
>     
>   <div class="js-toggler-container js-social-container starring-container ">
> 
>     <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/flaxmans/fffits/unstar" class="js-toggler-form starred js-unstar-button" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="vehACG2U/SeogkzRNsCGddP2KcmXRnR7VNKIpaNfYqQXoVIBk9A4Drm+cc4ylav9Edx1WmDB/XRrGZbiCZfj0w==" /></div>
>       <button
>         class="btn btn-sm btn-with-count js-toggler-target"
>         aria-label="Unstar this repository" title="Unstar flaxmans/fffits"
>         data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
>         <span class="octicon octicon-star"></span>
>         Unstar
>       </button>
>         <a class="social-count js-social-count" href="/flaxmans/fffits/stargazers">
>           0
>         </a>
> </form>
>     <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/flaxmans/fffits/star" class="js-toggler-form unstarred js-star-button" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="7LOERdL7UJ0KPbDxqqFNEzK7EWRP5O6VAz6xsp81o/d0TI8IdyM8cNlnmM6wiZ/HLPMPiDa0gMglWgZSE3XiCg==" /></div>
>       <button
>         class="btn btn-sm btn-with-count js-toggler-target"
>         aria-label="Star this repository" title="Star flaxmans/fffits"
>         data-ga-click="Repository, click star button, action:blob#show; text:Star">
>         <span class="octicon octicon-star"></span>
>         Star
>       </button>
>         <a class="social-count js-social-count" href="/flaxmans/fffits/stargazers">
>           0
>         </a>
> </form>  </div>
> 
>   </li>
> 
>         <li>
>           <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/flaxmans/fffits/fork" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="X20QXWz0/XwBr/CPVLOE8Pk9njMNAi+5ocQJwF4iLgrcAPrYJmKblUV/ku/kdBF/9V8GcaCokaB+NbuTCMjKDA==" /></div>
>             <button
>                 type="submit"
>                 class="btn btn-sm btn-with-count"
>                 data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
>                 title="Fork your own copy of flaxmans/fffits to your account"
>                 aria-label="Fork your own copy of flaxmans/fffits to your account">
>               <span class="octicon octicon-repo-forked"></span>
>               Fork
>             </button>
>             <a href="/flaxmans/fffits/network" class="social-count">0</a>
> </form>        </li>
> 
> </ul>
> 
>           <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public ">
>   <span class="mega-octicon octicon-repo"></span>
>   <span class="author"><a href="/flaxmans" class="url fn" itemprop="url" rel="author"><span itemprop="title">flaxmans</span></a></span><!--
> --><span class="path-divider">/</span><!--
> --><strong><a href="/flaxmans/fffits" data-pjax="#js-repo-pjax-container">fffits</a></strong>
> 
>   <span class="page-context-loader">
>     <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
>   </span>
> 
> </h1>
> 
>         </div>
>       </div>
>     </div>
> 
>     <div class="container">
>       <div class="repository-with-sidebar repo-container new-discussion-timeline ">
>         <div class="repository-sidebar clearfix">
>           
> <nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
>      role="navigation"
>      data-pjax="#js-repo-pjax-container"
>      data-issue-count-url="/flaxmans/fffits/issues/counts">
>   <ul class="sunken-menu-group">
>     <li class="tooltipped tooltipped-w" aria-label="Code">
>       <a href="/flaxmans/fffits" aria-label="Code" aria-selected="true" class="js-selected-navigation-item selected sunken-menu-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /flaxmans/fffits">
>         <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
>         <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
> </a>    </li>
> 
>       <li class="tooltipped tooltipped-w" aria-label="Issues">
>         <a href="/flaxmans/fffits/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /flaxmans/fffits/issues">
>           <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
>           <span class="js-issue-replace-counter"></span>
>           <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
> </a>      </li>
> 
>     <li class="tooltipped tooltipped-w" aria-label="Pull requests">
>       <a href="/flaxmans/fffits/pulls" aria-label="Pull requests" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g p" data-selected-links="repo_pulls /flaxmans/fffits/pulls">
>           <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull requests</span>
>           <span class="js-pull-replace-counter"></span>
>           <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
> </a>    </li>
> 
>       <li class="tooltipped tooltipped-w" aria-label="Wiki">
>         <a href="/flaxmans/fffits/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g w" data-selected-links="repo_wiki /flaxmans/fffits/wiki">
>           <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
>           <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
> </a>      </li>
>   </ul>
>   <div class="sunken-menu-separator"></div>
>   <ul class="sunken-menu-group">
> 
>     <li class="tooltipped tooltipped-w" aria-label="Pulse">
>       <a href="/flaxmans/fffits/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-selected-links="pulse /flaxmans/fffits/pulse">
>         <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
>         <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
> </a>    </li>
> 
>     <li class="tooltipped tooltipped-w" aria-label="Graphs">
>       <a href="/flaxmans/fffits/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_graphs repo_contributors /flaxmans/fffits/graphs">
>         <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
>         <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
> </a>    </li>
>   </ul>
> 
> 
>     <div class="sunken-menu-separator"></div>
>     <ul class="sunken-menu-group">
>       <li class="tooltipped tooltipped-w" aria-label="Settings">
>         <a href="/flaxmans/fffits/settings" aria-label="Settings" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_settings repo_branch_settings hooks /flaxmans/fffits/settings">
>           <span class="octicon octicon-gear"></span> <span class="full-word">Settings</span>
>           <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
> </a>      </li>
>     </ul>
> </nav>
911,948c435
< 
< void migration(void)
< {
<     long int i, j, counter, focalTime, nhere, nmoving, mover;
<     double cumulativeM, numberLine[nPOPULATIONS], dum, *dpt;
<     long int choiceVector[N], thoseMoving[N], immigrants[nPOPULATIONS], emigrants[nPOPULATIONS];
<     int chosen, dumi;
<     
<     for ( i = 0; i < N; i++ )
<         choiceVector[i] = i;
<     for ( i = 0; i < nPOPULATIONS; i++ ) {
<         immigrants[i] = 0;
<         emigrants[i] = 0;
<     }
<     
<     // check to see if now is a time to change migration rates
<     if ( nMIGRATION_CHANGES > 0 ) {
<         focalTime = MIGRATION_CHANGE_TIMES[currentMigrationPeriod];
<         if ( t == focalTime ) {
<             migRatePt += ( nPOPULATIONS * nPOPULATIONS );
<             currentMigrationPeriod++;
<         }
<     }
<     
<     counter = 0;
<     for ( i = 0; i < nPOPULATIONS; i++ ) {
<         nhere = abundances[i]; // abundance in subpopulation i
<         if ( nhere > 0 ) {
<             cumulativeM = *(migRatePt + (i * nPOPULATIONS)); // first entry in ith "row" of current migration matrix
<             numberLine[0] = cumulativeM;
<             for ( j = 1; j < nPOPULATIONS; j++ ) {
<                 cumulativeM += (*(migRatePt + (i * nPOPULATIONS) + j));
<                 numberLine[j] = cumulativeM;
<             }
<             for ( j = 0; j < nPOPULATIONS; j++ )
<                 numberLine[j] = numberLine[j] / cumulativeM; // normalize
<             
<             if ( cumulativeM > 0.0 ) {
---
>             <div class="only-with-full-nav">
950,2233c437,9490
<                 // determine how many migrate: stochastic
<                 nmoving = gsl_ran_binomial(rngState, cumulativeM, nhere);
<                 
<                 if ( nmoving > 0 ) {
<                     // determine which ones migrate: stochastic
<                     // int gsl_ran_choose (const gsl_rng * r, void * dest, size_t k, void * src, size_t n, size_t size)
<                     gsl_ran_choose( rngState, thoseMoving, nmoving, choiceVector, nhere, sizeof(long int) );
<                     
<                     for ( j = 0; j < nmoving; j++ ) {
<                         dum = gsl_rng_uniform( rngState );
<                         dpt = numberLine;
<                         dumi = 0;
<                         while ( (*dpt) < dum && dumi < nPOPULATIONS) {
<                             dpt++;
<                             dumi++;
<                         }
<                         
<                         if ( i == dumi ) {
<                             fprintf(stderr, "\nError in migration():\n\tmigrator moving to same patch it is already in.\n\tNeed to fix algorithm\n");
<                             exit(-1);
<                         }
<                         
<                         mover = thoseMoving[j];
<                         if ( *(locations + counter + mover) != i ) {
<                             fprintf(stderr, "\nError in migration():\n\tYour mover isn't where you think she is.\n\tNeed to fix algorithm\n");
<                             exit(-1);
<                         }
<                         *(locations + counter + mover) = dumi;
<                         
<                         immigrants[dumi] = immigrants[dumi] + 1;
<                         emigrants[i] = emigrants[i] + 1;
<                         
<                     }
<                     
<                 }
<             }
<         }
<         counter += nhere;
<     }
<     
<     if ( VERBOSE ) {
<         printf("\nAbundances before migration:\n");
<         for ( i = 0; i < nPOPULATIONS; i++ )
<             printf("\t%li", abundances[i]);
<         printf("\nEmigrants:\n");
<         for ( i = 0; i < nPOPULATIONS; i++ )
<             printf("\t%li", emigrants[i]);
<         printf("\nImmigrants:\n");
<         for ( i = 0; i < nPOPULATIONS; i++ )
<             printf("\t%li", immigrants[i]);
<     }
<     
<     for ( i = 0; i < nPOPULATIONS; i++ ) {
<         abundances[i] = abundances[i] + immigrants[i] - emigrants[i];
<     }
<     
<     if ( VERBOSE ) {
<         printf("\nAbundances after migration:\n");
<         for ( i = 0; i < nPOPULATIONS; i++ )
<             printf("\t%li", abundances[i]);
<     }
<     
<     
<     //printf("\nWarning: migration() not written yet!\n");
<     //exit(0);
< }
< 
< 
< void printParametersToFiles(unsigned RNG_SEED)
< {
<     // make an R-sourceable script of parameter values
<     int i, j;
<     FILE *rfile;
<     double *dpt, THETA;
<     unsigned long long int foo;
<     
<     rfile = fopen("metadataAndParameters.R","w");
<     fprintf(rfile, "RNG_SEED <- %u\n", RNG_SEED);
<     fprintf(rfile, "nGENERATIONS <- %li\n", nGENERATIONS);
<     fprintf(rfile, "nPOPULATIONS <- %i\n", nPOPULATIONS);
<     fprintf(rfile, "\n");
<     
<     // demography
<     fprintf(rfile, "# demography\nnDEMOGRAPHIC_CHANGES <- %i\n", nDEMOGRAPHIC_CHANGES);
<     if ( nDEMOGRAPHIC_CHANGES > 0 ) {
<         if ( nDEMOGRAPHIC_CHANGES == 1 )
<             fprintf(rfile, "DEMOGRAPHIC_CHANGE_TIMES <- %li\n", *DEMOGRAPHIC_CHANGE_TIMES);
<         else {
<             fprintf(rfile, "DEMOGRAPHIC_CHANGE_TIMES <- c(%li", *DEMOGRAPHIC_CHANGE_TIMES);
<             for ( i = 1; i < nDEMOGRAPHIC_CHANGES; i++ )
<                 fprintf(rfile, ",%li", *(DEMOGRAPHIC_CHANGE_TIMES + i));
<             fprintf(rfile, ")\n");
<         }
<     }
<     else
<         fprintf(rfile, "DEMOGRAPHIC_CHANGE_TIMES <- -1\n");
<     
<     fprintf(rfile, "K_VALUES <- c(%E", *K_VALUES);
<     for ( i = 1; i < (nPOPULATIONS * (nDEMOGRAPHIC_CHANGES+1)); i++ ) {
<         fprintf(rfile, ",%E", *(K_VALUES+i));
<     }
<     fprintf(rfile, ")\n");
<     fprintf(rfile, "K_VALUES <- matrix(data = K_VALUES, nrow = nDEMOGRAPHIC_CHANGES+1, ncol = nPOPULATIONS, byrow = TRUE)\n");
<     fprintf(rfile, "FIXED_POP_SIZE <- %i\n", FIXED_POP_SIZE);
<     fprintf(rfile, "MAX_POP_GROWTH_RATE <- %E\n", MAX_POP_GROWTH_RATE);
<     fprintf(rfile, "\n");
<     
<     // migration parameters
<     fprintf(rfile, "# migration parameters\nnMIGRATION_CHANGES <- %i\n", nMIGRATION_CHANGES);
<     if ( nMIGRATION_CHANGES > 0 ) {
<         if ( nMIGRATION_CHANGES == 1 )
<             fprintf(rfile, "MIGRATION_CHANGE_TIMES <- %li\n", *MIGRATION_CHANGE_TIMES);
<         else {
<             fprintf(rfile, "MIGRATION_CHANGE_TIMES <- c(%li", *MIGRATION_CHANGE_TIMES);
<             for ( i = 1; i < nMIGRATION_CHANGES; i++ )
<                 fprintf(rfile, ",%li", *(MIGRATION_CHANGE_TIMES + i));
<             fprintf(rfile, ")\n");
<         }
<     }
<     else
<         fprintf(rfile, "MIGRATION_CHANGE_TIMES <- -1\n");
<     dpt = M_VALUES;
<     for ( i = 1; i <= (nMIGRATION_CHANGES + 1); i++ ) {
<         fprintf(rfile, "M_VALUES_period_%i <- c(%E", i, *dpt);
<         dpt++;
<         for ( j = 1; j < (nPOPULATIONS * nPOPULATIONS); j++ ) {
<             fprintf(rfile, ",%E", *dpt);
<             dpt++;
<         }
<         fprintf(rfile, ")\n");
<         fprintf(rfile, "M_VALUES_period_%i <- matrix(data = M_VALUES_period_%i, nrow = nPOPULATIONS, ncol = nPOPULATIONS, byrow = TRUE)\n", i, i);
<     }
<     fprintf(rfile, "\n");
<     
<     // genome
<     fprintf(rfile, "# genome parameters\nnSITES <- %llu\n", nSITES);
<     fprintf(rfile, "nLINKAGE_GROUPS <- %i\n", nLINKAGE_GROUPS);
<     fprintf(rfile, "PLOIDY <- %i\n", PLOIDY);
<     fprintf(rfile, "RECOMBINATION_RATE_PER_KB <- %E\n", RECOMBINATION_RATE_PER_KB);
<     fprintf(rfile, "MU <- %E\n", MU);
<     fprintf(rfile, "GENOME_MU <- %E\n", GENOME_MU);
<     foo = N * PLOIDY * nSITES;
<     THETA = 2.0 * MU * ((double) foo);
<     fprintf(rfile, "THETA <- %E\n", THETA);
<     fprintf(rfile, "\n");
<     
<     // natural selection
<     fprintf(rfile, "# natural selection\nINCLUDE_SELECTION <- %i\n", INCLUDE_SELECTION);
<     fprintf(rfile, "MEAN_S_BGS <- %E\n", MEAN_S_BGS);
<     fprintf(rfile, "MEAN_S_POS <- %E\n", MEAN_S_POS);
<     fprintf(rfile, "MEAN_S_DIV <- %E\n", MEAN_S_DIV);
<     fprintf(rfile, "PROBABILITY_SITE_BGS <- %E\n", PROBABILITY_SITE_BGS);
<     fprintf(rfile, "PROBABILITY_SITE_POS <- %E\n", PROBABILITY_SITE_POS);
<     fprintf(rfile, "PROBABILITY_SITE_DIV <- %E\n", PROBABILITY_SITE_DIV);
<     fprintf(rfile, "ENVIRONMENT_TYPE <- %i\n", ENVIRONMENT_TYPE);
<     fprintf(rfile, "ENVT_MIN <- %E\n", ENVT_MIN);
<     fprintf(rfile, "ENVT_MAX <- %E\n", ENVT_MAX);
<     fprintf(rfile, "environmentGradient <- c(%E", *environmentGradient);
<     for ( i = 1; i < nPOPULATIONS; i++ )
<         fprintf(rfile, ",%E", *(environmentGradient + i));
<     fprintf(rfile, ")\n");
<     fprintf(rfile, "FITNESS_MODEL <- %i\n", FITNESS_MODEL);
<     fprintf(rfile, "\n");
<     
<     // codes and magic numbers
<     fprintf(rfile, "# codes and magic numbers\nnSITE_CLASSES <- %i\n", nSITE_CLASSES);
<     fprintf(rfile, "SITE_CLASS_NEUTRAL <- %i\n", SITE_CLASS_NEUTRAL);
<     fprintf(rfile, "SITE_CLASS_BGS <- %i\n", SITE_CLASS_BGS);
<     fprintf(rfile, "SITE_CLASS_POS <- %i\n", SITE_CLASS_POS);
<     fprintf(rfile, "SITE_CLASS_DIV <- %i\n", SITE_CLASS_DIV);
<     fprintf(rfile, "ALLELE_CODE_ANCESTRAL <- %i\n", ALLELE_CODE_ANCESTRAL);
<     fprintf(rfile, "ALLELE_CODE_DERIVED <- %i\n", ALLELE_CODE_DERIVED);
<     fprintf(rfile, "ENVT_TYPE_GRADIENT <- %i\n", ENVT_TYPE_GRADIENT);
<     fprintf(rfile, "ENVT_TYPE_MOSAIC <- %i\n", ENVT_TYPE_MOSAIC);
<     fprintf(rfile, "ENVT_TYPE_INVARIANT <- %i\n", ENVT_TYPE_INVARIANT);
<     
<     fprintf(rfile, "FITNESS_MODEL_ADDITIVE <- %i\n", FITNESS_MODEL_ADDITIVE);
<     fprintf(rfile, "FITNESS_MODEL_MULTIPLICATIVE <- %i\n", FITNESS_MODEL_MULTIPLICATIVE);
<     fprintf(rfile, "LOCUS_STATUS_INACTIVE <- %i\n", LOCUS_STATUS_INACTIVE);
<     fprintf(rfile, "LOCUS_STATUS_VARIABLE_IN_PARENTS <- %i\n", LOCUS_STATUS_VARIABLE_IN_PARENTS);
<     fprintf(rfile, "LOCUS_STATUS_VARIABLE_PLUS_MUT <- %i\n", LOCUS_STATUS_VARIABLE_PLUS_MUT);
<     fprintf(rfile, "LOCUS_STATUS_NEW_MUT_ONLY <- %i\n", LOCUS_STATUS_NEW_MUT_ONLY);
<     fprintf(rfile, "LOCUS_STATUS_TRACKED_IN_PARENTS <- %i\n", LOCUS_STATUS_TRACKED_IN_PARENTS);
<     fprintf(rfile, "CODOMINANCE <- %E\n", CODOMINANCE);
<     fprintf(rfile, "\n");
<     
<     // states at end of run
<     fprintf(rfile, "#states of variables at the end of the run\nN <- %li\n", N);
<     fprintf(rfile, "nSelectedSites <- %li\n", nSelectedSites);
<     fprintf(rfile, "nTrackedSitesInParents <- %llu\n", nTrackedSitesInParents);
<     fprintf(rfile, "abundances <- c(%li", abundances[0]);
<     for ( i = 1; i < nPOPULATIONS; i++ )
<         fprintf(rfile, ",%li", abundances[i]);
<     fprintf(rfile, ")\n");
<     
<     fprintf(rfile, "\n");
<     
<     fclose(rfile);
< }
< 
< 
< void putInMutations( short int *offspringGTs, short int *offsp_lociStates, unsigned long long int *offsp_SiteIndexes, long int nNewMutations, long int totalOffspring, long int nSitesInOffspring )
< {
<     long int i, individual, totalMutsAdded = 0;
<     short int *spot, *offsp_ls;
<     unsigned long long int locus;
<     
<     // only considering a possibility of two different alleles at each site
< 
<     offsp_ls = offsp_lociStates;
<     for ( i = 0; i < nSitesInOffspring; i++ ) {
<         if ( *offsp_ls == LOCUS_STATUS_NEW_MUT_ONLY || *offsp_ls == LOCUS_STATUS_VARIABLE_PLUS_MUT ) {
<             individual = gsl_rng_uniform_int( rngState, totalOffspring );
<             //unsigned long int gsl_rng_uniform_int (const gsl_rng * r, unsigned long int n)
<             //this function returns a random integer from 0 to n-1
<             spot = offspringGTs + ( PLOIDY * nSitesInOffspring * individual ) + ( i * PLOIDY );
<             // spot = site in genome array
<             
<             // choose one of the two alleles at random
<             if ( gsl_rng_uniform( rngState ) < 0.5 )
<                 spot++;
<             
<             locus = *(offsp_SiteIndexes + i);
<             
<             // if it is a derived allele, mutate it back to the ancestral state
<             if ( *spot == ALLELE_CODE_DERIVED ) {
<                 *spot = ALLELE_CODE_ANCESTRAL;
<                 *(alleleCounts + locus) -= 1;
<             }
<             else {
<                 // otherwise, insert a derived allele
<                 *spot = ALLELE_CODE_DERIVED;
<                 *(alleleCounts + locus) += 1;
<             }
<             
<             // double check allele counts
<             if ( *(alleleCounts + locus) > (PLOIDY * N) ) {
<                 fprintf(stderr, "\nError in putInMutations():\n\t*(alleleCounts + locus) (%llu) out of bounds\n", *(alleleCounts + locus));
<                 exit(-1);
<             }
<             
<             totalMutsAdded++;
<         }
<         offsp_ls++;
<     }
<     
<     if ( totalMutsAdded != nNewMutations ) {
<         fprintf( stderr, "\nError in putInMutations():\n\ttotalMutsAdded (%li) != nNewMutations (%li)\n", totalMutsAdded, nNewMutations);
<         exit(-1);
<     }
<     
< }
< 
< 
< double randExp(double meanValue)
< {
<     return ( (log(1.0 - gsl_rng_uniform(rngState))) * (-meanValue) );
< }
< 
< 
< unsigned readInParametersFromFile(void)
< {
<     char c, option[80], option2[80];
<     long int INITIAL_N;
<     unsigned long long int foo;
<     int i, j, k, dumi, temp;
<     unsigned RNG_SEED = 1;
<     double value;
<     FILE *pfile;
<     _Bool nPopSet = 0, migrationSet = 0, demographySet = 0;
<     
<     pfile = fopen("parameters.ini.txt", "r");
<     if ( pfile == NULL ) {
<         fprintf(stderr, "\nError in readInParametersFromFile():\n\tparameters.ini.txt not found!\n");
<         exit(-1);
<     }
<     
<     // the action of reading.  Order of things in parameters.ini.txt file matters!
<     while ( !feof(pfile) ) {
<         fscanf(pfile, "%s", option);
<         
<         if ( !strcmp( option, "RNG_SEED" ) ) { // set RNG seed value
<             fscanf(pfile, "%i", &RNG_SEED);
<             if ( VERBOSE )
<                 printf("Found RNG_SEED (%s) = %u\n", option, RNG_SEED);
<         }
<         else if ( !strcmp( option, "nGENERATIONS" ) ) { // set RNG seed value
<             fscanf(pfile, "%li", &nGENERATIONS);
<             if ( VERBOSE )
<                 printf("Found nGENERATIONS (%s) = %li\n", option, nGENERATIONS);
<         }
<         else if ( !strcmp( option, "nPOPULATIONS" ) ) { // set number of populations
<             fscanf(pfile, "%i", &nPOPULATIONS);
<             nPopSet = 1;
<             if ( nPOPULATIONS < 0 ) {
<                 fprintf(stderr, "\nError in readInParametersFromFile():\n\t");
<                 fprintf(stderr, "nPOPULATIONS (%i) < 0\n\t", nPOPULATIONS);
<                 fprintf(stderr, "*** Exiting *** \n");
<                 exit(-1);
<             }
<             if ( VERBOSE )
<                 printf("Found nPOPULATIONS (%s) = %i\n", option, nPOPULATIONS);
<         }
<         else if ( !strcmp( option, "nDEMOGRAPHIC_CHANGES" ) ) { // set demography
<             if ( !nPopSet ) {
<                 fprintf(stderr, "\nWarning in readInParametersFromFile():\n\t");
<                 fprintf(stderr, "nPOPULATIONS should be set in parameters.ini.txt before nDEMOGRAPHIC_CHANGES\n\t");
<             }
<             
<             demographySet = 1;
<             
<             // number of demographic events:
<             fscanf(pfile, "%i", &nDEMOGRAPHIC_CHANGES);
<             if ( VERBOSE)
<                 printf("Found nDEMOGRAPHIC_CHANGES (%s) = %i\n", option, nDEMOGRAPHIC_CHANGES);
<             
<             // times of demographic events:
<             fscanf(pfile, "%s", option);
<             if ( strcmp( option, "DEMOGRAPHIC_CHANGE_TIMES" ) ) {
<                 wrongParametersIniOption( "DEMOGRAPHIC_CHANGE_TIMES", "nDEMOGRAPHIC_CHANGES", option );
<             }
<             else {
<                 if ( nDEMOGRAPHIC_CHANGES > 0 ) {
<                     DEMOGRAPHIC_CHANGE_TIMES = (long int *) malloc( nDEMOGRAPHIC_CHANGES * sizeof(long int));
<                     for ( i = 0; i < nDEMOGRAPHIC_CHANGES; i++ ) {
<                         fscanf(pfile, "%li", (DEMOGRAPHIC_CHANGE_TIMES + i));
<                     }
<                 }
<                 else {
<                     DEMOGRAPHIC_CHANGE_TIMES = (long int *) malloc( sizeof(long int) );
<                     *DEMOGRAPHIC_CHANGE_TIMES = 0;
<                 }
<             }
<             
<             // K values for demographic event periods:
<             fscanf(pfile, "%s", option);
<             if ( strcmp( option, "K_VALUES" ) ) {
<                 wrongParametersIniOption( "K_VALUES", "DEMOGRAPHIC_CHANGE_TIMES", option );
<             }
<             else {
<                 INITIAL_N = 0;
<                 K_VALUES = (double *) malloc( (nDEMOGRAPHIC_CHANGES + 1) * nPOPULATIONS * sizeof(double) );
<                 for ( i = 0; i < ((nDEMOGRAPHIC_CHANGES + 1) * nPOPULATIONS); i++ ) {
<                     fscanf(pfile, "%lf", (K_VALUES + i));
<                     if ( i < nPOPULATIONS )
<                         INITIAL_N += K_VALUES[i];
<                     if ( *(K_VALUES+i) < 0.0 ) {
<                         fprintf(stderr, "\nError in readInParametersFromFile():\n\t");
<                         fprintf(stderr, "K_VALUES should be non-negative, but instead found %iith value = %f.\n\tPlease fix parameters.ini.txt\n", (i+1), *(K_VALUES+i));
<                         fprintf(stderr, "\n\t\t*** Exiting *** \n\n");
<                         exit(-1);
<                     }
<                 }
<             }
<             // test check
<             if ( VERBOSE ) {
<                 printf("Found DEMOGRAPHIC_CHANGE_TIMES: ");
<                 for ( i = 0; i < nDEMOGRAPHIC_CHANGES; i++ ) {
<                     printf(" %li", DEMOGRAPHIC_CHANGE_TIMES[i]);
<                 }
<                 printf("\nINITIAL_N = %li\nFound the following K_VALUES:\n", INITIAL_N);
<                 for ( i = 0; i < ((nDEMOGRAPHIC_CHANGES + 1) * nPOPULATIONS); i++ ) {
<                     printf("\t%f", K_VALUES[i]);
<                     if ( i % nPOPULATIONS == nPOPULATIONS - 1 )
<                         printf("\n");
<                 }
<             }
<             
< 
<         }
<         else if ( !strcmp( option, "FIXED_POP_SIZE"  ) ) { // whether or not ppulation sizes are fixed
<             fscanf(pfile, "%i", &temp);
<             FIXED_POP_SIZE = temp;
<             if ( VERBOSE )
<                 printf("Found FIXED_POP_SIZE (%s) = %i\n", option, FIXED_POP_SIZE);
<         }
<         else if ( !strcmp( option, "MAX_POP_GROWTH_RATE"  ) ) { // maximum population growth rate in logistic equation
<             fscanf(pfile, "%lf", &MAX_POP_GROWTH_RATE);
<             if ( FIXED_POP_SIZE ) {
<                 fprintf(stderr, "\nWarning in readInParametersFromFile():\n\t");
<                 fprintf(stderr, "Since population size is fixed, MAX_POP_GROWTH_RATE won't be used\n\t");
<             }
<             else if ( VERBOSE )
<                 printf("Found MAX_POP_GROWTH_RATE (%s) = %f\n", option, MAX_POP_GROWTH_RATE);
<         }
<         else if ( !strcmp( option, "nMIGRATION_CHANGES" ) ) { // set up migration rates
<             if ( !nPopSet ) {
<                 fprintf(stderr, "\nWarning in readInParametersFromFile():\n\t");
<                 fprintf(stderr, "nPOPULATIONS should be set in parameters.ini.txt before nMIGRATION_CHANGES\n\t");
<             }
<             migrationSet = 1;
<             
<             // number of migration change events:
<             fscanf(pfile, "%i", &nMIGRATION_CHANGES);
<             if ( VERBOSE )
<                 printf("Found nMIGRATION_CHANGES (%s) = %i\n", option, nMIGRATION_CHANGES);
<             
<             // times of migration change events:
<             fscanf(pfile, "%s", option);
<             if ( strcmp( option, "MIGRATION_CHANGE_TIMES" ) ) {
<                 wrongParametersIniOption( "MIGRATION_CHANGE_TIMES", "nMIGRATION_CHANGES", option);
<             }
<             else {
<                 if ( nMIGRATION_CHANGES > 0 ) {
<                     MIGRATION_CHANGE_TIMES = (long int *) malloc( nMIGRATION_CHANGES * sizeof(long int));
<                     for ( i = 0; i < nMIGRATION_CHANGES; i++ ) {
<                         fscanf(pfile, "%li", (MIGRATION_CHANGE_TIMES + i));
<                     }
<                 }
<                 else {
<                     MIGRATION_CHANGE_TIMES = (long int *) malloc( sizeof(long int) );
<                     *MIGRATION_CHANGE_TIMES = 0;
<                 }
<             }
<             
<             // migration rate values for periods.  expecting nPOPULATIONS x nPOPULATIONS entries (like a matrix) for each period
<             fscanf(pfile, "%s", option);
<             if ( strcmp( option, "M_VALUES" ) ) {
<                 wrongParametersIniOption( "M_VALUES", "MIGRATION_CHANGE_TIMES", option);
<             }
<             else {
<                 M_VALUES = (double *) malloc( nPOPULATIONS * nPOPULATIONS * (nMIGRATION_CHANGES + 1) * sizeof(double) );
<                 dumi = 0;
<                 for ( i = 0; i < (nMIGRATION_CHANGES+1); i++ ) {
<                     for ( j = 0; j < nPOPULATIONS; j++ ) {
<                         for ( k = 0; k < nPOPULATIONS; k++ ) {
<                             fscanf(pfile, "%lf", (M_VALUES + dumi));
<                             value =  *(M_VALUES + dumi);
<                             if ( value < 0.0 || value > 1.0 ) {
<                                 fprintf(stderr, "\nError in readInParametersFromFile():\n\t");
<                                 fprintf(stderr, "found migration rate value out of bounds [0,1] = %f\n\t", value);
<                                 fprintf(stderr, "Please fix parameters.ini.txt\n");
<                                 fprintf(stderr, "\n\t\t*** Exiting *** \n\n");
<                                 exit(-1);
<                             }
<                             else if ( j == k && value > 0.0 ) {
<                                 fprintf(stderr, "\nError in readInParametersFromFile():\n\t");
<                                 fprintf(stderr, "found non-zero migration rate on diagonal = %f\n\t", value);
<                                 fprintf(stderr, "Please fix parameters.ini.txt\n");
<                                 fprintf(stderr, "\n\t\t*** Exiting *** \n\n");
<                                 exit(-1);
<                             }
<                             dumi++;
<                         }
<                     }
<                 }
<             }
<             // test check
<             if ( VERBOSE ) {
<                 printf("Found MIGRATION_CHANGE_TIMES: ");
<                 for ( i = 0; i < nMIGRATION_CHANGES; i++ ) {
<                     printf(" %li", MIGRATION_CHANGE_TIMES[i]);
<                 }
<                 printf("\nFound M_VALUES:\n");
<                 dumi = 0;
<                 for ( i = 0; i < (nMIGRATION_CHANGES+1); i++ ) {
<                     for ( j = 0; j < nPOPULATIONS; j++ ) {
<                         for ( k = 0; k < nPOPULATIONS; k++ ) {
<                             printf("\t%f", M_VALUES[dumi++]);
<                         }
<                         printf("\n");
<                     }
<                     printf("\n");
<                 }
<             }
<             
<             
<         }
<         else if ( !strcmp( option, "nSITES"  ) ) { // total number of sites in genome
<             fscanf(pfile, "%llu", &nSITES);
<             if ( nSITES < 1 ) {
<                 fprintf(stderr, "\nError in readInParametersFromFile():\n\tnSITES (= %llu) should be > 1\n", nSITES);
<                 fprintf(stderr, "Please fix parameters.ini.txt\n");
<                 fprintf(stderr, "\n\t\t*** Exiting *** \n\n");
<                 exit(-1);
<             }
<             // test check
<             if ( VERBOSE )
<                 printf("Found nSITES (%s) = %llu\n", option, nSITES);
<         }
<         else if ( !strcmp( option, "nLINKAGE_GROUPS"  ) ) { // total number of sites in genome
<             fscanf(pfile, "%i", &nLINKAGE_GROUPS);
<             if ( nLINKAGE_GROUPS < 1 ) {
<                 fprintf(stderr, "\nError in readInParametersFromFile():\n\nLINKAGE_GROUPS (= %i) should be > 1\n", nLINKAGE_GROUPS);
<                 fprintf(stderr, "Please fix parameters.ini.txt\n");
<                 fprintf(stderr, "\n\t\t*** Exiting *** \n\n");
<                 exit(-1);
<             }
<             // test check
<             if ( VERBOSE )
<                 printf("Found nLINKAGE_GROUPS (%s) = %i\n", option, nLINKAGE_GROUPS);
<         }
<         else if ( !strcmp( option, "RECOMBINATION_RATE_PER_KB"  ) ) { // background selection mean coefficient
<             fscanf(pfile, "%lf", &RECOMBINATION_RATE_PER_KB);
<             if ( VERBOSE )
<                 printf("Found RECOMBINATION_RATE_PER_KB (%s) = %f\n", option, RECOMBINATION_RATE_PER_KB);
<         }
<         else if ( !strcmp( option, "MU"  ) ) { // background selection mean coefficient
<             fscanf(pfile, "%lf", &MU);
<             if ( VERBOSE )
<                 printf("Found MU (%s) = %E\n", option, MU);
<         }
<         else if ( !strcmp( option, "INCLUDE_SELECTION"  ) ) { // using selection
<             fscanf(pfile, "%i", &temp);
<             INCLUDE_SELECTION = temp;
<             if ( VERBOSE )
<                 printf("Found INCLUDE_SELECTION (%s) = %i\n", option, INCLUDE_SELECTION);
<         }
<         else if ( !strcmp( option, "MEAN_S_BGS"  ) ) { // background selection mean coefficient
<             fscanf(pfile, "%lf", &MEAN_S_BGS);
<             if ( VERBOSE )
<                 printf("Found MEAN_S_BGS (%s) = %f\n", option, MEAN_S_BGS);
<         }
<         else if ( !strcmp( option, "MEAN_S_POS"  ) ) { // positive selection mean coefficient
<             fscanf(pfile, "%lf", &MEAN_S_POS);
<             if ( VERBOSE )
<                 printf("Found MEAN_S_POS (%s) = %f\n", option, MEAN_S_POS);
<         }
<         else if ( !strcmp( option, "MEAN_S_DIV"  ) ) { // divergent selection mean coefficient
<             fscanf(pfile, "%lf", &MEAN_S_DIV);
<             if ( VERBOSE )
<                 printf("Found MEAN_S_DIV (%s) = %f\n", option, MEAN_S_DIV);
<         }
<         else if ( !strcmp( option, "PROBABILITY_SITE_BGS"  ) ) { // divergent selection mean coefficient
<             fscanf(pfile, "%lf", &PROBABILITY_SITE_BGS);
<             if ( VERBOSE )
<                 printf("Found PROBABILITY_SITE_BGS (%s) = %f\n", option, PROBABILITY_SITE_BGS);
<         }
<         else if ( !strcmp( option, "PROBABILITY_SITE_POS"  ) ) { // divergent selection mean coefficient
<             fscanf(pfile, "%lf", &PROBABILITY_SITE_POS);
<             if ( VERBOSE )
<                 printf("Found PROBABILITY_SITE_POS (%s) = %f\n", option, PROBABILITY_SITE_POS);
<         }
<         else if ( !strcmp( option, "PROBABILITY_SITE_DIV"  ) ) { // divergent selection mean coefficient
<             fscanf(pfile, "%lf", &PROBABILITY_SITE_DIV);
<             if ( VERBOSE )
<                 printf("Found PROBABILITY_SITE_DIV (%s) = %f\n", option, PROBABILITY_SITE_DIV);
<         }
<         else if ( !strcmp( option, "ENVIRONMENT_TYPE"  ) ) { // divergent selection mean coefficient
<             fscanf(pfile, "%s", option2);
<             if ( !strcmp( option2, "GRADIENT" ) )
<                 ENVIRONMENT_TYPE = ENVT_TYPE_GRADIENT;
<             else if ( !strcmp( option2, "MOSAIC" ) )
<                 ENVIRONMENT_TYPE = ENVT_TYPE_MOSAIC;
<             else if ( !strcmp( option2, "INVARIANT" ) )
<                 ENVIRONMENT_TYPE = ENVT_TYPE_INVARIANT;
<             else {
<                 fprintf(stderr, "\nError in readInParametersFromFile():\n\tENVIRONMENT_TYPE option (%s) not recognized.", option2);
<                 fprintf(stderr, "\n\tUsable options are 'GRADIENT', 'MOSAIC', and 'INVARIANT'.\n\tPlease fix parameters.ini.txt\n");
<                 fprintf(stderr, "\n\t\t*** Exiting *** \n\n");
<                 exit(-1);
<             }
<             if ( VERBOSE )
<                 printf("Found ENVIRONMENT_TYPE (%s) = %s = %i\n", option, option2, ENVIRONMENT_TYPE);
<         }
<         else if ( !strcmp( option, "ENVT_MIN"  ) ) { // divergent selection mean coefficient
<             fscanf(pfile, "%lf", &ENVT_MIN);
<             if ( VERBOSE )
<                 printf("Found ENVT_MIN (%s) = %f\n", option, ENVT_MIN);
<         }
<         else if ( !strcmp( option, "ENVT_MAX"  ) ) { // divergent selection mean coefficient
<             fscanf(pfile, "%lf", &ENVT_MAX);
<             if ( VERBOSE )
<                 printf("Found ENVT_MAX (%s) = %f\n", option, ENVT_MAX);
<         }
<         else if ( !strcmp( option, "FITNESS_MODEL"  ) ) { // divergent selection mean coefficient
<             fscanf(pfile, "%s", option2);
<             if ( !strcmp( option2, "ADDITIVE" ) )
<                 FITNESS_MODEL = FITNESS_MODEL_ADDITIVE;
<             else if ( !strcmp( option2, "MULTIPLICATIVE" ) )
<                 FITNESS_MODEL = FITNESS_MODEL_MULTIPLICATIVE;
<             else {
<                 fprintf(stderr, "\nError in readInParametersFromFile():\n\tFITNESS_MODEL option (%s) not recognized.", option2);
<                 fprintf(stderr, "\n\tUsable options are 'ADDITIVE' and 'MULTIPLICATIVE'.\n\tPlease fix parameters.ini.txt\n");
<                 fprintf(stderr, "\n\t\t*** Exiting *** \n\n");
<                 exit(-1);
<             }
<             if ( VERBOSE )
<                 printf("Found ENVIRONMENT_TYPE (%s) = %s = %i\n", option, option2, FITNESS_MODEL);
<         }
<         else if ( !strcmp( option, "TIME_SERIES_SAMPLE_FREQ"  ) ) { // divergent selection mean coefficient
<             fscanf(pfile, "%li", &TIME_SERIES_SAMPLE_FREQ);
<             if ( VERBOSE )
<                 printf("Found TIME_SERIES_SAMPLE_FREQ (%s) = %li\n", option, TIME_SERIES_SAMPLE_FREQ);
<         }
< 
<         
<         option[0] = '\0'; // reset to avoid double setting last option
<         option2[0] = '\0';
<     }
<     
<     fclose(pfile);
<     
<     PROBABILITY_SITE_NEUTRAL = 1.0 - (PROBABILITY_SITE_BGS + PROBABILITY_SITE_DIV + PROBABILITY_SITE_POS);
<     if ( PROBABILITY_SITE_NEUTRAL < 0.0 || PROBABILITY_SITE_BGS < 0.0 || PROBABILITY_SITE_POS < 0.0 || PROBABILITY_SITE_DIV < 0.0 ) {
<         fprintf(stderr, "\nError in readInParametersFromFile():\n\t");
<         fprintf(stderr, "One or more PROBABILITY_SITE_... variables out of bounds\n\t");
<         fprintf(stderr, "Please fix parameters.ini.txt\n");
<         fprintf(stderr, "\n\t\t*** Exiting *** \n\n");
<         exit(-1);
<     }
<     
<     if ( !demographySet ) {
<         INITIAL_N = 0;
<         nDEMOGRAPHIC_CHANGES = 0;
<         DEMOGRAPHIC_CHANGE_TIMES = (long int *) malloc( sizeof(long int) );
<         *DEMOGRAPHIC_CHANGE_TIMES = 0;
<         K_VALUES = (double *) malloc( nPOPULATIONS * sizeof(double) );
<         for ( i = 0; i < nPOPULATIONS; i++ ) {
<             K_VALUES[i] = K_DEFAULT;
<             INITIAL_N += K_DEFAULT;
<         }
<         if ( VERBOSE )
<             printf("\nINITIAL_N = %li\n", INITIAL_N);
<     }
<     if ( !migrationSet ) {
<         nMIGRATION_CHANGES = 0;
<         MIGRATION_CHANGE_TIMES = (long int *) malloc( sizeof( long int ) );
<         *MIGRATION_CHANGE_TIMES = 0;
<         M_VALUES = (double *) malloc( nPOPULATIONS * nPOPULATIONS * sizeof(double) );
<         k = 0;
<         for ( i = 0; i < nPOPULATIONS; i++ ) {
<             for ( j = 0; j < nPOPULATIONS; j++ ) {
<                 if ( i == j )
<                     M_VALUES[k] = 0.0;
<                 else
<                     M_VALUES[k] = MIGRATION_RATE_DEFAULT;
<                 k++;
<             }
<         }
<     }
<     KvalPt = K_VALUES;
<     migRatePt = M_VALUES;
<     
<     
<     /* printf("\nWarning: not done writing readInParametersFromFile().\nNeed to write code for cases when paramters are left out.\nAnd probably other stuff too.\n\n"); */
<     
<     //exit(0);
<     N = INITIAL_N;
<     GENOME_MU = MU * ((double) PLOIDY) * ((double) nSITES);
<     
<     return RNG_SEED;
< }
< 
< 
< 
< void reproduction(void)
< {
<     int pop, *locpt, *offspringLocations;
<     long int i, j, noffspring[nPOPULATIONS], totalOffspring, mommy, daddy, noff, nhere;
<     long int momIndex, dadIndex, driftLosses, actuallyVariable;
<     short int *offspringGTs, *sipt;
<     long int individualsInDeme[N], nNewMutations, *lipt, randomNumberLine[N], nSitesInOffspring, maxSitesInOffspring;
<     double mutRate;
<     double fitnessValues[N], fitnessNumLines[N], *dpt;
<     unsigned long long int locus, *ullipt;
<     unsigned long long int *offsp_SiteIndexes;
<     
<     if ( INCLUDE_SELECTION )
<         computeFitness(fitnessValues);
<     else {
<         for ( i = 0; i < N; i++ ) {
<             randomNumberLine[i] = i;
<         }
<     }
<     
<     totalOffspring = 0;
<     for ( pop = 0; pop < nPOPULATIONS; pop++ ) {
<         noffspring[pop] = calculateNumOffspring(pop);
<         totalOffspring += noffspring[pop];
<     }
< 
<     offspringLocations = (int *) malloc( totalOffspring * sizeof(int) );
<     
<     if ( VERBOSE ) {
<         printf("\nNumber of offspring in each deme:\n");
<         for ( i = 0; i < nPOPULATIONS; i++ )
<             printf("\t%li", noffspring[i]);
<         printf("\n");
<     }
< 
<     // figure out how many mutations and which sites, including possibility for repeat and back mutation
<     nNewMutations = gsl_ran_poisson( rngState, (GENOME_MU * ((double) totalOffspring)) );
<     unsigned long long int mutatedLoci[nNewMutations];
<     gsl_ran_choose( rngState, mutatedLoci, nNewMutations, siteIndexes, nSITES, sizeof(unsigned long long int) );
<     maxSitesInOffspring = nTrackedSitesInParents + nNewMutations;
<     short int offsp_lociStates[maxSitesInOffspring];
<     offsp_SiteIndexes = (unsigned long long int *) malloc( maxSitesInOffspring * sizeof( unsigned long long int ) );
<     
<     // determine which sites will need to be tracked among offspring
<     nSitesInOffspring = figureOutOffspringGenomeSites( offsp_SiteIndexes, offsp_lociStates, nNewMutations, mutatedLoci );
<     
<     // debug
<     //printf("\nreproduction: time, nTrackedSitesInParents, nSitesInOffspring, nNewMutations, N\n\t%li\t%llu\t%li\t%li\t%li", t, nTrackedSitesInParents, nSitesInOffspring, nNewMutations, N);
<     
<     // make convenient arrays for choosing parents
<     makeDemesIndexes(individualsInDeme); // this is instead of doing a sort; maybe doing a sort will turn out to be better???
<     if ( INCLUDE_SELECTION )
<         makeCumulativeFitnessNumLines( fitnessValues, fitnessNumLines, individualsInDeme );
<     
<     // now, get a memory block to use to store the offspring genotypes
<     offspringGTs = checkMemoryBlocks(totalOffspring, nSitesInOffspring);
<     // choose parents and make offspring
<     sipt = offspringGTs; // pointer to beginning of offspring genotype array
<     dpt = fitnessNumLines; // pointer to first number line
<     locpt = offspringLocations; // pointer to location of first individual
<     lipt = individualsInDeme;
<     memset( alleleCounts, 0, nSITES * sizeof(unsigned long long int) );
<     
<     // some debug code
<     /*
<     if ( t >= 10 ) {
<         printf("\nTracked sites in parents (%llu) @ t = %li:\n", nTrackedSitesInParents, t);
<         for ( i = 0; i < nTrackedSitesInParents; i++ )
<             printf("%llu\t", parentalTrackedSiteIndexes[i]);
<         
<         printf("\n\nTSites in offspring (%li):\n", nSitesInOffspring);
<         for ( i = 0; i < nSitesInOffspring; i++ )
<             printf("%llu\t", offsp_SiteIndexes[i]);
<         printf("\n\n");
<     }
<      */
<     
<     
<     
<     for ( pop = 0; pop < nPOPULATIONS; pop++ ) {
<         noff = noffspring[pop];
<         nhere = abundances[pop];
<         if ( noff > 0 ) {
<             for ( i = 0; i < noff; i++ ) {
<                 if ( INCLUDE_SELECTION )
<                     chooseParents(&mommy, &daddy, dpt, nhere);
<                 else
<                     chooseParentsAtRandom(&mommy, &daddy, randomNumberLine, nhere);
<                 momIndex = *(lipt + mommy);
<                 dadIndex = *(lipt + daddy);
<                 makeOneOffspring(momIndex, dadIndex, sipt, nSitesInOffspring, offsp_SiteIndexes, offsp_lociStates);
<                 *locpt = pop;
<                 locpt++;
<                 sipt += (PLOIDY * nSitesInOffspring);
<             }
<         }
<         if ( nhere > 0 ) {
<             dpt += nhere;
<             lipt += nhere;
<         }
<     }
<     
<     putInMutations( offspringGTs, offsp_lociStates, offsp_SiteIndexes, nNewMutations, totalOffspring, nSitesInOffspring );
<     
<     // switch the genotype pointer to the offspring's
<     gts = offspringGTs;
<     if ( currentBlock )
<         currentBlock = 0;
<     else
<         currentBlock = 1;
<     for ( i = 0; i < nPOPULATIONS; i++ ) {
<         abundances[i] = noffspring[i];
<     }
<     N = totalOffspring;
<     
<     ullipt = offsp_SiteIndexes;
<     memset( sitesStatuses, LOCUS_STATUS_INACTIVE, nSITES * sizeof(short int) );
<     nSelectedSites = 0;
<     for ( i = 0; i < nSitesInOffspring; i++ ) {
<         locus = *ullipt;
<         *(sitesStatuses + locus) = LOCUS_STATUS_TRACKED_IN_PARENTS;
<         if ( *(siteClassifications + locus) > SITE_CLASS_NEUTRAL )
<             nSelectedSites++;
<         ullipt++;
<     }
<     
<     ullipt = alleleCounts;
<     sipt = sitesStatuses;
<     driftLosses = 0;
<     actuallyVariable = 0;
<     for ( locus = 0; locus < nSITES; locus++ ) {
<         if ( *ullipt > 0 && *ullipt < ( PLOIDY * N ) ) {
<             *sipt = LOCUS_STATUS_VARIABLE_IN_PARENTS;
<             actuallyVariable++;
<         }
<         else if ( *ullipt == (PLOIDY * N) ) {
<             fprintf( dataFile_derivedFixationTS, "%li,%llu,%i,%E\n", t, locus, *(siteClassifications + locus), *(selectionCoefficients + locus) );
<         }
<         else if ( *sipt == LOCUS_STATUS_TRACKED_IN_PARENTS ) {
<             if ( VERBOSE )
<                 printf("\nLocus %llu lost in time step %li\n", locus, t);
<             driftLosses++;
<         }
<         sipt++;
<         ullipt++;
<     }
<     
<     if ( (driftLosses + actuallyVariable) != nSitesInOffspring ) {
<         fprintf(stderr, "\nError in reproduction():\n\t(driftLosses (%li) + actuallyVariable (%li)) != nSitesInOffspring (%li) )\n", driftLosses, actuallyVariable, nSitesInOffspring);
<         exit(-1);
<     }
<     
<     nTrackedSitesInParents = nSitesInOffspring;
<     
<     free(locations);
<     locations = offspringLocations;
<     
<     free(parentalTrackedSiteIndexes);
<     parentalTrackedSiteIndexes = offsp_SiteIndexes;
<     
<     // need to switch over/record nTrackedSitesInParents and variable site indexes
<     // memset all isVariableSite to zero
<     // then reset those variable ones to 1
<     // also copy over offspring locations
<     
<     //printf("\nWarning: reproduction() not finished yet!\n");
<     
<     //exit(0);
< }
< 
< 
< void setUpDataFiles(void)
< {
<     int i;
< 
<     dataFile_alleleFreqTS = fopen("AlleleFreqTS.csv", "w");
<     fprintf(dataFile_alleleFreqTS, "Time,SiteIndex,LinkageGroup,DerivedAlleleCount,DerivedAlleleFreq,SelectionCoefficient,SiteClassCode\n");
<     
<     dataFile_alleleFreqTSbyPop = fopen("AlleleFreqTSbyPop.csv", "w");
<     fprintf(dataFile_alleleFreqTSbyPop, "Time,SiteIndex");
<     for ( i = 0; i < nPOPULATIONS; i++ )
<         fprintf(dataFile_alleleFreqTSbyPop, ",CountInPop%i", i);
<     fprintf(dataFile_alleleFreqTSbyPop, "\n");
<     
<     dataFile_SFS_TS = fopen("SFStimeSeries.csv", "w");
<     fprintf(dataFile_SFS_TS, "Time,DerivedAlleleCopyNumber,NumberOfSites\n");
<     
<     dataFile_segSiteTS = fopen("SegregatingSitesTS.csv", "w");
<     fprintf(dataFile_segSiteTS, "Time,nSegregatingSites,nNeutralSites,nBackgroundSelSites,nPositiveSelSites,nDivergentSelSites\n");
<     
<     dataFile_derivedFixationTS = fopen("DerivedFixationRecord.csv", "w");
<     fprintf(dataFile_derivedFixationTS, "Time,SiteIndex,SiteClassCode,SelectionCoefficient\n");
< }
< 
< 
< void setUpGenome(void)
< {
<     double theta, expectedSegSites, *expectedFreq, *dpt, value;
<     unsigned long long int foo, *ullpt, sitesPerLinkageGroup, lgCount;
<     long int i;
<     int dumi, currentLinkageGroup;
<     char str[80];
<     _Bool firstOne;
<     
<     // set up standing neutral variation using classical pop. gen. expectations
<     // theta is the poulation mutation parameter from coalescent theory, specifically
<     // here from Wakeley's book, p. 92, "... twice the expected number of mutations
<     // introduced into the population each generation ... "
<     foo = N * PLOIDY * nSITES;
<     theta = 2.0 * MU * ((double) foo);
<     
<     // now the expected number of segregating sites, Wakeley, p. 97, eqn. 4.7:
<     // note for diploid, we have 2N sequences in the population, so the sum is from 1 to 2N-1;
<     // the total number of expected segregating sites is the sum of the expected number of sites with each possible
<     // number of copies of a derived allele
<     expectedFreq = (double *) malloc( PLOIDY * N * sizeof(double) );
<     *expectedFreq = 0.0;
<     dpt = expectedFreq + 1; // start with expected number of sites having 1 copy (not with zero copies)
<     expectedSegSites = 0.0;
<     for ( i = 1; i < (PLOIDY * N); i++ ) {
<         expectedSegSites += 1.0 / ((double) i); // summation equation; below sum is multiplied by theta
<         *dpt = (*(dpt - 1)) + theta / ((double) i); // equation from Wakeley's book (based on Fu 1995); build cumulative vector
<         dpt++;
<     }
<     expectedSegSites = expectedSegSites * theta;
<     nTrackedSitesInParents = (unsigned long long int) (expectedSegSites + 0.5);
<     
<     
<     // now to choose the sites that are variable and their frequencies
<     siteIndexes = (unsigned long long int *) malloc( nSITES * sizeof(unsigned long long int) );
<     parentalTrackedSiteIndexes = (unsigned long long int *) malloc( nTrackedSitesInParents * sizeof(unsigned long long int) );
<     ullpt = siteIndexes;
<     for ( foo = 0; foo < nSITES; foo++ ) {
<         *ullpt = foo;
<         ullpt++;
<     }
<     
<     // use gsl ran choose to pick sites at random to be standing neutral variation
<     gsl_ran_choose( rngState, parentalTrackedSiteIndexes, nTrackedSitesInParents, siteIndexes, nSITES, sizeof(unsigned long long int) );
<     // variable site indexes now stores the ordered indexes of sites that should have segregating variants
<     // siteIndexes just stores the indexes [0..nSITES-1], which is useful for random choices like this one, so we keep it
<     sitesStatuses = (short int *) malloc( nSITES * sizeof(short int) );
<     siteClassifications = (int *) malloc( nSITES * sizeof(int) );
<     linkageGroupMembership = (int *) malloc( nSITES * sizeof(int) );
<     memset( sitesStatuses, LOCUS_STATUS_INACTIVE, (nSITES * sizeof(short int)) );
<     for ( foo = 0; foo < nTrackedSitesInParents; foo++ )
<         *(sitesStatuses + (parentalTrackedSiteIndexes[foo])) = LOCUS_STATUS_VARIABLE_IN_PARENTS;
<     // sitesStatuses stores the same information as parentalTrackedSiteIndexes, but in a different form; both are useful
<     
<     // now randomly assign frequencies
<     alleleFrequencies = (double *) malloc( nSITES * sizeof(double)); // frequencies (0 to 1) by site
<     alleleCounts = (unsigned long long int *) malloc( nSITES * sizeof(unsigned long long int));
<     memset( alleleCounts, 0, nSITES * sizeof(unsigned long long int) );
<     SFScounts = (unsigned long long int *) malloc( PLOIDY * N * sizeof(unsigned long long int) );
<     memset( SFScounts, 0, PLOIDY * N * sizeof(unsigned long long int) );
<     setUpInitialAlleleFrequencies(expectedFreq);
<     
<     // pick allele frequencies using the Ewens sampling formula from Wakeley's book.
< 
<     
<     if ( VERBOSE )
<         printf("\ntheta = %f, segSites = %llu\n", theta, nTrackedSitesInParents);
< 
<     
<     // assign site types
<     double siteProbs[nSITE_CLASSES];
<     unsigned long long int siteTypeCounts[nSITE_CLASSES];
<     memset( siteTypeCounts, 0, (nSITE_CLASSES * sizeof(unsigned long long int)) );
<     selectionCoefficients = (double *) malloc( nSITES * sizeof(double) );
<     memset( selectionCoefficients, 0, (nSITES * sizeof(double)) );
<     siteProbs[0] = PROBABILITY_SITE_NEUTRAL;
<     siteProbs[1] = siteProbs[0] + PROBABILITY_SITE_BGS;
<     siteProbs[2] = siteProbs[1] + PROBABILITY_SITE_POS;
<     siteProbs[3] = 1.0;
<     currentLinkageGroup = 0;
<     lgCount = 0;
<     sitesPerLinkageGroup = (int) ( ((double) nSITES) / ((double) nLINKAGE_GROUPS) );
<     for ( foo = 0; foo < nSITES; foo ++ ) {
<         
<         // assign site types and selection coefficients
<         value = gsl_rng_uniform(rngState);
<         i = -1;
<         do {
<             i++;
<         } while ( value > siteProbs[i] );
<         if ( i == 0 ) {
<             *(siteClassifications + foo) = SITE_CLASS_NEUTRAL;
<             *(selectionCoefficients + foo) = 0.0;
<         }
<         else if ( i == 1 ) {
<             *(siteClassifications + foo) = SITE_CLASS_BGS;
<             *(selectionCoefficients + foo) = -(randExp(MEAN_S_BGS)) * CODOMINANCE;
<         }
<         else if ( i == 2 ) {
<             *(siteClassifications + foo) = SITE_CLASS_POS;
<             *(selectionCoefficients + foo) = randExp(MEAN_S_POS) * CODOMINANCE;
<         }
<         else if ( i == 3 ) {
<             *(siteClassifications + foo) = SITE_CLASS_DIV;
<             *(selectionCoefficients + foo) = randExp(MEAN_S_DIV) * CODOMINANCE;
<         }
<         else {
<             fprintf(stderr, "\nError in setUpGenome():\n\tbogus site type (%li)\n\t*** Exiting ***\n\n", i);
<             exit(-1);
<         }
<         siteTypeCounts[i] = siteTypeCounts[i] + 1;
<         
<         // assign linkage group membership
<         *(linkageGroupMembership + foo) = currentLinkageGroup;
<         lgCount++;
<         if ( lgCount >= sitesPerLinkageGroup && currentLinkageGroup < (nLINKAGE_GROUPS - 1) ) {
<             lgCount = 0;
<             currentLinkageGroup++;
<         }
<     }
<     
<     foo = 0;
<     if ( VERBOSE )
<         printf("\nSite type counts:\n");
<     for ( i = 0; i < nSITE_CLASSES; i++ ) {
<         if ( VERBOSE )
<             printf("\t%llu", siteTypeCounts[i]);
<         foo += siteTypeCounts[i];
<     }
<     if ( VERBOSE )
<         printf("\n");
<     if ( foo != nSITES ) {
<         fprintf(stderr, "\nError in setUpGenome():\n\tsite total (%llu) != nSITES (%llu)\n\t*** Exiting ***\n\n", foo, nSITES);
<         exit(-1);
<     }
<     
<     // save data on selected sites to files
<     FILE *siteDesignations, *sd2;
<     siteDesignations = fopen("SiteClassIndexes.R", "w"); // R format
<     sd2 = fopen("SiteClassIndexes.m", "w"); // matlab format
<     for ( i = 1; i < nSITE_CLASSES; i++ ) {
<         if ( i == SITE_CLASS_BGS ) {
<             dumi = SITE_CLASS_BGS;
<             strcpy( str, "BGS_SITE_INDEXES" );
<         }
<         else if ( i == SITE_CLASS_POS ) {
<             dumi = SITE_CLASS_POS;
<             strcpy( str, "POS_SITE_INDEXES" );
<         }
<         else if ( i == SITE_CLASS_DIV ) {
<             dumi = SITE_CLASS_DIV;
<             strcpy( str, "DIV_SITE_INDEXES" );
<         }
<         else {
<             fprintf(stderr, "\nError in setUpGenome():\n\tsite designation out of bounds\n");
<             exit(-1);
<         }
<         fprintf( siteDesignations, "%s <- c(", str );
<         fprintf( sd2, "%s = [", str );
<         firstOne = 1;
<         for ( foo = 0; foo < nSITES; foo++ ) {
<             if ( *(siteClassifications + foo) == dumi ) {
<                 if ( firstOne ) { // so no trailing comma or space on end
<                     fprintf( siteDesignations, "%llu", foo );
<                     fprintf( sd2, "%llu", foo );
<                     firstOne = 0;
<                 }
<                 else {
<                     fprintf( siteDesignations, ",%llu", foo );
<                     fprintf( sd2, " %llu", foo );
<                 }
<             }
<         }
<         fprintf( siteDesignations, ");\n\n" );
<         fprintf( sd2, "];\n\n" );
<     }
<     fclose(siteDesignations);
<     fclose(sd2);
<     
<     nSelectedSites = 0;
<     FILE *initialFreqs;
<     unsigned long long int focalSiteIndex;
<     int SiteClassCode;
<     initialFreqs = fopen("InitialAlleleFreqs.csv", "w");
<     fprintf(initialFreqs, "SiteIndex,LinkageGroup,DerivedAlleleCount,DerivedAlleleFreq,SelectionCoefficient,SiteClassCode,SiteClassName\n");
<     for ( foo = 0; foo < nTrackedSitesInParents; foo++ ) {
<         focalSiteIndex = *(parentalTrackedSiteIndexes + foo);
<         
<         if ( *(siteClassifications + focalSiteIndex) > SITE_CLASS_NEUTRAL )
<             nSelectedSites++;
< 
<         
<         fprintf(initialFreqs, "%llu,%i,%llu,%E,%E", focalSiteIndex, linkageGroupMembership[focalSiteIndex], alleleCounts[focalSiteIndex], alleleFrequencies[focalSiteIndex], selectionCoefficients[focalSiteIndex] );
<         SiteClassCode = siteClassifications[focalSiteIndex];
<         fprintf(initialFreqs, ",%i", SiteClassCode);
<         if ( SiteClassCode == SITE_CLASS_BGS )
<             fprintf(initialFreqs, ",SITE_CLASS_BGS\n");
<         else if ( SiteClassCode == SITE_CLASS_POS )
<             fprintf(initialFreqs, ",SITE_CLASS_POS\n");
<         else if ( SiteClassCode == SITE_CLASS_DIV )
<             fprintf(initialFreqs, ",SITE_CLASS_DIV\n");
<         else if ( SiteClassCode == SITE_CLASS_NEUTRAL )
<             fprintf(initialFreqs, ",SITE_CLASS_NEUTRAL\n");
<         else {
<             fprintf(stderr, "\nError in setUpGenome:\n\tSite class (%i) not found\n", SiteClassCode);
<             exit(-1);
<         }
<     }
<     fclose(initialFreqs);
<     
<     if ( VERBOSE )
<         printf("\nnSelectedSites = %li\n", nSelectedSites);
<     
<     initialFreqs = fopen("InitialSFS.csv", "w");
<     fprintf(initialFreqs, "AlleleCount,NumberOfSites\n");
<     for ( foo = 0; foo < (PLOIDY * N); foo++ ) {
<         if ( SFScounts[foo] ) {
<             fprintf(initialFreqs, "%llu,%llu\n", foo, SFScounts[foo]);
<         }
<     }
<     fclose(initialFreqs);
<     
<     
<     
<     
<     free(expectedFreq);
<     
<     //printf("\nWarning: setUpGenome() not done yet.  Still need to set selection coefficients.\n");
<     //exit(0);
< }
< 
< 
< void setUpInitialAlleleFrequencies(double *expectedFreq)
< {
<     unsigned long long int i, copies, focalSiteIndex;
<     double dum, *dpt, twoN;
<     _Bool looking;
<     
<     twoN = ((double) PLOIDY) * ((double) N);
<     
<     // make proper scaling of expectedFreq
<     dpt = expectedFreq + 1;
<     dum = *(expectedFreq + (PLOIDY * N) - 1); // cumulative sum
<     for ( i = 1; i < ((PLOIDY * N) - 1); i++ ) {
<         *dpt = (*dpt) / dum; // rescale so total sums to one
<         dpt++;
< //        if ( i < 20 )
< //            printf("%E\t%E\n", *(dpt-2), *(dpt-1));
<     }
<     *(expectedFreq + (PLOIDY * N) - 1) = 1.1; // top out last entry
<     
<     
<     for ( i = 0; i < nTrackedSitesInParents; i++ ) {
<         
<         // get index of focal site
<         focalSiteIndex = *(parentalTrackedSiteIndexes + i);
<         
<         // draw random uniform number to choose frequency
<         dum = gsl_rng_uniform(rngState);
<         looking = 1;
<         copies = 1;
<         dpt = expectedFreq + 1;
<         // run through cumulative probability vector of copy number find chosen one
<         while ( looking && (copies < ((PLOIDY * N) - 1)) ) {
<             if ( dum < (*dpt) )
<                 looking = 0;
<             else {
<                 copies++;
<                 dpt++;
<             }
<         }
<         
<         // store results
<         *(alleleFrequencies + focalSiteIndex) = ((double) copies) / twoN;
<         *(alleleCounts + focalSiteIndex) = copies;
<         *(SFScounts + copies) = (*(SFScounts + copies)) + 1;
<     }
< }
< 
< 
< 
< void setUpPopulations(void)
< {
<     unsigned long long int neededSize, focalSiteIndex;
<     int i;
<     unsigned long long int j, k, index, counter, siteAlleleCount;
<     unsigned long long int choiceVector[(PLOIDY * N)], allelesToSwitch[(PLOIDY * N)];
<     short int *sipt;
<     double stepSize;
<     
<     // allocate space for genotypes and keep track of how big they are in memory
<     neededSize = PLOIDY * N * sizeof(short int) * nTrackedSitesInParents;
<     genotypes0 = (short int *) malloc( neededSize );
<     genotypes1 = (short int *) malloc( neededSize );
<     currentBlock = 0;
<     gts = genotypes0;
<     blockSizes[0] = neededSize;
<     blockSizes[1] = neededSize;
<     memset(genotypes0, ALLELE_CODE_ANCESTRAL, neededSize);
<     memset(genotypes1, ALLELE_CODE_ANCESTRAL, neededSize);
<     
<     // make array of abundances in subpopulations
<     abundances = (long int *) malloc( nPOPULATIONS * sizeof( long int ) );
<     for ( i = 0; i < nPOPULATIONS; i++ )
<         abundances[i] = K_VALUES[i]; // initialize with populations at current carrying capacity
<     
<     // set locations of individuals
<     locations = (int *) malloc( N * sizeof(int) );
<     counter = 0;
<     for ( i = 0; i < nPOPULATIONS; i++ ) {
<         for ( j = 0; j < abundances[i]; j++ ) {
<             locations[counter] = i;
<             counter++;
<         }
<     }
<     
<     // make a choice vector for choosing which alleles in which genotypes to change from zeros to ones
<     counter = 0;
<     for ( j = 0; j < N; j++ ) { // individuals' genotypes
<         for ( i = 0; i < PLOIDY; i++ ) { // the two copies each individual has
<             /* the sequence of choices needs to be: 0,1, PLOIDY * nTrackedSitesInParents, PLOIDY*nTrackedSitesInParents + 1, 2*PLOIDY*nTrackedSitesInParents, 2*PLOIDY*nTrackedSitesInParents + 1, etc... */
<             choiceVector[counter] = (j * PLOIDY * nTrackedSitesInParents) + i;
<             counter++;
<         }
<     }
<     
<     for ( j = 0; j < nTrackedSitesInParents; j++ ) {
<         focalSiteIndex = parentalTrackedSiteIndexes[j];
<         siteAlleleCount = alleleCounts[focalSiteIndex];
<         if ( siteAlleleCount <= 0 || siteAlleleCount >= (PLOIDY * N) ) {
<             printf("\nError in setUpPopulations():\n\tsiteAlleleCount (= %llu) out of bounds.\n", siteAlleleCount);
<             exit(-1);
<         }
<             
<         // int gsl_ran_choose (const gsl_rng * r, void * dest, size_t k, void * src, size_t n, size_t size)
<         gsl_ran_choose( rngState, allelesToSwitch, siteAlleleCount, choiceVector, (PLOIDY * N), sizeof(unsigned long long int) );
<         
<         for ( k = 0; k < siteAlleleCount; k++ ) {
<             // index into genotypes array
<             // genotypes array: each individual = PLOIDY * nTrackedSitesInParents consecutive entries
<             // two adjacent entries are the two entries for the two alleles an individual has at that locus
<             // need to add "1" allele at jth locus for each of selected genotypes that get a derived allele copy
<             // hence, index of jth locus in kth genotype copy is:
<             index = (PLOIDY * j) + allelesToSwitch[k]; // kth genotype copy of jth locus to add allele to
<             *(gts + index) = ALLELE_CODE_DERIVED; // derived allele
<         }
<         
<     }
<     
<     
<     FILE *initgts;
<     if ( VERBOSE ) {
<         initgts = fopen("InitialGenotypes.csv", "w");
<         fprintf(initgts, "Locus0Copy0,Locus0Copy1");
<         for ( k = 1; k < nTrackedSitesInParents; k++ ) {
<             for ( i = 0; i < PLOIDY; i++ ) {
<                 fprintf(initgts, ",Locus%lluCopy%i", k, i);
<             }
<         }
<         fprintf(initgts,"\n");
<         
<         sipt = gts;
<         for ( k = 0; k < N; k++ ) {
<             fprintf(initgts, "%i", *sipt);
<             sipt++;
<             for ( j = 1; j < (PLOIDY * nTrackedSitesInParents); j++ ) {
<                 fprintf(initgts, ",%i", *sipt);
<                 sipt++;
<             }
<             fprintf(initgts, "\n");
<         }
<         fclose(initgts);
<     }
<     
<     environmentGradient = (double *) malloc( nPOPULATIONS * sizeof(double) );
<     if ( ENVIRONMENT_TYPE == ENVT_TYPE_GRADIENT )
<         stepSize = (ENVT_MAX - ENVT_MIN) / (((double) nPOPULATIONS) - 1.0);
<     for ( i = 0; i < nPOPULATIONS; i++ ) {
<         if ( ENVIRONMENT_TYPE == ENVT_TYPE_GRADIENT )
<             environmentGradient[i] = ENVT_MIN + (((double) i) * stepSize);
<         else if ( ENVIRONMENT_TYPE == ENVT_TYPE_MOSAIC ) {
<             if ( i % 2 )
<                 environmentGradient[i] = ENVT_MAX;
<             else
<                 environmentGradient[i] = ENVT_MIN;
<         }
<         else if ( ENVIRONMENT_TYPE == ENVT_TYPE_INVARIANT )
<             environmentGradient[i] = 0.0;
<         else {
<             fprintf(stderr, "\nError in setUpPopulations():\n\tENVIRONMENT_TYPE (%i) unrecognized\n", ENVIRONMENT_TYPE);
<             exit(-1);
<         }
<     }
<     if ( VERBOSE ) {
<         printf("\nenvironmentGradient:\n");
<         for ( i = 0; i < nPOPULATIONS; i++ )
<             printf("\t%f", environmentGradient[i]);
<         printf("\n");
<     }
<     
< }
< 
< 
< 
< void usage(char *progname)
< {
<     fprintf(stdout, "\n%s:\n\tOptions:\n", progname);
<     
<     fprintf(stdout, "\nNote that limited options are available here on the command line.\nFor extensive flexible settings, put settings in parameters.ini.txt.\nOptions available on command line are as follows:\n");
<     
<     fprintf(stdout, "\n\t-V\tVerbose: print lots of human readable messages to\n\t\tstdout related to run status.\n");
< }
< 
< 
< 
< //void viabilitySelection(void)
< //{
< //    long int i, j;
< //    double fitnessValues[N];
< //    
< //    memset( fitnessValues, 0, (N * sizeof(double)) );
< //    computeFitness(fitnessValues);
< //    
< //    
< //    
< //    printf("\nWarning: viabilitySelection() not written yet!\n");
< //    exit(0);
< //}
< 
< 
< void wrongParametersIniOption(char *expected, char *previous, char *found)
< {
<     fprintf(stderr, "\nError in readInParametersFromFile():\n\t");
<     fprintf(stderr, "Expecting '%s' after '%s'\n\t", expected, previous);
<     fprintf(stderr, "in parameters.ini.txt, but instead found: '%s'.\n\tPlease fix parameters.ini.txt\n", found);
<     fprintf(stderr, "\n\t\t*** Exiting *** \n\n");
<     exit(-1);
< }
< 
< 
< 
< 
< 
---
> <div class="js-clone-url clone-url open"
>   data-protocol-type="http">
>   <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
>   <div class="input-group js-zeroclipboard-container">
>     <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
>            value="https://github.com/flaxmans/fffits.git" readonly="readonly" aria-label="HTTPS clone URL">
>     <span class="input-group-button">
>       <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
>     </span>
>   </div>
> </div>
> 
>   
> <div class="js-clone-url clone-url "
>   data-protocol-type="ssh">
>   <h3><span class="text-emphasized">SSH</span> clone URL</h3>
>   <div class="input-group js-zeroclipboard-container">
>     <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
>            value="git@github.com:flaxmans/fffits.git" readonly="readonly" aria-label="SSH clone URL">
>     <span class="input-group-button">
>       <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
>     </span>
>   </div>
> </div>
> 
>   
> <div class="js-clone-url clone-url "
>   data-protocol-type="subversion">
>   <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
>   <div class="input-group js-zeroclipboard-container">
>     <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
>            value="https://github.com/flaxmans/fffits" readonly="readonly" aria-label="Subversion checkout URL">
>     <span class="input-group-button">
>       <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
>     </span>
>   </div>
> </div>
> 
> 
> 
>   <div class="clone-options">You can clone with
>     <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=http&amp;protocol_type=push" class="inline-form js-clone-selector-form is-enabled" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="ZBCVusLjIti4hJRv9AHf9C1JCmW/ecWCUFj4F5vFmR4cJ+k1oZJ4vn2DJZCwACt7FnQb7FP/Gc3agqhnug6f9g==" /></div><button class="btn-link js-clone-selector" data-protocol="http" type="submit">HTTPS</button></form>, <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=push" class="inline-form js-clone-selector-form is-enabled" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="gnC1IXUu3k0LAzDBGPHJSfcibb/tPwaT0O28Ah42nVgyHBCuTkB5GwBnUPQoSQIxjH3SEBdUtLdnZVUqDzhCTw==" /></div><button class="btn-link js-clone-selector" data-protocol="ssh" type="submit">SSH</button></form>, or <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=push" class="inline-form js-clone-selector-form is-enabled" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="TuUuoYUSc/xxsLe9SesxXa/dClgIuQ9gSHKKftiRiH/16cvSUve9xMqddtRRPtr6fqfGguDSlSPtKAn3JshrtA==" /></div><button class="btn-link js-clone-selector" data-protocol="subversion" type="submit">Subversion</button></form>.
>     <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
>       <span class="octicon octicon-question"></span>
>     </a>
>   </div>
>     <a href="https://mac.github.com" class="btn btn-sm sidebar-button" title="Save flaxmans/fffits to your computer and use it in GitHub Desktop." aria-label="Save flaxmans/fffits to your computer and use it in GitHub Desktop.">
>       <span class="octicon octicon-desktop-download"></span>
>       Clone in Desktop
>     </a>
> 
>               <a href="/flaxmans/fffits/archive/master.zip"
>                  class="btn btn-sm sidebar-button"
>                  aria-label="Download the contents of flaxmans/fffits as a zip file"
>                  title="Download the contents of flaxmans/fffits as a zip file"
>                  rel="nofollow">
>                 <span class="octicon octicon-cloud-download"></span>
>                 Download ZIP
>               </a>
>             </div>
>         </div>
>         <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
> 
>           
> 
> <a href="/flaxmans/fffits/blob/6f9fa369036b32c3b43fd89c166c5a95ccecc077/fffits.c" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>
> 
> <!-- blob contrib key: blob_contributors:v21:796e62df95de6e97ddb2c35ff4d0d7c3 -->
> 
>   <div class="file-navigation js-zeroclipboard-container">
>     
> <div class="select-menu js-menu-container js-select-menu left">
>   <span class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
>     data-ref="master"
>     title="master"
>     role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
>     <i>Branch:</i>
>     <span class="js-select-button css-truncate-target">master</span>
>   </span>
> 
>   <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">
> 
>     <div class="select-menu-modal">
>       <div class="select-menu-header">
>         <span class="select-menu-title">Switch branches/tags</span>
>         <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
>       </div>
> 
>       <div class="select-menu-filters">
>         <div class="select-menu-text-filter">
>           <input type="text" aria-label="Find or create a branch…" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Find or create a branch…">
>         </div>
>         <div class="select-menu-tabs">
>           <ul>
>             <li class="select-menu-tab">
>               <a href="#" data-tab-filter="branches" data-filter-placeholder="Find or create a branch…" class="js-select-menu-tab" role="tab">Branches</a>
>             </li>
>             <li class="select-menu-tab">
>               <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab" role="tab">Tags</a>
>             </li>
>           </ul>
>         </div>
>       </div>
> 
>       <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">
> 
>         <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">
> 
> 
>             <a class="select-menu-item js-navigation-item js-navigation-open selected"
>                href="/flaxmans/fffits/blob/master/fffits.c"
>                data-name="master"
>                data-skip-pjax="true"
>                rel="nofollow">
>               <span class="select-menu-item-icon octicon octicon-check"></span>
>               <span class="select-menu-item-text css-truncate-target" title="master">
>                 master
>               </span>
>             </a>
>         </div>
> 
>           <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/flaxmans/fffits/branches" class="js-create-branch select-menu-item select-menu-new-item-form js-navigation-item js-new-item-form" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="e5h8B6fmI7TMBf+pR84l/GhGlBRpbzZTOtrDDvGU9fl1e8EqhK367rOtro1Fa92gwTcjnK6BNWmgLecz9+ZBxg==" /></div>
>             <span class="octicon octicon-git-branch select-menu-item-icon"></span>
>             <div class="select-menu-item-text">
>               <span class="select-menu-item-heading">Create branch: <span class="js-new-item-name"></span></span>
>               <span class="description">from ‘master’</span>
>             </div>
>             <input type="hidden" name="name" id="name" class="js-new-item-value">
>             <input type="hidden" name="branch" id="branch" value="master">
>             <input type="hidden" name="path" id="path" value="fffits.c">
> </form>
>       </div>
> 
>       <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
>         <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">
> 
> 
>         </div>
> 
>         <div class="select-menu-no-results">Nothing to show</div>
>       </div>
> 
>     </div>
>   </div>
> </div>
> 
>     <div class="btn-group right">
>       <a href="/flaxmans/fffits/find/master"
>             class="js-show-file-finder btn btn-sm empty-icon tooltipped tooltipped-nw"
>             data-pjax
>             data-hotkey="t"
>             aria-label="Quickly jump between files">
>         <span class="octicon octicon-list-unordered"></span>
>       </a>
>       <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
>     </div>
> 
>     <div class="breadcrumb js-zeroclipboard-target">
>       <span class="repo-root js-repo-root"><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/flaxmans/fffits" class="" data-branch="master" data-pjax="true" itemscope="url"><span itemprop="title">fffits</span></a></span></span><span class="separator">/</span><strong class="final-path">fffits.c</strong>
>     </div>
>   </div>
> 
> <include-fragment class="commit commit-loader file-history-tease" src="/flaxmans/fffits/contributors/master/fffits.c">
>   <div class="file-history-tease-header">
>     Fetching contributors&hellip;
>   </div>
> 
>   <div class="participation">
>     <p class="loader-loading"><img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
>     <p class="loader-error">Cannot retrieve contributors at this time</p>
>   </div>
> </include-fragment>
> <div class="file">
>   <div class="file-header">
>   <div class="file-actions">
> 
>     <div class="btn-group">
>       <a href="/flaxmans/fffits/raw/master/fffits.c" class="btn btn-sm " id="raw-url">Raw</a>
>         <a href="/flaxmans/fffits/blame/master/fffits.c" class="btn btn-sm js-update-url-with-hash">Blame</a>
>       <a href="/flaxmans/fffits/commits/master/fffits.c" class="btn btn-sm " rel="nofollow">History</a>
>     </div>
> 
>       <a class="octicon-btn tooltipped tooltipped-nw"
>          href="https://mac.github.com"
>          aria-label="Open this file in GitHub Desktop"
>          data-ga-click="Repository, open with desktop, type:mac">
>           <span class="octicon octicon-device-desktop"></span>
>       </a>
> 
>         <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/flaxmans/fffits/edit/master/fffits.c" class="inline-form js-update-url-with-hash" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="qPX5R4bV1RiffeOZm+F7LzDnJvZZO+aBLX5EFMQjp8cE+3xMtMdT/tYhRFulFCSqwSyv0xLnm0Fdz0HA1PUL1w==" /></div>
>           <button class="octicon-btn tooltipped tooltipped-nw" type="submit"
>             aria-label="Edit this file" data-hotkey="e" data-disable-with>
>             <span class="octicon octicon-pencil"></span>
>           </button>
> </form>        <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/flaxmans/fffits/delete/master/fffits.c" class="inline-form" data-form-nonce="57cb58c75544e7494c25941629fb146e2947f588" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="0adEJNtVnmyos3vfdN7d7OlHWLO2bpdmH6z7CU8naKYH82Whf6U7Y1UGxHmddKWBNkmERxfEVBbk31qnmXXc5A==" /></div>
>           <button class="octicon-btn octicon-btn-danger tooltipped tooltipped-nw" type="submit"
>             aria-label="Delete this file" data-disable-with>
>             <span class="octicon octicon-trashcan"></span>
>           </button>
> </form>  </div>
> 
>   <div class="file-info">
>       2171 lines (1864 sloc)
>       <span class="file-info-divider"></span>
>     87.7 KB
>   </div>
> </div>
> 
>   
> 
>   <div class="blob-wrapper data type-c">
>       <table class="highlight tab-size js-file-line-container" data-tab-size="8">
>       <tr>
>         <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
>         <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/* fast forward-in-time simulator for prediction of population genetic metrics and ABC inference */</span></td>
>       </tr>
>       <tr>
>         <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
>         <td id="LC2" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
>         <td id="LC3" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
>       </tr>
>       <tr>
>         <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
>         <td id="LC4" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
>       </tr>
>       <tr>
>         <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
>         <td id="LC5" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>math.h<span class="pl-pds">&gt;</span></span></td>
>       </tr>
>       <tr>
>         <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
>         <td id="LC6" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>unistd.h<span class="pl-pds">&gt;</span></span></td>
>       </tr>
>       <tr>
>         <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
>         <td id="LC7" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>getopt.h<span class="pl-pds">&gt;</span></span></td>
>       </tr>
>       <tr>
>         <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
>         <td id="LC8" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>time.h<span class="pl-pds">&gt;</span></span></td>
>       </tr>
>       <tr>
>         <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
>         <td id="LC9" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>sys/time.h<span class="pl-pds">&gt;</span></span></td>
>       </tr>
>       <tr>
>         <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
>         <td id="LC10" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>string.h<span class="pl-pds">&gt;</span></span></td>
>       </tr>
>       <tr>
>         <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
>         <td id="LC11" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>string.h<span class="pl-pds">&gt;</span></span></td>
>       </tr>
>       <tr>
>         <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
>         <td id="LC12" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
>         <td id="LC13" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>gsl_rng.h<span class="pl-pds">&gt;</span></span>            <span class="pl-c">// gnu scientific library //</span></td>
>       </tr>
>       <tr>
>         <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
>         <td id="LC14" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>gsl_randist.h<span class="pl-pds">&gt;</span></span>        <span class="pl-c">// gnu scientific library //</span></td>
>       </tr>
>       <tr>
>         <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
>         <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-k">const</span> gsl_rng_type *rngType;    <span class="pl-c">/* generator type */</span></td>
>       </tr>
>       <tr>
>         <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
>         <td id="LC16" class="blob-code blob-code-inner js-file-line">gsl_rng *rngState;              <span class="pl-c">/* rng instance */</span></td>
>       </tr>
>       <tr>
>         <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
>         <td id="LC17" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
>         <td id="LC18" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
>         <td id="LC19" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
>         <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-k">const</span> <span class="pl-k">char</span> *version = <span class="pl-s"><span class="pl-pds">&quot;</span>ffits1.0.0<span class="pl-pds">&quot;</span></span>;</td>
>       </tr>
>       <tr>
>         <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
>         <td id="LC21" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
>         <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// defaults for globals</span></td>
>       </tr>
>       <tr>
>         <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
>         <td id="LC23" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">nSITES_DEFAULT</span> <span class="pl-c1">1000000</span> <span class="pl-c">// imaginary length of DNA we are watching evolve</span></td>
>       </tr>
>       <tr>
>         <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
>         <td id="LC24" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">nLINKAGE_GROUPS_DEFAULT</span> <span class="pl-c1">2</span> <span class="pl-c">// # of independently assorting units</span></td>
>       </tr>
>       <tr>
>         <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
>         <td id="LC25" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">nGENERATIONS_DEFAULT</span> <span class="pl-c1">10</span></td>
>       </tr>
>       <tr>
>         <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
>         <td id="LC26" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">nPOPULATIONS_DEFAULT</span> <span class="pl-c1">3</span> <span class="pl-c">// # islands/metapopulations/demes</span></td>
>       </tr>
>       <tr>
>         <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
>         <td id="LC27" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">MU_DEFAULT</span> <span class="pl-c1">1E-9</span> <span class="pl-c">// per base mutation rate per meiosis per generation</span></td>
>       </tr>
>       <tr>
>         <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
>         <td id="LC28" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">MIGRATION_RATE_DEFAULT</span> <span class="pl-c1">0.01</span></td>
>       </tr>
>       <tr>
>         <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
>         <td id="LC29" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">K_DEFAULT</span> <span class="pl-c1">1000.0</span></td>
>       </tr>
>       <tr>
>         <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
>         <td id="LC30" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">INCLUDE_SELECTION_DEFAULT</span> <span class="pl-c1">1</span></td>
>       </tr>
>       <tr>
>         <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
>         <td id="LC31" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">MEAN_S_DEFAULT</span> <span class="pl-c1">0.01</span></td>
>       </tr>
>       <tr>
>         <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
>         <td id="LC32" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">FIXED_POP_SIZE_DEFAULT</span> <span class="pl-c1">0</span></td>
>       </tr>
>       <tr>
>         <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
>         <td id="LC33" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">MAX_POP_GROWTH_RATE_DEFAULT</span> <span class="pl-c1">0.01</span></td>
>       </tr>
>       <tr>
>         <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
>         <td id="LC34" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">RECOMBINATION_RATE_PER_KB_DEFAULT</span> <span class="pl-c1">0.001</span></td>
>       </tr>
>       <tr>
>         <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
>         <td id="LC35" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">PROBABILITY_SITE_SELECTED_DEFAULT</span> <span class="pl-c1">0.01</span></td>
>       </tr>
>       <tr>
>         <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
>         <td id="LC36" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">TIME_SERIES_SAMPLE_FREQ_DEFAULT</span> <span class="pl-c1">1000</span></td>
>       </tr>
>       <tr>
>         <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
>         <td id="LC37" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
>         <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// globals for cmd line and or parameter file options</span></td>
>       </tr>
>       <tr>
>         <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
>         <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> nSITES = nSITES_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
>         <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> nGENERATIONS = nGENERATIONS_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
>         <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> nPOPULATIONS = nPOPULATIONS_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
>         <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> MU = MU_DEFAULT, GENOME_MU;</td>
>       </tr>
>       <tr>
>         <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
>         <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> nLINKAGE_GROUPS = nLINKAGE_GROUPS_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
>         <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> nDEMOGRAPHIC_CHANGES;</td>
>       </tr>
>       <tr>
>         <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
>         <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> *DEMOGRAPHIC_CHANGE_TIMES, *MIGRATION_CHANGE_TIMES;</td>
>       </tr>
>       <tr>
>         <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
>         <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> nMIGRATION_CHANGES;</td>
>       </tr>
>       <tr>
>         <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
>         <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-k">_Bool</span> INCLUDE_SELECTION = INCLUDE_SELECTION_DEFAULT, FIXED_POP_SIZE = FIXED_POP_SIZE_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
>         <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> MEAN_S_BGS = MEAN_S_DEFAULT, MEAN_S_DIV = MEAN_S_DEFAULT, MEAN_S_POS = MEAN_S_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
>         <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> MAX_POP_GROWTH_RATE = MAX_POP_GROWTH_RATE_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
>         <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> RECOMBINATION_RATE_PER_KB = RECOMBINATION_RATE_PER_KB_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
>         <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> PROBABILITY_SITE_DIV = PROBABILITY_SITE_SELECTED_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
>         <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> PROBABILITY_SITE_POS = PROBABILITY_SITE_SELECTED_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
>         <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> PROBABILITY_SITE_BGS = PROBABILITY_SITE_SELECTED_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
>         <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> PROBABILITY_SITE_NEUTRAL;</td>
>       </tr>
>       <tr>
>         <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
>         <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> ENVIRONMENT_TYPE = <span class="pl-c1">0</span>, FITNESS_MODEL = <span class="pl-c1">0</span>; <span class="pl-c">// defaults for how selection works; magic numbers defined below</span></td>
>       </tr>
>       <tr>
>         <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
>         <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> *environmentGradient, ENVT_MAX = <span class="pl-c1">1.0</span>, ENVT_MIN = -<span class="pl-c1">1.0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
>         <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> nSelectedSites;</td>
>       </tr>
>       <tr>
>         <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
>         <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> TIME_SERIES_SAMPLE_FREQ = TIME_SERIES_SAMPLE_FREQ_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
>         <td id="LC59" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
>         <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-k">short</span> <span class="pl-k">int</span> *genotypes0, *genotypes1, *gts; <span class="pl-c">// pointer to memory blocks for individual genotypes</span></td>
>       </tr>
>       <tr>
>         <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
>         <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> *locations, *linkageGroupMembership; <span class="pl-c">// locations in discrete space of individuals</span></td>
>       </tr>
>       <tr>
>         <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
>         <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *parentalTrackedSiteIndexes, *siteIndexes, *SFScounts, *alleleCounts; <span class="pl-c">// pointers for memory blocks for sites in genome</span></td>
>       </tr>
>       <tr>
>         <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
>         <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> *alleleFrequencies, *migrationRates, *K_VALUES, *M_VALUES, *selectionCoefficients;</td>
>       </tr>
>       <tr>
>         <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
>         <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-k">short</span> <span class="pl-k">int</span> *sitesStatuses; <span class="pl-c">// codes for locus&#39;s current status (see below for codes)</span></td>
>       </tr>
>       <tr>
>         <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
>         <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-k">short</span> <span class="pl-k">int</span> currentBlock = <span class="pl-c1">0</span>; <span class="pl-c">// keep track of which block is in use</span></td>
>       </tr>
>       <tr>
>         <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
>         <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> blockSizes[<span class="pl-c1">2</span>];</td>
>       </tr>
>       <tr>
>         <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
>         <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> t; <span class="pl-c">// time counter</span></td>
>       </tr>
>       <tr>
>         <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
>         <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> N; <span class="pl-c">// current total population size</span></td>
>       </tr>
>       <tr>
>         <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
>         <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> *abundances; <span class="pl-c">// size of each population</span></td>
>       </tr>
>       <tr>
>         <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
>         <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> nTrackedSitesInParents = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
>         <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-k">_Bool</span> VERBOSE = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
>         <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> currentMigrationPeriod = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
>         <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> currentDemographyPeriod = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
>         <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> *migRatePt, *KvalPt;</td>
>       </tr>
>       <tr>
>         <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
>         <td id="LC75" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
>         <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// site classifications and magic numbers</span></td>
>       </tr>
>       <tr>
>         <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
>         <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> *siteClassifications;</td>
>       </tr>
>       <tr>
>         <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
>         <td id="LC78" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">nSITE_CLASSES</span> <span class="pl-c1">4</span></td>
>       </tr>
>       <tr>
>         <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
>         <td id="LC79" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">SITE_CLASS_NEUTRAL</span> <span class="pl-c1">0</span></td>
>       </tr>
>       <tr>
>         <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
>         <td id="LC80" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">SITE_CLASS_BGS</span> <span class="pl-c1">1</span> <span class="pl-c">// background selection</span></td>
>       </tr>
>       <tr>
>         <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
>         <td id="LC81" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">SITE_CLASS_POS</span> <span class="pl-c1">2</span> <span class="pl-c">// positive selection</span></td>
>       </tr>
>       <tr>
>         <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
>         <td id="LC82" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">SITE_CLASS_DIV</span> <span class="pl-c1">3</span> <span class="pl-c">// divergent selection</span></td>
>       </tr>
>       <tr>
>         <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
>         <td id="LC83" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ALLELE_CODE_ANCESTRAL</span> <span class="pl-c1">0</span></td>
>       </tr>
>       <tr>
>         <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
>         <td id="LC84" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ALLELE_CODE_DERIVED</span> <span class="pl-c1">1</span></td>
>       </tr>
>       <tr>
>         <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
>         <td id="LC85" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">PLOIDY</span> <span class="pl-c1">2</span> <span class="pl-c">// diploid</span></td>
>       </tr>
>       <tr>
>         <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
>         <td id="LC86" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ENVT_TYPE_GRADIENT</span> <span class="pl-c1">0</span></td>
>       </tr>
>       <tr>
>         <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
>         <td id="LC87" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ENVT_TYPE_MOSAIC</span> <span class="pl-c1">1</span></td>
>       </tr>
>       <tr>
>         <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
>         <td id="LC88" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ENVT_TYPE_INVARIANT</span> <span class="pl-c1">2</span></td>
>       </tr>
>       <tr>
>         <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
>         <td id="LC89" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CODOMINANCE</span> <span class="pl-c1">0.5</span> <span class="pl-c">// codominant effects of alleles in diploid genotypes</span></td>
>       </tr>
>       <tr>
>         <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
>         <td id="LC90" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">FITNESS_MODEL_ADDITIVE</span> <span class="pl-c1">0</span></td>
>       </tr>
>       <tr>
>         <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
>         <td id="LC91" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">FITNESS_MODEL_MULTIPLICATIVE</span> <span class="pl-c1">1</span></td>
>       </tr>
>       <tr>
>         <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
>         <td id="LC92" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">LOCUS_STATUS_INACTIVE</span> <span class="pl-c1">0</span></td>
>       </tr>
>       <tr>
>         <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
>         <td id="LC93" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">LOCUS_STATUS_VARIABLE_IN_PARENTS</span> <span class="pl-c1">1</span></td>
>       </tr>
>       <tr>
>         <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
>         <td id="LC94" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">LOCUS_STATUS_VARIABLE_PLUS_MUT</span> <span class="pl-c1">2</span></td>
>       </tr>
>       <tr>
>         <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
>         <td id="LC95" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">LOCUS_STATUS_NEW_MUT_ONLY</span> <span class="pl-c1">3</span></td>
>       </tr>
>       <tr>
>         <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
>         <td id="LC96" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">LOCUS_STATUS_TRACKED_IN_PARENTS</span> <span class="pl-c1">4</span></td>
>       </tr>
>       <tr>
>         <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
>         <td id="LC97" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
>         <td id="LC98" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
>         <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// function declarations</span></td>
>       </tr>
>       <tr>
>         <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
>         <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> <span class="pl-en">calculateNumOffspring</span>(<span class="pl-k">int</span> pop);</td>
>       </tr>
>       <tr>
>         <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
>         <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">calculatePopGenMetrics</span>(<span class="pl-k">void</span>);</td>
>       </tr>
>       <tr>
>         <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
>         <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-k">short</span> <span class="pl-k">int</span> * <span class="pl-en">checkMemoryBlocks</span>(<span class="pl-k">long</span> <span class="pl-k">int</span> totalOffspring, <span class="pl-k">long</span> <span class="pl-k">int</span> nSitesInOffspring);</td>
>       </tr>
>       <tr>
>         <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
>         <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">chooseParents</span>(<span class="pl-k">long</span> <span class="pl-k">int</span> *mommy, <span class="pl-k">long</span> <span class="pl-k">int</span> *daddy, <span class="pl-k">double</span> *dpt, <span class="pl-k">long</span> <span class="pl-k">int</span> nparents);</td>
>       </tr>
>       <tr>
>         <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
>         <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">chooseParentsAtRandom</span>(<span class="pl-k">long</span> <span class="pl-k">int</span> *mommy, <span class="pl-k">long</span> <span class="pl-k">int</span> *daddy, <span class="pl-k">long</span> <span class="pl-k">int</span> *randomNumberLine, <span class="pl-k">long</span> <span class="pl-k">int</span> nhere);</td>
>       </tr>
>       <tr>
>         <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
>         <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">computeFitness</span>(<span class="pl-k">double</span> *fitnessValues);</td>
>       </tr>
>       <tr>
>         <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
>         <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> <span class="pl-en">figureOutOffspringGenomeSites</span>( <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *offsp_SiteIndexes, <span class="pl-k">short</span> <span class="pl-k">int</span> *offsp_lociStates, <span class="pl-k">long</span> <span class="pl-k">int</span> nNewMutations, <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *mutatedLoci );</td>
>       </tr>
>       <tr>
>         <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
>         <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">finalTasks</span>(<span class="pl-k">unsigned</span> RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
>         <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">initializeRNG</span>(<span class="pl-k">unsigned</span> <span class="pl-k">int</span> RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
>         <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">makeCumulativeFitnessNumLines</span>(<span class="pl-k">double</span> *fitnessValues, <span class="pl-k">double</span> *fitnessNumLines, <span class="pl-k">long</span> <span class="pl-k">int</span> *individualsInDeme);</td>
>       </tr>
>       <tr>
>         <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
>         <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">makeDemesIndexes</span>(<span class="pl-k">long</span> <span class="pl-k">int</span> *individualsInDeme);</td>
>       </tr>
>       <tr>
>         <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
>         <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">makeOneOffspring</span>(<span class="pl-k">long</span> <span class="pl-k">int</span> momIndex, <span class="pl-k">long</span> <span class="pl-k">int</span> dadIndex, <span class="pl-k">short</span> <span class="pl-k">int</span> *offGTpt, <span class="pl-k">long</span> <span class="pl-k">int</span> nSitesInOffspring, <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *offsp_SiteIndexes, <span class="pl-k">short</span> <span class="pl-k">int</span> *offsp_lociStates);</td>
>       </tr>
>       <tr>
>         <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
>         <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">migration</span>(<span class="pl-k">void</span>);</td>
>       </tr>
>       <tr>
>         <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
>         <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">printParametersToFiles</span>(<span class="pl-k">unsigned</span> RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
>         <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">putInMutations</span>( <span class="pl-k">short</span> <span class="pl-k">int</span> *offspringGTs, <span class="pl-k">short</span> <span class="pl-k">int</span> *offsp_lociStates, <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *offsp_SiteIndexes, <span class="pl-k">long</span> <span class="pl-k">int</span> nNewMutations, <span class="pl-k">long</span> <span class="pl-k">int</span> totalOffspring, <span class="pl-k">long</span> <span class="pl-k">int</span> nSitesInOffspring );</td>
>       </tr>
>       <tr>
>         <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
>         <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> <span class="pl-en">randExp</span>(<span class="pl-k">double</span> meanValue);</td>
>       </tr>
>       <tr>
>         <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
>         <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-k">unsigned</span> <span class="pl-en">readInParametersFromFile</span>(<span class="pl-k">void</span>);</td>
>       </tr>
>       <tr>
>         <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
>         <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">reproduction</span>(<span class="pl-k">void</span>);</td>
>       </tr>
>       <tr>
>         <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
>         <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">setUpGenome</span>(<span class="pl-k">void</span>);</td>
>       </tr>
>       <tr>
>         <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
>         <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">setUpInitialAlleleFrequencies</span>(<span class="pl-k">double</span> *expectedFreq);</td>
>       </tr>
>       <tr>
>         <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
>         <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">setUpPopulations</span>(<span class="pl-k">void</span>);</td>
>       </tr>
>       <tr>
>         <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
>         <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">usage</span>(<span class="pl-k">char</span> *progname);</td>
>       </tr>
>       <tr>
>         <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
>         <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//void viabilitySelection(void);</span></td>
>       </tr>
>       <tr>
>         <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
>         <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">wrongParametersIniOption</span>(<span class="pl-k">char</span> *expected, <span class="pl-k">char</span> *previous, <span class="pl-k">char</span> *found);</td>
>       </tr>
>       <tr>
>         <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
>         <td id="LC124" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
>         <td id="LC125" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
>         <td id="LC126" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
>         <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>(<span class="pl-k">int</span> argc, <span class="pl-k">char</span> *argv[])</td>
>       </tr>
>       <tr>
>         <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
>         <td id="LC128" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
>         <td id="LC129" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">int</span> RNG_SEED;</td>
>       </tr>
>       <tr>
>         <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
>         <td id="LC130" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> ch;</td>
>       </tr>
>       <tr>
>         <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
>         <td id="LC131" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">char</span> *progname = argv[<span class="pl-c1">0</span>];</td>
>       </tr>
>       <tr>
>         <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
>         <td id="LC132" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
>         <td id="LC133" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
>         <td id="LC134" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// read in optional command line arguments</span></td>
>       </tr>
>       <tr>
>         <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
>         <td id="LC135" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ((ch = <span class="pl-c1">getopt</span>(argc, argv, <span class="pl-s"><span class="pl-pds">&quot;</span>T:V?<span class="pl-pds">&quot;</span></span>)) != -<span class="pl-c1">1</span>) {</td>
>       </tr>
>       <tr>
>         <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
>         <td id="LC136" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">switch</span> (ch) {</td>
>       </tr>
>       <tr>
>         <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
>         <td id="LC137" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&#39;</span>T<span class="pl-pds">&#39;</span></span>:</td>
>       </tr>
>       <tr>
>         <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
>         <td id="LC138" class="blob-code blob-code-inner js-file-line">                nGENERATIONS = <span class="pl-c1">atoi</span>(<span class="pl-c1">optarg</span>);</td>
>       </tr>
>       <tr>
>         <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
>         <td id="LC139" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">break</span>;</td>
>       </tr>
>       <tr>
>         <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
>         <td id="LC140" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&#39;</span>V<span class="pl-pds">&#39;</span></span>:</td>
>       </tr>
>       <tr>
>         <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
>         <td id="LC141" class="blob-code blob-code-inner js-file-line">                VERBOSE = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
>         <td id="LC142" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">break</span>;</td>
>       </tr>
>       <tr>
>         <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
>         <td id="LC143" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span>:</td>
>       </tr>
>       <tr>
>         <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
>         <td id="LC144" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">default</span>:</td>
>       </tr>
>       <tr>
>         <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
>         <td id="LC145" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">usage</span>(progname);</td>
>       </tr>
>       <tr>
>         <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
>         <td id="LC146" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
>         <td id="LC147" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
>         <td id="LC148" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
>         <td id="LC149" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
>         <td id="LC150" class="blob-code blob-code-inner js-file-line">    RNG_SEED = <span class="pl-c1">readInParametersFromFile</span>();</td>
>       </tr>
>       <tr>
>         <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
>         <td id="LC151" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
>         <td id="LC152" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// initialization steps</span></td>
>       </tr>
>       <tr>
>         <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
>         <td id="LC153" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">initializeRNG</span>(RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
>         <td id="LC154" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setUpGenome</span>();</td>
>       </tr>
>       <tr>
>         <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
>         <td id="LC155" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setUpPopulations</span>();</td>
>       </tr>
>       <tr>
>         <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
>         <td id="LC156" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
>         <td id="LC157" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( t = <span class="pl-c1">1</span>; t &lt;= nGENERATIONS; t++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
>         <td id="LC158" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
>         <td id="LC159" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">migration</span>();</td>
>       </tr>
>       <tr>
>         <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
>         <td id="LC160" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
>         <td id="LC161" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">reproduction</span>(); <span class="pl-c">// includes fecundity selection</span></td>
>       </tr>
>       <tr>
>         <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
>         <td id="LC162" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
>         <td id="LC163" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( N == <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
>         <td id="LC164" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// all extinct</span></td>
>       </tr>
>       <tr>
>         <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
>         <td id="LC165" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(stdout, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>All extinct at end of generation <span class="pl-c1">%li</span>.<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, t);</td>
>       </tr>
>       <tr>
>         <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
>         <td id="LC166" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">finalTasks</span>(RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
>         <td id="LC167" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">exit</span>(<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
>         <td id="LC168" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
>         <td id="LC169" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
>         <td id="LC170" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( (t % TIME_SERIES_SAMPLE_FREQ == <span class="pl-c1">0</span>) || (t == nGENERATIONS) )</td>
>       </tr>
>       <tr>
>         <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
>         <td id="LC171" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">calculatePopGenMetrics</span>();</td>
>       </tr>
>       <tr>
>         <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
>         <td id="LC172" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
>         <td id="LC173" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
>         <td id="LC174" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">finalTasks</span>(RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
>         <td id="LC175" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
>         <td id="LC176" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
>         <td id="LC177" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
>         <td id="LC178" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
>         <td id="LC179" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> <span class="pl-en">calculateNumOffspring</span>(<span class="pl-k">int</span> pop)</td>
>       </tr>
>       <tr>
>         <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
>         <td id="LC180" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
>         <td id="LC181" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> numOffspring = <span class="pl-c1">0</span>, focalTime, nhere;</td>
>       </tr>
>       <tr>
>         <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
>         <td id="LC182" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> expected, currentPop, k;</td>
>       </tr>
>       <tr>
>         <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
>         <td id="LC183" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
>         <td id="LC184" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// check to see if now is a time to change demographic parameters</span></td>
>       </tr>
>       <tr>
>         <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
>         <td id="LC185" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( nDEMOGRAPHIC_CHANGES &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
>         <td id="LC186" class="blob-code blob-code-inner js-file-line">        focalTime = DEMOGRAPHIC_CHANGE_TIMES[currentDemographyPeriod];</td>
>       </tr>
>       <tr>
>         <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
>         <td id="LC187" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( t == focalTime ) {</td>
>       </tr>
>       <tr>
>         <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
>         <td id="LC188" class="blob-code blob-code-inner js-file-line">            KvalPt += nPOPULATIONS;</td>
>       </tr>
>       <tr>
>         <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
>         <td id="LC189" class="blob-code blob-code-inner js-file-line">            currentDemographyPeriod++;</td>
>       </tr>
>       <tr>
>         <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
>         <td id="LC190" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
>         <td id="LC191" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
>         <td id="LC192" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
>         <td id="LC193" class="blob-code blob-code-inner js-file-line">    nhere = *(abundances + pop);</td>
>       </tr>
>       <tr>
>         <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
>         <td id="LC194" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( nhere &gt; <span class="pl-c1">1</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
>         <td id="LC195" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( FIXED_POP_SIZE )</td>
>       </tr>
>       <tr>
>         <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
>         <td id="LC196" class="blob-code blob-code-inner js-file-line">            numOffspring = (<span class="pl-k">long</span> <span class="pl-k">int</span>) *(KvalPt + pop);</td>
>       </tr>
>       <tr>
>         <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
>         <td id="LC197" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
>         <td id="LC198" class="blob-code blob-code-inner js-file-line">            k = *(KvalPt + pop);</td>
>       </tr>
>       <tr>
>         <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
>         <td id="LC199" class="blob-code blob-code-inner js-file-line">            currentPop = ((<span class="pl-k">double</span>) nhere);</td>
>       </tr>
>       <tr>
>         <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
>         <td id="LC200" class="blob-code blob-code-inner js-file-line">            expected = currentPop + (currentPop * MAX_POP_GROWTH_RATE * (k - currentPop)/k); <span class="pl-c">// logistic equation</span></td>
>       </tr>
>       <tr>
>         <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
>         <td id="LC201" class="blob-code blob-code-inner js-file-line">            numOffspring = <span class="pl-c1">gsl_ran_poisson</span>( rngState, expected );</td>
>       </tr>
>       <tr>
>         <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
>         <td id="LC202" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
>         <td id="LC203" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
>         <td id="LC204" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
>         <td id="LC205" class="blob-code blob-code-inner js-file-line">        numOffspring = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
>         <td id="LC206" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
>         <td id="LC207" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> numOffspring;</td>
>       </tr>
>       <tr>
>         <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
>         <td id="LC208" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
>         <td id="LC209" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
>         <td id="LC210" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
>         <td id="LC211" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">calculatePopGenMetrics</span>(<span class="pl-k">void</span>)</td>
>       </tr>
>       <tr>
>         <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
>         <td id="LC212" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
>         <td id="LC213" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> i, j, alleleCountsByPopulation[(nPOPULATIONS * nTrackedSitesInParents)];</td>
>       </tr>
>       <tr>
>         <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
>         <td id="LC214" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> SFScountsByPopulation[(nPOPULATIONS * <span class="pl-c1">2</span> * N)];</td>
>       </tr>
>       <tr>
>         <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
>         <td id="LC215" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> siteMasterIndex;</td>
>       </tr>
>       <tr>
>         <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
>         <td id="LC216" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> pop;</td>
>       </tr>
>       <tr>
>         <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
>         <td id="LC217" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">short</span> <span class="pl-k">int</span> *sipt;</td>
>       </tr>
>       <tr>
>         <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
>         <td id="LC218" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> nhere, count;</td>
>       </tr>
>       <tr>
>         <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
>         <td id="LC219" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">FILE</span> *finalGlobalAlleleStats;</td>
>       </tr>
>       <tr>
>         <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
>         <td id="LC220" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> oneOver2N;</td>
>       </tr>
>       <tr>
>         <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
>         <td id="LC221" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
>         <td id="LC222" class="blob-code blob-code-inner js-file-line">    oneOver2N = <span class="pl-c1">1.0</span> / (((<span class="pl-k">double</span>) PLOIDY) * ((<span class="pl-k">double</span>) N));</td>
>       </tr>
>       <tr>
>         <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
>         <td id="LC223" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
>         <td id="LC224" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( t == nGENERATIONS ) {</td>
>       </tr>
>       <tr>
>         <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
>         <td id="LC225" class="blob-code blob-code-inner js-file-line">        finalGlobalAlleleStats = <span class="pl-c1">fopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Final_GlobalAlleleStats.csv<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
>         <td id="LC226" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(finalGlobalAlleleStats, <span class="pl-s"><span class="pl-pds">&quot;</span>SiteIndex,LinkageGroup,DerivedAlleleCount,DerivedAlleleFreq,SelectionCoefficient,SiteClassCode<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
>         <td id="LC227" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
>         <td id="LC228" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
>         <td id="LC229" class="blob-code blob-code-inner js-file-line">    sipt = gts;</td>
>       </tr>
>       <tr>
>         <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
>         <td id="LC230" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nTrackedSitesInParents; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
>         <td id="LC231" class="blob-code blob-code-inner js-file-line">        siteMasterIndex = *(parentalTrackedSiteIndexes + i);</td>
>       </tr>
>       <tr>
>         <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
>         <td id="LC232" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( *(sitesStatuses + siteMasterIndex) == LOCUS_STATUS_VARIABLE_IN_PARENTS ) {</td>
>       </tr>
>       <tr>
>         <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
>         <td id="LC233" class="blob-code blob-code-inner js-file-line">            count = *(alleleCounts + siteMasterIndex);</td>
>       </tr>
>       <tr>
>         <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
>         <td id="LC234" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( count &lt;= <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
>         <td id="LC235" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in calculatePopGenMetrics():<span class="pl-cce">\n\t</span>count (<span class="pl-c1">%li</span>) &lt;= 0 for siteMasterIndex = <span class="pl-c1">%llu</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, count, siteMasterIndex);</td>
>       </tr>
>       <tr>
>         <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
>         <td id="LC236" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
>         <td id="LC237" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
>         <td id="LC238" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( t == nGENERATIONS ) {</td>
>       </tr>
>       <tr>
>         <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
>         <td id="LC239" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(finalGlobalAlleleStats, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%llu</span>,<span class="pl-c1">%i</span>,<span class="pl-c1">%li</span>,<span class="pl-c1">%E</span>,<span class="pl-c1">%E</span>,<span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, siteMasterIndex, *(linkageGroupMembership + siteMasterIndex), count, (((<span class="pl-k">double</span>) count) * oneOver2N), *(selectionCoefficients + siteMasterIndex), *(siteClassifications + siteMasterIndex) );</td>
>       </tr>
>       <tr>
>         <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
>         <td id="LC240" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
>         <td id="LC241" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
>         <td id="LC242" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
>         <td id="LC243" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
>         <td id="LC244" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
>         <td id="LC245" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
>         <td id="LC246" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
>         <td id="LC247" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
>         <td id="LC248" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
>         <td id="LC249" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( t == nGENERATIONS )</td>
>       </tr>
>       <tr>
>         <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
>         <td id="LC250" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fclose</span>(finalGlobalAlleleStats);</td>
>       </tr>
>       <tr>
>         <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
>         <td id="LC251" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
>         <td id="LC252" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
>         <td id="LC253" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
>         <td id="LC254" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
>         <td id="LC255" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
>         <td id="LC256" class="blob-code blob-code-inner js-file-line"><span class="pl-k">short</span> <span class="pl-k">int</span> * <span class="pl-en">checkMemoryBlocks</span>(<span class="pl-k">long</span> <span class="pl-k">int</span> totalOffspring, <span class="pl-k">long</span> <span class="pl-k">int</span> nSitesInOffspring)</td>
>       </tr>
>       <tr>
>         <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
>         <td id="LC257" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
>         <td id="LC258" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> offspringBlock;</td>
>       </tr>
>       <tr>
>         <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
>         <td id="LC259" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> neededSize, makeSize;</td>
>       </tr>
>       <tr>
>         <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
>         <td id="LC260" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
>         <td id="LC261" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( currentBlock )</td>
>       </tr>
>       <tr>
>         <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
>         <td id="LC262" class="blob-code blob-code-inner js-file-line">        offspringBlock = <span class="pl-c1">0</span>; <span class="pl-c">// current parents use 1, so offspring will use 0</span></td>
>       </tr>
>       <tr>
>         <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
>         <td id="LC263" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
>         <td id="LC264" class="blob-code blob-code-inner js-file-line">        offspringBlock = <span class="pl-c1">1</span>; <span class="pl-c">// current 0, offspring 1</span></td>
>       </tr>
>       <tr>
>         <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
>         <td id="LC265" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
>         <td id="LC266" class="blob-code blob-code-inner js-file-line">    neededSize = PLOIDY * totalOffspring * nSitesInOffspring * (<span class="pl-k">sizeof</span>(<span class="pl-k">short</span> <span class="pl-k">int</span>));</td>
>       </tr>
>       <tr>
>         <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
>         <td id="LC267" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
>         <td id="LC268" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// check if we need bigger memory blocks and allocate if needed</span></td>
>       </tr>
>       <tr>
>         <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
>         <td id="LC269" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( blockSizes[offspringBlock] &lt; neededSize ) {</td>
>       </tr>
>       <tr>
>         <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
>         <td id="LC270" class="blob-code blob-code-inner js-file-line">        makeSize = PLOIDY * totalOffspring * (nSitesInOffspring + <span class="pl-c1">10</span>) * (<span class="pl-k">sizeof</span>(<span class="pl-k">short</span> <span class="pl-k">int</span>));</td>
>       </tr>
>       <tr>
>         <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
>         <td id="LC271" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( offspringBlock ) {</td>
>       </tr>
>       <tr>
>         <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
>         <td id="LC272" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">free</span>( genotypes1 );</td>
>       </tr>
>       <tr>
>         <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
>         <td id="LC273" class="blob-code blob-code-inner js-file-line">            genotypes1 = (<span class="pl-k">short</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( makeSize );</td>
>       </tr>
>       <tr>
>         <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
>         <td id="LC274" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
>         <td id="LC275" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
>         <td id="LC276" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">free</span>( genotypes0 );</td>
>       </tr>
>       <tr>
>         <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
>         <td id="LC277" class="blob-code blob-code-inner js-file-line">            genotypes0 = (<span class="pl-k">short</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( makeSize );</td>
>       </tr>
>       <tr>
>         <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
>         <td id="LC278" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
>         <td id="LC279" class="blob-code blob-code-inner js-file-line">        blockSizes[offspringBlock] = makeSize;</td>
>       </tr>
>       <tr>
>         <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
>         <td id="LC280" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
>         <td id="LC281" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
>         <td id="LC282" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( offspringBlock )</td>
>       </tr>
>       <tr>
>         <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
>         <td id="LC283" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> genotypes1;</td>
>       </tr>
>       <tr>
>         <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
>         <td id="LC284" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
>         <td id="LC285" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> genotypes0;</td>
>       </tr>
>       <tr>
>         <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
>         <td id="LC286" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
>         <td id="LC287" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
>         <td id="LC288" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
>         <td id="LC289" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">chooseParents</span>(<span class="pl-k">long</span> <span class="pl-k">int</span> *mommy, <span class="pl-k">long</span> <span class="pl-k">int</span> *daddy, <span class="pl-k">double</span> *fnlpt, <span class="pl-k">long</span> <span class="pl-k">int</span> nparents)</td>
>       </tr>
>       <tr>
>         <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
>         <td id="LC290" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
>         <td id="LC291" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> i, j;</td>
>       </tr>
>       <tr>
>         <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
>         <td id="LC292" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> dum, *dpt;</td>
>       </tr>
>       <tr>
>         <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
>         <td id="LC293" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
>         <td id="LC294" class="blob-code blob-code-inner js-file-line">    dpt = fnlpt;</td>
>       </tr>
>       <tr>
>         <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
>         <td id="LC295" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// dpt is the pointer to first entry in the the fitness number line for this patch</span></td>
>       </tr>
>       <tr>
>         <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
>         <td id="LC296" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
>         <td id="LC297" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// choose mom</span></td>
>       </tr>
>       <tr>
>         <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
>         <td id="LC298" class="blob-code blob-code-inner js-file-line">    dum = <span class="pl-c1">gsl_rng_uniform</span>(rngState);</td>
>       </tr>
>       <tr>
>         <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
>         <td id="LC299" class="blob-code blob-code-inner js-file-line">    i = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
>         <td id="LC300" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ( dum &gt; *dpt ) {</td>
>       </tr>
>       <tr>
>         <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
>         <td id="LC301" class="blob-code blob-code-inner js-file-line">        i++;</td>
>       </tr>
>       <tr>
>         <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
>         <td id="LC302" class="blob-code blob-code-inner js-file-line">        dpt++;</td>
>       </tr>
>       <tr>
>         <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
>         <td id="LC303" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
>         <td id="LC304" class="blob-code blob-code-inner js-file-line">    *mommy = i;</td>
>       </tr>
>       <tr>
>         <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
>         <td id="LC305" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
>         <td id="LC306" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// choose dad; make sure not the same as mom</span></td>
>       </tr>
>       <tr>
>         <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
>         <td id="LC307" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">do</span> {</td>
>       </tr>
>       <tr>
>         <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
>         <td id="LC308" class="blob-code blob-code-inner js-file-line">        dum = <span class="pl-c1">gsl_rng_uniform</span>(rngState);</td>
>       </tr>
>       <tr>
>         <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
>         <td id="LC309" class="blob-code blob-code-inner js-file-line">        j = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
>         <td id="LC310" class="blob-code blob-code-inner js-file-line">        dpt = fnlpt;</td>
>       </tr>
>       <tr>
>         <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
>         <td id="LC311" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> ( dum &gt; *dpt ) {</td>
>       </tr>
>       <tr>
>         <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
>         <td id="LC312" class="blob-code blob-code-inner js-file-line">            dpt++;</td>
>       </tr>
>       <tr>
>         <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
>         <td id="LC313" class="blob-code blob-code-inner js-file-line">            j++;</td>
>       </tr>
>       <tr>
>         <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
>         <td id="LC314" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
>         <td id="LC315" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">while</span> ( j == i );</td>
>       </tr>
>       <tr>
>         <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
>         <td id="LC316" class="blob-code blob-code-inner js-file-line">    *daddy = j;</td>
>       </tr>
>       <tr>
>         <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
>         <td id="LC317" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
>         <td id="LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    if ( VERBOSE ) {</span></td>
>       </tr>
>       <tr>
>         <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
>         <td id="LC319" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//        printf(&quot;\nMommy = %li, daddy = %li\n&quot;, *mommy, *daddy);</span></td>
>       </tr>
>       <tr>
>         <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
>         <td id="LC320" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    }</span></td>
>       </tr>
>       <tr>
>         <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
>         <td id="LC321" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
>         <td id="LC322" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
>         <td id="LC323" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
>         <td id="LC324" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
>         <td id="LC325" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">chooseParentsAtRandom</span>(<span class="pl-k">long</span> <span class="pl-k">int</span> *mommy, <span class="pl-k">long</span> <span class="pl-k">int</span> *daddy, <span class="pl-k">long</span> <span class="pl-k">int</span> *randomNumberLine, <span class="pl-k">long</span> <span class="pl-k">int</span> nhere)</td>
>       </tr>
>       <tr>
>         <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
>         <td id="LC326" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
>         <td id="LC327" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> chosenOnes[<span class="pl-c1">2</span>];</td>
>       </tr>
>       <tr>
>         <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
>         <td id="LC328" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
>         <td id="LC329" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">gsl_ran_choose</span>( rngState, chosenOnes, <span class="pl-c1">2</span>, randomNumberLine, nhere, <span class="pl-k">sizeof</span>(<span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
>         <td id="LC330" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
>         <td id="LC331" class="blob-code blob-code-inner js-file-line">    *mommy = chosenOnes[<span class="pl-c1">0</span>];</td>
>       </tr>
>       <tr>
>         <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
>         <td id="LC332" class="blob-code blob-code-inner js-file-line">    *daddy = chosenOnes[<span class="pl-c1">1</span>];</td>
>       </tr>
>       <tr>
>         <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
>         <td id="LC333" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
>         <td id="LC334" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
>         <td id="LC335" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
>         <td id="LC336" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">computeFitness</span>(<span class="pl-k">double</span> *fitnessValues)</td>
>       </tr>
>       <tr>
>         <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
>         <td id="LC337" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
>         <td id="LC338" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> i, j, selectedSiteIndexesMaster[nSelectedSites];</td>
>       </tr>
>       <tr>
>         <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
>         <td id="LC339" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> selectedSiteIndexesLocal[nSelectedSites], *ullpt;</td>
>       </tr>
>       <tr>
>         <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
>         <td id="LC340" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> cf_scoeffs[nSelectedSites], *dpt, cf_s, cf_gradient; <span class="pl-c">// prefix cf_ denoting local to this function</span></td>
>       </tr>
>       <tr>
>         <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
>         <td id="LC341" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> nFound;</td>
>       </tr>
>       <tr>
>         <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
>         <td id="LC342" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> cf_siteClass, cf_siteClasses[nSelectedSites], *locpt;</td>
>       </tr>
>       <tr>
>         <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
>         <td id="LC343" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">short</span> <span class="pl-k">int</span> *sipt, gtsum;</td>
>       </tr>
>       <tr>
>         <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
>         <td id="LC344" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    unsigned long long int *dbpt1, *dbpt2; // pointers for debugging with lldb</span></td>
>       </tr>
>       <tr>
>         <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
>         <td id="LC345" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    double *dbpt3;</span></td>
>       </tr>
>       <tr>
>         <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
>         <td id="LC346" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    int *dbpt4;</span></td>
>       </tr>
>       <tr>
>         <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
>         <td id="LC347" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
>         <td id="LC348" class="blob-code blob-code-inner js-file-line">    dpt = fitnessValues;</td>
>       </tr>
>       <tr>
>         <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
>         <td id="LC349" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; N; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
>         <td id="LC350" class="blob-code blob-code-inner js-file-line">        *dpt = <span class="pl-c1">1.0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
>         <td id="LC351" class="blob-code blob-code-inner js-file-line">        dpt++;</td>
>       </tr>
>       <tr>
>         <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
>         <td id="LC352" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
>         <td id="LC353" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
>         <td id="LC354" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    dbpt1 = selectedSiteIndexesMaster;</span></td>
>       </tr>
>       <tr>
>         <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
>         <td id="LC355" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    dbpt2 = selectedSiteIndexesLocal;</span></td>
>       </tr>
>       <tr>
>         <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
>         <td id="LC356" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    dbpt3 = cf_scoeffs;</span></td>
>       </tr>
>       <tr>
>         <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
>         <td id="LC357" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    dbpt4 = cf_siteClasses;</span></td>
>       </tr>
>       <tr>
>         <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
>         <td id="LC358" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
>         <td id="LC359" class="blob-code blob-code-inner js-file-line">    nFound = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
>         <td id="LC360" class="blob-code blob-code-inner js-file-line">    ullpt = parentalTrackedSiteIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
>         <td id="LC361" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nTrackedSitesInParents; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
>         <td id="LC362" class="blob-code blob-code-inner js-file-line">        j = *ullpt; <span class="pl-c">// focal site master index</span></td>
>       </tr>
>       <tr>
>         <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
>         <td id="LC363" class="blob-code blob-code-inner js-file-line">        cf_siteClass = *(siteClassifications + j);</td>
>       </tr>
>       <tr>
>         <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
>         <td id="LC364" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( cf_siteClass &gt; SITE_CLASS_NEUTRAL ) {</td>
>       </tr>
>       <tr>
>         <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
>         <td id="LC365" class="blob-code blob-code-inner js-file-line">            cf_siteClasses[nFound] = cf_siteClass;</td>
>       </tr>
>       <tr>
>         <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
>         <td id="LC366" class="blob-code blob-code-inner js-file-line">            selectedSiteIndexesLocal[nFound] = i;</td>
>       </tr>
>       <tr>
>         <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
>         <td id="LC367" class="blob-code blob-code-inner js-file-line">            selectedSiteIndexesMaster[nFound] = j;</td>
>       </tr>
>       <tr>
>         <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
>         <td id="LC368" class="blob-code blob-code-inner js-file-line">            cf_scoeffs[nFound] = *(selectionCoefficients + j);</td>
>       </tr>
>       <tr>
>         <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
>         <td id="LC369" class="blob-code blob-code-inner js-file-line">            nFound++;</td>
>       </tr>
>       <tr>
>         <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
>         <td id="LC370" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
>         <td id="LC371" class="blob-code blob-code-inner js-file-line">        ullpt++;</td>
>       </tr>
>       <tr>
>         <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
>         <td id="LC372" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
>         <td id="LC373" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
>         <td id="LC374" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE &amp;&amp; t &lt; <span class="pl-c1">10</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
>         <td id="LC375" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Local and Master selected site indexes, site type codes, and selection coefficients:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
>         <td id="LC376" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nSelectedSites; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
>         <td id="LC377" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%llu</span><span class="pl-cce">\t</span><span class="pl-c1">%llu</span><span class="pl-cce">\t</span><span class="pl-c1">%i</span><span class="pl-cce">\t</span><span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, selectedSiteIndexesLocal[i], selectedSiteIndexesMaster[i], cf_siteClasses[i], cf_scoeffs[i]);</td>
>       </tr>
>       <tr>
>         <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
>         <td id="LC378" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
>         <td id="LC379" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
>         <td id="LC380" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nSelectedSites; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
>         <td id="LC381" class="blob-code blob-code-inner js-file-line">        sipt = gts + (PLOIDY * selectedSiteIndexesLocal[i]); <span class="pl-c">// first individual, selected site i</span></td>
>       </tr>
>       <tr>
>         <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
>         <td id="LC382" class="blob-code blob-code-inner js-file-line">        dpt = fitnessValues; <span class="pl-c">// first individual&#39;s fitness score</span></td>
>       </tr>
>       <tr>
>         <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
>         <td id="LC383" class="blob-code blob-code-inner js-file-line">        cf_siteClass = cf_siteClasses[i];</td>
>       </tr>
>       <tr>
>         <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
>         <td id="LC384" class="blob-code blob-code-inner js-file-line">        cf_s = cf_scoeffs[i];</td>
>       </tr>
>       <tr>
>         <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
>         <td id="LC385" class="blob-code blob-code-inner js-file-line">        locpt = locations;</td>
>       </tr>
>       <tr>
>         <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
>         <td id="LC386" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( j = <span class="pl-c1">0</span>; j &lt; N; j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
>         <td id="LC387" class="blob-code blob-code-inner js-file-line">            gtsum = *sipt + *(sipt + <span class="pl-c1">1</span>); <span class="pl-c">// number of derived alleles at this locus</span></td>
>       </tr>
>       <tr>
>         <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
>         <td id="LC388" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( (cf_siteClass == SITE_CLASS_POS || cf_siteClass == SITE_CLASS_BGS) &amp;&amp; gtsum ) { <span class="pl-c">// + and - selection handled same</span></td>
>       </tr>
>       <tr>
>         <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
>         <td id="LC389" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( FITNESS_MODEL == FITNESS_MODEL_ADDITIVE )</td>
>       </tr>
>       <tr>
>         <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
>         <td id="LC390" class="blob-code blob-code-inner js-file-line">                    *dpt += ((<span class="pl-k">double</span>) gtsum) * cf_s;</td>
>       </tr>
>       <tr>
>         <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
>         <td id="LC391" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
>         <td id="LC392" class="blob-code blob-code-inner js-file-line">                    *dpt *= <span class="pl-c1">1.0</span> + ((<span class="pl-k">double</span>) gtsum) * cf_s;</td>
>       </tr>
>       <tr>
>         <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
>         <td id="LC393" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
>         <td id="LC394" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> <span class="pl-k">if</span> ( cf_siteClass == SITE_CLASS_DIV ) { <span class="pl-c">// divergent selection requires special handling.</span></td>
>       </tr>
>       <tr>
>         <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
>         <td id="LC395" class="blob-code blob-code-inner js-file-line">                cf_gradient = *( environmentGradient + *locpt );</td>
>       </tr>
>       <tr>
>         <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
>         <td id="LC396" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( gtsum == <span class="pl-c1">2</span> ) { <span class="pl-c">// homozygous derived</span></td>
>       </tr>
>       <tr>
>         <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
>         <td id="LC397" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> ( FITNESS_MODEL == FITNESS_MODEL_ADDITIVE )</td>
>       </tr>
>       <tr>
>         <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
>         <td id="LC398" class="blob-code blob-code-inner js-file-line">                        *dpt += <span class="pl-c1">2.0</span> * cf_s * cf_gradient;</td>
>       </tr>
>       <tr>
>         <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
>         <td id="LC399" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
>         <td id="LC400" class="blob-code blob-code-inner js-file-line">                        *dpt *= <span class="pl-c1">1.0</span> + (<span class="pl-c1">2.0</span> * cf_s * cf_gradient);</td>
>       </tr>
>       <tr>
>         <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
>         <td id="LC401" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
>         <td id="LC402" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">else</span> <span class="pl-k">if</span> ( gtsum == <span class="pl-c1">0</span> ) { <span class="pl-c">// homozygous ancestral</span></td>
>       </tr>
>       <tr>
>         <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
>         <td id="LC403" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> ( FITNESS_MODEL == FITNESS_MODEL_ADDITIVE )</td>
>       </tr>
>       <tr>
>         <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
>         <td id="LC404" class="blob-code blob-code-inner js-file-line">                        *dpt += -<span class="pl-c1">2.0</span> * cf_s * cf_gradient;</td>
>       </tr>
>       <tr>
>         <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
>         <td id="LC405" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
>         <td id="LC406" class="blob-code blob-code-inner js-file-line">                        *dpt *= <span class="pl-c1">1.0</span> - (<span class="pl-c1">2.0</span> * cf_s * cf_gradient);</td>
>       </tr>
>       <tr>
>         <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
>         <td id="LC407" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
>         <td id="LC408" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">else</span> <span class="pl-k">if</span> ( gtsum != <span class="pl-c1">1</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
>         <td id="LC409" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in computeFitness():<span class="pl-cce">\n\t</span>gtsum (= <span class="pl-c1">%i</span>) out of bounds.<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, gtsum);</td>
>       </tr>
>       <tr>
>         <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
>         <td id="LC410" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
>         <td id="LC411" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c">// heterozygotes are assumed intermediate everywhere, so no fitness change</span></td>
>       </tr>
>       <tr>
>         <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
>         <td id="LC412" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
>         <td id="LC413" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
>         <td id="LC414" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> <span class="pl-k">if</span> ( cf_siteClass == SITE_CLASS_NEUTRAL ) {</td>
>       </tr>
>       <tr>
>         <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
>         <td id="LC415" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in computeFitness():<span class="pl-cce">\n\t</span>neutral site made it into calcs.<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
>         <td id="LC416" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
>         <td id="LC417" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
>         <td id="LC418" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
>         <td id="LC419" class="blob-code blob-code-inner js-file-line">            sipt += PLOIDY * nTrackedSitesInParents; <span class="pl-c">// advance to locus i in next individual&#39;s genotype</span></td>
>       </tr>
>       <tr>
>         <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
>         <td id="LC420" class="blob-code blob-code-inner js-file-line">            dpt++; <span class="pl-c">// advance to next individual&#39;s fitness</span></td>
>       </tr>
>       <tr>
>         <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
>         <td id="LC421" class="blob-code blob-code-inner js-file-line">            locpt++; <span class="pl-c">// advance to next individual&#39;s location</span></td>
>       </tr>
>       <tr>
>         <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
>         <td id="LC422" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
>         <td id="LC423" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
>         <td id="LC424" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
>         <td id="LC425" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( t == <span class="pl-c1">1</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
>         <td id="LC426" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">FILE</span> *cf_fitvals;</td>
>       </tr>
>       <tr>
>         <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
>         <td id="LC427" class="blob-code blob-code-inner js-file-line">        cf_fitvals = <span class="pl-c1">fopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>InitialFitnessValues.csv<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
>         <td id="LC428" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(cf_fitvals, <span class="pl-s"><span class="pl-pds">&quot;</span>individual,location,fitness<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
>         <td id="LC429" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; N; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
>         <td id="LC430" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(cf_fitvals, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%llu</span>,<span class="pl-c1">%i</span>,<span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, i, *(locations + i), *(fitnessValues + i));</td>
>       </tr>
>       <tr>
>         <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
>         <td id="LC431" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fclose</span>(cf_fitvals);</td>
>       </tr>
>       <tr>
>         <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
>         <td id="LC432" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
>         <td id="LC433" class="blob-code blob-code-inner js-file-line">    dpt = fitnessValues;</td>
>       </tr>
>       <tr>
>         <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
>         <td id="LC434" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; N; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
>         <td id="LC435" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( *dpt &lt; <span class="pl-c1">0.0</span> )</td>
>       </tr>
>       <tr>
>         <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
>         <td id="LC436" class="blob-code blob-code-inner js-file-line">            *dpt = <span class="pl-c1">0.0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
>         <td id="LC437" class="blob-code blob-code-inner js-file-line">        dpt++;</td>
>       </tr>
>       <tr>
>         <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
>         <td id="LC438" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
>         <td id="LC439" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
>         <td id="LC440" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
>         <td id="LC441" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
>         <td id="LC442" class="blob-code blob-code-inner js-file-line"><span class="pl-k">long</span> <span class="pl-k">int</span> <span class="pl-en">figureOutOffspringGenomeSites</span>( <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *offsp_SiteIndexes, <span class="pl-k">short</span> <span class="pl-k">int</span> *offsp_lociStates, <span class="pl-k">long</span> <span class="pl-k">int</span> nNewMutations, <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *mutatedLoci )</td>
>       </tr>
>       <tr>
>         <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
>         <td id="LC443" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
>         <td id="LC444" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> nSitesInOffspring = <span class="pl-c1">0</span>, newMutationSiteCount = <span class="pl-c1">0</span>, parentalSiteCount = <span class="pl-c1">0</span>, nRepeatMutations = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
>         <td id="LC445" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> locus, *newLocusIndexPt, *variableSitePt, *offsp_pt;</td>
>       </tr>
>       <tr>
>         <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
>         <td id="LC446" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> i, totalSitesDone = <span class="pl-c1">0</span>, retainedSites = <span class="pl-c1">0</span>, nSitesToDo, nBrandNewMutations = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
>         <td id="LC447" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">short</span> <span class="pl-k">int</span> *offsp_ls;</td>
>       </tr>
>       <tr>
>         <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
>         <td id="LC448" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
>         <td id="LC449" class="blob-code blob-code-inner js-file-line">    newLocusIndexPt = mutatedLoci;</td>
>       </tr>
>       <tr>
>         <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
>         <td id="LC450" class="blob-code blob-code-inner js-file-line">    variableSitePt = parentalTrackedSiteIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
>         <td id="LC451" class="blob-code blob-code-inner js-file-line">    offsp_pt = offsp_SiteIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
>         <td id="LC452" class="blob-code blob-code-inner js-file-line">    offsp_ls = offsp_lociStates;</td>
>       </tr>
>       <tr>
>         <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
>         <td id="LC453" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
>         <td id="LC454" class="blob-code blob-code-inner js-file-line">    nSitesToDo = nNewMutations + nTrackedSitesInParents;</td>
>       </tr>
>       <tr>
>         <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
>         <td id="LC455" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ( totalSitesDone &lt; nSitesToDo ) {</td>
>       </tr>
>       <tr>
>         <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
>         <td id="LC456" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( (parentalSiteCount &lt; nTrackedSitesInParents) &amp;&amp; (newMutationSiteCount &lt; nNewMutations) ) {</td>
>       </tr>
>       <tr>
>         <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
>         <td id="LC457" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// there are remaining sites to fill in for both types</span></td>
>       </tr>
>       <tr>
>         <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
>         <td id="LC458" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( *newLocusIndexPt &gt; *variableSitePt ) {</td>
>       </tr>
>       <tr>
>         <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
>         <td id="LC459" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// add in the parental locus</span></td>
>       </tr>
>       <tr>
>         <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
>         <td id="LC460" class="blob-code blob-code-inner js-file-line">                locus = *variableSitePt;</td>
>       </tr>
>       <tr>
>         <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
>         <td id="LC461" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( *(sitesStatuses + locus) == LOCUS_STATUS_VARIABLE_IN_PARENTS ) {</td>
>       </tr>
>       <tr>
>         <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
>         <td id="LC462" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c">// should be added in, else ignored</span></td>
>       </tr>
>       <tr>
>         <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
>         <td id="LC463" class="blob-code blob-code-inner js-file-line">                    *offsp_pt = locus; <span class="pl-c">// record the locus</span></td>
>       </tr>
>       <tr>
>         <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
>         <td id="LC464" class="blob-code blob-code-inner js-file-line">                    offsp_pt++; <span class="pl-c">// advance offspring locus pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
>         <td id="LC465" class="blob-code blob-code-inner js-file-line">                    </td>
>       </tr>
>       <tr>
>         <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
>         <td id="LC466" class="blob-code blob-code-inner js-file-line">                    *offsp_ls = LOCUS_STATUS_VARIABLE_IN_PARENTS; <span class="pl-c">// record the status</span></td>
>       </tr>
>       <tr>
>         <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
>         <td id="LC467" class="blob-code blob-code-inner js-file-line">                    offsp_ls++; <span class="pl-c">// advance the status pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
>         <td id="LC468" class="blob-code blob-code-inner js-file-line">                    </td>
>       </tr>
>       <tr>
>         <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
>         <td id="LC469" class="blob-code blob-code-inner js-file-line">                    nSitesInOffspring++; <span class="pl-c">// increment the total offspring site counter</span></td>
>       </tr>
>       <tr>
>         <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
>         <td id="LC470" class="blob-code blob-code-inner js-file-line">                    retainedSites++;</td>
>       </tr>
>       <tr>
>         <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
>         <td id="LC471" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
>         <td id="LC472" class="blob-code blob-code-inner js-file-line">                parentalSiteCount++; <span class="pl-c">// one more parental site taken care of</span></td>
>       </tr>
>       <tr>
>         <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
>         <td id="LC473" class="blob-code blob-code-inner js-file-line">                variableSitePt++; <span class="pl-c">// increment the variable site pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
>         <td id="LC474" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
>         <td id="LC475" class="blob-code blob-code-inner js-file-line">                totalSitesDone++;</td>
>       </tr>
>       <tr>
>         <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
>         <td id="LC476" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
>         <td id="LC477" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> <span class="pl-k">if</span> ( *newLocusIndexPt &lt; *variableSitePt ) {</td>
>       </tr>
>       <tr>
>         <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
>         <td id="LC478" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// add in the new locus</span></td>
>       </tr>
>       <tr>
>         <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
>         <td id="LC479" class="blob-code blob-code-inner js-file-line">                *offsp_pt = *newLocusIndexPt; <span class="pl-c">// record the index</span></td>
>       </tr>
>       <tr>
>         <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
>         <td id="LC480" class="blob-code blob-code-inner js-file-line">                offsp_pt++; <span class="pl-c">// advance the index pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
>         <td id="LC481" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
>         <td id="LC482" class="blob-code blob-code-inner js-file-line">                *offsp_ls = LOCUS_STATUS_NEW_MUT_ONLY; <span class="pl-c">// record the status</span></td>
>       </tr>
>       <tr>
>         <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
>         <td id="LC483" class="blob-code blob-code-inner js-file-line">                offsp_ls++; <span class="pl-c">// advance the status pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
>         <td id="LC484" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
>         <td id="LC485" class="blob-code blob-code-inner js-file-line">                newLocusIndexPt++; <span class="pl-c">// advance new locus index pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
>         <td id="LC486" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
>         <td id="LC487" class="blob-code blob-code-inner js-file-line">                nSitesInOffspring++; <span class="pl-c">// increment the total site counter</span></td>
>       </tr>
>       <tr>
>         <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
>         <td id="LC488" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
>         <td id="LC489" class="blob-code blob-code-inner js-file-line">                newMutationSiteCount++;</td>
>       </tr>
>       <tr>
>         <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
>         <td id="LC490" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
>         <td id="LC491" class="blob-code blob-code-inner js-file-line">                totalSitesDone++;</td>
>       </tr>
>       <tr>
>         <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
>         <td id="LC492" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
>         <td id="LC493" class="blob-code blob-code-inner js-file-line">                nBrandNewMutations++;</td>
>       </tr>
>       <tr>
>         <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
>         <td id="LC494" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
>         <td id="LC495" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
>         <td id="LC496" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// the mutation is at an already used site</span></td>
>       </tr>
>       <tr>
>         <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
>         <td id="LC497" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( *newLocusIndexPt != *variableSitePt ) {</td>
>       </tr>
>       <tr>
>         <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
>         <td id="LC498" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in figureOutOffspringGenomeSites():<span class="pl-cce">\n\t</span>*newLocusIndexPt (<span class="pl-c1">%llu</span>) != *variableSitePt (<span class="pl-c1">%llu</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, *newLocusIndexPt, *variableSitePt);</td>
>       </tr>
>       <tr>
>         <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
>         <td id="LC499" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
>         <td id="LC500" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
>         <td id="LC501" class="blob-code blob-code-inner js-file-line">                *offsp_pt = *newLocusIndexPt; <span class="pl-c">// record the index</span></td>
>       </tr>
>       <tr>
>         <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
>         <td id="LC502" class="blob-code blob-code-inner js-file-line">                offsp_pt++; <span class="pl-c">// advance the index pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
>         <td id="LC503" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
>         <td id="LC504" class="blob-code blob-code-inner js-file-line">                *offsp_ls = LOCUS_STATUS_VARIABLE_PLUS_MUT; <span class="pl-c">// record the status</span></td>
>       </tr>
>       <tr>
>         <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
>         <td id="LC505" class="blob-code blob-code-inner js-file-line">                offsp_ls++; <span class="pl-c">// advance the status pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
>         <td id="LC506" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
>         <td id="LC507" class="blob-code blob-code-inner js-file-line">                newLocusIndexPt++; <span class="pl-c">// advance BOTH parental AND mutations pointers and their respective counts</span></td>
>       </tr>
>       <tr>
>         <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
>         <td id="LC508" class="blob-code blob-code-inner js-file-line">                newMutationSiteCount++;</td>
>       </tr>
>       <tr>
>         <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
>         <td id="LC509" class="blob-code blob-code-inner js-file-line">                variableSitePt++;</td>
>       </tr>
>       <tr>
>         <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
>         <td id="LC510" class="blob-code blob-code-inner js-file-line">                parentalSiteCount++;</td>
>       </tr>
>       <tr>
>         <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
>         <td id="LC511" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
>         <td id="LC512" class="blob-code blob-code-inner js-file-line">                nSitesInOffspring++; <span class="pl-c">// increment count of sites in offspring</span></td>
>       </tr>
>       <tr>
>         <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
>         <td id="LC513" class="blob-code blob-code-inner js-file-line">                nRepeatMutations++;</td>
>       </tr>
>       <tr>
>         <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
>         <td id="LC514" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
>         <td id="LC515" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
>         <td id="LC516" class="blob-code blob-code-inner js-file-line">                totalSitesDone += <span class="pl-c1">2</span>; <span class="pl-c">// took care of a parental site AND a mutation site at the same time</span></td>
>       </tr>
>       <tr>
>         <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
>         <td id="LC517" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
>         <td id="LC518" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
>         <td id="LC519" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( parentalSiteCount &lt; nTrackedSitesInParents &amp;&amp; newMutationSiteCount == nNewMutations ) {</td>
>       </tr>
>       <tr>
>         <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
>         <td id="LC520" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// done with new, just need to add parentals</span></td>
>       </tr>
>       <tr>
>         <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
>         <td id="LC521" class="blob-code blob-code-inner js-file-line">            locus = *variableSitePt;</td>
>       </tr>
>       <tr>
>         <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
>         <td id="LC522" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( *(sitesStatuses + locus) == LOCUS_STATUS_VARIABLE_IN_PARENTS ) {</td>
>       </tr>
>       <tr>
>         <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
>         <td id="LC523" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// should be added in, else ignored</span></td>
>       </tr>
>       <tr>
>         <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
>         <td id="LC524" class="blob-code blob-code-inner js-file-line">                *offsp_pt = locus; <span class="pl-c">// record the locus</span></td>
>       </tr>
>       <tr>
>         <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
>         <td id="LC525" class="blob-code blob-code-inner js-file-line">                offsp_pt++; <span class="pl-c">// advance offspring locus pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
>         <td id="LC526" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
>         <td id="LC527" class="blob-code blob-code-inner js-file-line">                *offsp_ls = LOCUS_STATUS_VARIABLE_IN_PARENTS; <span class="pl-c">// record the status</span></td>
>       </tr>
>       <tr>
>         <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
>         <td id="LC528" class="blob-code blob-code-inner js-file-line">                offsp_ls++; <span class="pl-c">// advance the status pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
>         <td id="LC529" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
>         <td id="LC530" class="blob-code blob-code-inner js-file-line">                nSitesInOffspring++; <span class="pl-c">// increment the total offspring site counter</span></td>
>       </tr>
>       <tr>
>         <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
>         <td id="LC531" class="blob-code blob-code-inner js-file-line">                retainedSites++;</td>
>       </tr>
>       <tr>
>         <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
>         <td id="LC532" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
>         <td id="LC533" class="blob-code blob-code-inner js-file-line">            parentalSiteCount++; <span class="pl-c">// one more parental site taken care of</span></td>
>       </tr>
>       <tr>
>         <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
>         <td id="LC534" class="blob-code blob-code-inner js-file-line">            variableSitePt++; <span class="pl-c">// increment the variable site pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
>         <td id="LC535" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
>         <td id="LC536" class="blob-code blob-code-inner js-file-line">            totalSitesDone++;</td>
>       </tr>
>       <tr>
>         <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
>         <td id="LC537" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
>         <td id="LC538" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( parentalSiteCount == nTrackedSitesInParents &amp;&amp; newMutationSiteCount &lt; nNewMutations ) {</td>
>       </tr>
>       <tr>
>         <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
>         <td id="LC539" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// done with parentals, just need to add new</span></td>
>       </tr>
>       <tr>
>         <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
>         <td id="LC540" class="blob-code blob-code-inner js-file-line">            *offsp_pt = *newLocusIndexPt; <span class="pl-c">// record the index</span></td>
>       </tr>
>       <tr>
>         <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
>         <td id="LC541" class="blob-code blob-code-inner js-file-line">            offsp_pt++; <span class="pl-c">// advance the index pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
>         <td id="LC542" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
>         <td id="LC543" class="blob-code blob-code-inner js-file-line">            *offsp_ls = LOCUS_STATUS_NEW_MUT_ONLY; <span class="pl-c">// record the status</span></td>
>       </tr>
>       <tr>
>         <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
>         <td id="LC544" class="blob-code blob-code-inner js-file-line">            offsp_ls++; <span class="pl-c">// advance the status pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
>         <td id="LC545" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
>         <td id="LC546" class="blob-code blob-code-inner js-file-line">            newLocusIndexPt++; <span class="pl-c">// advance new locus index pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
>         <td id="LC547" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
>         <td id="LC548" class="blob-code blob-code-inner js-file-line">            nSitesInOffspring++; <span class="pl-c">// increment the total site counter</span></td>
>       </tr>
>       <tr>
>         <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
>         <td id="LC549" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
>         <td id="LC550" class="blob-code blob-code-inner js-file-line">            newMutationSiteCount++;</td>
>       </tr>
>       <tr>
>         <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
>         <td id="LC551" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
>         <td id="LC552" class="blob-code blob-code-inner js-file-line">            totalSitesDone++;</td>
>       </tr>
>       <tr>
>         <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
>         <td id="LC553" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
>         <td id="LC554" class="blob-code blob-code-inner js-file-line">            nBrandNewMutations++;</td>
>       </tr>
>       <tr>
>         <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
>         <td id="LC555" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
>         <td id="LC556" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
>         <td id="LC557" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in figureOutOffspringGenomeSites():<span class="pl-cce">\n\t</span>counts aren&#39;t working how you think<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
>         <td id="LC558" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>parental count = <span class="pl-c1">%li</span><span class="pl-cce">\t</span>newMutationSiteCount = <span class="pl-c1">%li</span><span class="pl-cce">\n\t</span>nTrackedSitesInParents = <span class="pl-c1">%llu</span>, nNewMutations = <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, parentalSiteCount, newMutationSiteCount, nTrackedSitesInParents, nNewMutations);</td>
>       </tr>
>       <tr>
>         <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
>         <td id="LC559" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
>         <td id="LC560" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
>         <td id="LC561" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
>         <td id="LC562" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
>         <td id="LC563" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// error checking</span></td>
>       </tr>
>       <tr>
>         <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
>         <td id="LC564" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( nNewMutations != newMutationSiteCount ) {</td>
>       </tr>
>       <tr>
>         <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
>         <td id="LC565" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in figureOutOffspringGenomeSites():<span class="pl-cce">\n\t</span>nNewMutations (<span class="pl-c1">%li</span>) != newMutationSiteCount (<span class="pl-c1">%li</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nNewMutations, newMutationSiteCount);</td>
>       </tr>
>       <tr>
>         <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
>         <td id="LC566" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
>         <td id="LC567" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
>         <td id="LC568" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( newMutationSiteCount != (nRepeatMutations + nBrandNewMutations) ) {</td>
>       </tr>
>       <tr>
>         <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
>         <td id="LC569" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in figureOutOffspringGenomeSites():<span class="pl-cce">\n\t</span>newMutationSiteCount (<span class="pl-c1">%li</span>) != (nRepeatMutations (<span class="pl-c1">%li</span>) + nBrandNewMutations (<span class="pl-c1">%li</span>))<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, newMutationSiteCount, nRepeatMutations, nBrandNewMutations);</td>
>       </tr>
>       <tr>
>         <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
>         <td id="LC570" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
>         <td id="LC571" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
>         <td id="LC572" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( totalSitesDone != (parentalSiteCount + newMutationSiteCount) ) {</td>
>       </tr>
>       <tr>
>         <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
>         <td id="LC573" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in figureOutOffspringGenomeSites():<span class="pl-cce">\n\t</span>totalSitesDone (<span class="pl-c1">%li</span>) != (parentalSiteCount (<span class="pl-c1">%li</span>) + newMutationSiteCount (<span class="pl-c1">%li</span>))<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, totalSitesDone, parentalSiteCount, newMutationSiteCount);</td>
>       </tr>
>       <tr>
>         <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
>         <td id="LC574" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
>         <td id="LC575" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
>         <td id="LC576" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
>         <td id="LC577" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE &amp;&amp; t &lt; <span class="pl-c1">10</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
>         <td id="LC578" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Parental loci and status codes:<span class="pl-cce">\n\t</span>number<span class="pl-cce">\t</span>index<span class="pl-cce">\t</span>code<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
>         <td id="LC579" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nTrackedSitesInParents; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
>         <td id="LC580" class="blob-code blob-code-inner js-file-line">            locus = *(parentalTrackedSiteIndexes + i);</td>
>       </tr>
>       <tr>
>         <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
>         <td id="LC581" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%li</span><span class="pl-cce">\t</span><span class="pl-c1">%llu</span><span class="pl-cce">\t</span><span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, i, locus, sitesStatuses[locus]);</td>
>       </tr>
>       <tr>
>         <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
>         <td id="LC582" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
>         <td id="LC583" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Offspring loci and status codes:<span class="pl-cce">\n\t</span>number<span class="pl-cce">\t</span>index<span class="pl-cce">\t</span>code<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
>         <td id="LC584" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nSitesInOffspring; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
>         <td id="LC585" class="blob-code blob-code-inner js-file-line">            locus = *(offsp_SiteIndexes + i);</td>
>       </tr>
>       <tr>
>         <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
>         <td id="LC586" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%li</span><span class="pl-cce">\t</span><span class="pl-c1">%llu</span><span class="pl-cce">\t</span><span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, i, locus, offsp_lociStates[i]);</td>
>       </tr>
>       <tr>
>         <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
>         <td id="LC587" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
>         <td id="LC588" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; nSitesInOffspring; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
>         <td id="LC589" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( *(offsp_SiteIndexes + i) &lt;= *(offsp_SiteIndexes + i - <span class="pl-c1">1</span>) ) {</td>
>       </tr>
>       <tr>
>         <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
>         <td id="LC590" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in figureOutOffspringGenomeSites():<span class="pl-cce">\n\t</span>*(offsp_SiteIndexes + i) (<span class="pl-c1">%llu</span>) &lt;= *(offsp_SiteIndexes + i - 1) (<span class="pl-c1">%llu</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, *(offsp_SiteIndexes + i), *(offsp_SiteIndexes + i - <span class="pl-c1">1</span>));</td>
>       </tr>
>       <tr>
>         <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
>         <td id="LC591" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
>         <td id="LC592" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
>         <td id="LC593" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
>         <td id="LC594" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
>         <td id="LC595" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>nSitesInOffspring = <span class="pl-c1">%li</span><span class="pl-cce">\n</span>New sites from mutations = <span class="pl-c1">%li</span>, retained sites = <span class="pl-c1">%li</span>, repeat mutations = <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nSitesInOffspring, newMutationSiteCount, retainedSites, nRepeatMutations);</td>
>       </tr>
>       <tr>
>         <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
>         <td id="LC596" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
>         <td id="LC597" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
>         <td id="LC598" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> nSitesInOffspring;</td>
>       </tr>
>       <tr>
>         <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
>         <td id="LC599" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
>         <td id="LC600" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
>         <td id="LC601" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
>         <td id="LC602" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">finalTasks</span>(<span class="pl-k">unsigned</span> RNG_SEED)</td>
>       </tr>
>       <tr>
>         <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
>         <td id="LC603" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
>         <td id="LC604" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">printParametersToFiles</span>(RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
>         <td id="LC605" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
>         <td id="LC606" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(genotypes0);</td>
>       </tr>
>       <tr>
>         <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
>         <td id="LC607" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(genotypes1);</td>
>       </tr>
>       <tr>
>         <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
>         <td id="LC608" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(parentalTrackedSiteIndexes);</td>
>       </tr>
>       <tr>
>         <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
>         <td id="LC609" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(siteIndexes);</td>
>       </tr>
>       <tr>
>         <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
>         <td id="LC610" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(sitesStatuses);</td>
>       </tr>
>       <tr>
>         <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
>         <td id="LC611" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(alleleFrequencies);</td>
>       </tr>
>       <tr>
>         <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
>         <td id="LC612" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(alleleCounts);</td>
>       </tr>
>       <tr>
>         <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
>         <td id="LC613" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(SFScounts);</td>
>       </tr>
>       <tr>
>         <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
>         <td id="LC614" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(siteClassifications);</td>
>       </tr>
>       <tr>
>         <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
>         <td id="LC615" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(DEMOGRAPHIC_CHANGE_TIMES);</td>
>       </tr>
>       <tr>
>         <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
>         <td id="LC616" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(K_VALUES);</td>
>       </tr>
>       <tr>
>         <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
>         <td id="LC617" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(MIGRATION_CHANGE_TIMES);</td>
>       </tr>
>       <tr>
>         <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
>         <td id="LC618" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(M_VALUES);</td>
>       </tr>
>       <tr>
>         <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
>         <td id="LC619" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(abundances);</td>
>       </tr>
>       <tr>
>         <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
>         <td id="LC620" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(selectionCoefficients);</td>
>       </tr>
>       <tr>
>         <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
>         <td id="LC621" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(locations);</td>
>       </tr>
>       <tr>
>         <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
>         <td id="LC622" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(environmentGradient);</td>
>       </tr>
>       <tr>
>         <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
>         <td id="LC623" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(linkageGroupMembership);</td>
>       </tr>
>       <tr>
>         <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
>         <td id="LC624" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
>         <td id="LC625" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
>         <td id="LC626" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
>         <td id="LC627" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">initializeRNG</span>(<span class="pl-k">unsigned</span> <span class="pl-k">int</span> RNG_SEED)</td>
>       </tr>
>       <tr>
>         <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
>         <td id="LC628" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
>         <td id="LC629" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> i;</td>
>       </tr>
>       <tr>
>         <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
>         <td id="LC630" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
>         <td id="LC631" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// initialize random number generator</span></td>
>       </tr>
>       <tr>
>         <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
>         <td id="LC632" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// T and r are global variables for the RNG state and calls</span></td>
>       </tr>
>       <tr>
>         <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
>         <td id="LC633" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">gsl_rng_env_setup</span>(); <span class="pl-c">// set up the environment variables for the RNG</span></td>
>       </tr>
>       <tr>
>         <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
>         <td id="LC634" class="blob-code blob-code-inner js-file-line">    rngType = gsl_rng_mt19937; <span class="pl-c">// Mersenne Twister// for default you can say T = gsl_rng_default;</span></td>
>       </tr>
>       <tr>
>         <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
>         <td id="LC635" class="blob-code blob-code-inner js-file-line">    rngState = <span class="pl-c1">gsl_rng_alloc</span>(rngType);</td>
>       </tr>
>       <tr>
>         <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
>         <td id="LC636" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">gsl_rng_set</span>(rngState, RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
>         <td id="LC637" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
>         <td id="LC638" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    for ( i = 0; i &lt; 10; i++ )</span></td>
>       </tr>
>       <tr>
>         <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
>         <td id="LC639" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//        printf(&quot;%f\n&quot;, gsl_rng_uniform(rngState) );</span></td>
>       </tr>
>       <tr>
>         <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
>         <td id="LC640" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
>         <td id="LC641" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
>         <td id="LC642" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
>         <td id="LC643" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">makeCumulativeFitnessNumLines</span>(<span class="pl-k">double</span> *fitnessValues, <span class="pl-k">double</span> *fitnessNumLines, <span class="pl-k">long</span> <span class="pl-k">int</span> *individualsInDeme)</td>
>       </tr>
>       <tr>
>         <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
>         <td id="LC644" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
>         <td id="LC645" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> pop;</td>
>       </tr>
>       <tr>
>         <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
>         <td id="LC646" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> i, j, nhere, *lipt, masterIndex, count;</td>
>       </tr>
>       <tr>
>         <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
>         <td id="LC647" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> fitSum, *dptfnl, fitval, *startpt;</td>
>       </tr>
>       <tr>
>         <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
>         <td id="LC648" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
>         <td id="LC649" class="blob-code blob-code-inner js-file-line">    dptfnl = fitnessNumLines; <span class="pl-c">// ordered for each deme</span></td>
>       </tr>
>       <tr>
>         <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
>         <td id="LC650" class="blob-code blob-code-inner js-file-line">    lipt = individualsInDeme; <span class="pl-c">// list of individual indexes in deme</span></td>
>       </tr>
>       <tr>
>         <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
>         <td id="LC651" class="blob-code blob-code-inner js-file-line">    count = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
>         <td id="LC652" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( pop = <span class="pl-c1">0</span>; pop &lt; nPOPULATIONS; pop++ ) { <span class="pl-c">// go population by population</span></td>
>       </tr>
>       <tr>
>         <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
>         <td id="LC653" class="blob-code blob-code-inner js-file-line">        nhere = abundances[pop]; <span class="pl-c">// get total number here</span></td>
>       </tr>
>       <tr>
>         <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
>         <td id="LC654" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( nhere &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
>         <td id="LC655" class="blob-code blob-code-inner js-file-line">            startpt = dptfnl; <span class="pl-c">// save starting point in array</span></td>
>       </tr>
>       <tr>
>         <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
>         <td id="LC656" class="blob-code blob-code-inner js-file-line">            masterIndex = *lipt; <span class="pl-c">// individual&#39;s index</span></td>
>       </tr>
>       <tr>
>         <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
>         <td id="LC657" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
>         <td id="LC658" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( pop != *(locations + masterIndex) ) {</td>
>       </tr>
>       <tr>
>         <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
>         <td id="LC659" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in makeCumulativeFitnessNumLines():<span class="pl-cce">\n\t</span>location (<span class="pl-c1">%i</span>) doesn&#39;t match pop (<span class="pl-c1">%i</span>)!<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, *(locations + masterIndex), pop);</td>
>       </tr>
>       <tr>
>         <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
>         <td id="LC660" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
>         <td id="LC661" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
>         <td id="LC662" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
>         <td id="LC663" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
>         <td id="LC664" class="blob-code blob-code-inner js-file-line">            fitval = *(fitnessValues + masterIndex);  <span class="pl-c">// individual&#39;s fitness</span></td>
>       </tr>
>       <tr>
>         <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
>         <td id="LC665" class="blob-code blob-code-inner js-file-line">            fitSum = fitval; <span class="pl-c">// first individual in deme: set cumulative sum start point</span></td>
>       </tr>
>       <tr>
>         <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
>         <td id="LC666" class="blob-code blob-code-inner js-file-line">            *dptfnl = fitval; <span class="pl-c">// save value in fitness number line</span></td>
>       </tr>
>       <tr>
>         <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
>         <td id="LC667" class="blob-code blob-code-inner js-file-line">            lipt++; <span class="pl-c">// advance individual indexing pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
>         <td id="LC668" class="blob-code blob-code-inner js-file-line">            dptfnl++; <span class="pl-c">// advance number line pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
>         <td id="LC669" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
>         <td id="LC670" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; nhere; i++ ) { <span class="pl-c">// start with 1 because 0 done above</span></td>
>       </tr>
>       <tr>
>         <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
>         <td id="LC671" class="blob-code blob-code-inner js-file-line">                masterIndex = *lipt; <span class="pl-c">// individual&#39;s index</span></td>
>       </tr>
>       <tr>
>         <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
>         <td id="LC672" class="blob-code blob-code-inner js-file-line">                fitval = *(fitnessValues + masterIndex); <span class="pl-c">// individual&#39;s fitness</span></td>
>       </tr>
>       <tr>
>         <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
>         <td id="LC673" class="blob-code blob-code-inner js-file-line">                *dptfnl = *(dptfnl - <span class="pl-c1">1</span>) + fitval; <span class="pl-c">// make number line cumulative;</span></td>
>       </tr>
>       <tr>
>         <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
>         <td id="LC674" class="blob-code blob-code-inner js-file-line">                fitSum += fitval; <span class="pl-c">// store total sum</span></td>
>       </tr>
>       <tr>
>         <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
>         <td id="LC675" class="blob-code blob-code-inner js-file-line">                lipt++; <span class="pl-c">// advance individual&#39;s index pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
>         <td id="LC676" class="blob-code blob-code-inner js-file-line">                dptfnl++; <span class="pl-c">// advance fitness number line pointer</span></td>
>       </tr>
>       <tr>
>         <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
>         <td id="LC677" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
>         <td id="LC678" class="blob-code blob-code-inner js-file-line">            fitSum = <span class="pl-c1">1.0</span> / fitSum; <span class="pl-c">// now done with this deme&#39;s raw numbers; time to normalize</span></td>
>       </tr>
>       <tr>
>         <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
>         <td id="LC679" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nhere; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
>         <td id="LC680" class="blob-code blob-code-inner js-file-line">                *startpt *= fitSum;</td>
>       </tr>
>       <tr>
>         <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
>         <td id="LC681" class="blob-code blob-code-inner js-file-line">                startpt++;</td>
>       </tr>
>       <tr>
>         <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
>         <td id="LC682" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
>         <td id="LC683" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
>         <td id="LC684" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
>         <td id="LC685" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
>         <td id="LC686" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
>         <td id="LC687" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
>         <td id="LC688" class="blob-code blob-code-inner js-file-line">        dptfnl = fitnessNumLines;</td>
>       </tr>
>       <tr>
>         <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
>         <td id="LC689" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( pop = <span class="pl-c1">0</span>; pop &lt; nPOPULATIONS; pop++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
>         <td id="LC690" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( abundances[pop] &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
>         <td id="LC691" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Deme <span class="pl-c1">%i</span>, first fit = <span class="pl-c1">%f</span>, last fit = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, pop, *dptfnl, *(dptfnl + abundances[pop] - <span class="pl-c1">1</span>));</td>
>       </tr>
>       <tr>
>         <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
>         <td id="LC692" class="blob-code blob-code-inner js-file-line">                dptfnl++;</td>
>       </tr>
>       <tr>
>         <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
>         <td id="LC693" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; abundances[pop]; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
>         <td id="LC694" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> ( *dptfnl &lt; *(dptfnl - <span class="pl-c1">1</span>) ) {</td>
>       </tr>
>       <tr>
>         <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
>         <td id="LC695" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in makeCumulativeFitnessNumLines():<span class="pl-cce">\n\t</span>Decreasing values in fitness vector:<span class="pl-cce">\n\t</span><span class="pl-c1">%f</span><span class="pl-cce">\t</span><span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, *dptfnl, *(dptfnl - <span class="pl-c1">1</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
>         <td id="LC696" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
>         <td id="LC697" class="blob-code blob-code-inner js-file-line">                    }</td>
>       </tr>
>       <tr>
>         <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
>         <td id="LC698" class="blob-code blob-code-inner js-file-line">                    dptfnl++;</td>
>       </tr>
>       <tr>
>         <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
>         <td id="LC699" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
>         <td id="LC700" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
>         <td id="LC701" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
>         <td id="LC702" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>No individuals in Deme <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, pop);</td>
>       </tr>
>       <tr>
>         <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
>         <td id="LC703" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
>         <td id="LC704" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
>         <td id="LC705" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
>         <td id="LC706" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
>         <td id="LC707" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
>         <td id="LC708" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
>         <td id="LC709" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">makeDemesIndexes</span>(<span class="pl-k">long</span> <span class="pl-k">int</span> *individualsInDeme)</td>
>       </tr>
>       <tr>
>         <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
>         <td id="LC710" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
>         <td id="LC711" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// this function makes a vector of consecutive indexes in each deme</span></td>
>       </tr>
>       <tr>
>         <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
>         <td id="LC712" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// this is done because -- at times that this is called -- the individuals are unsorted due to migration</span></td>
>       </tr>
>       <tr>
>         <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
>         <td id="LC713" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// with high migration rates, maybe a sort would actually be more efficient???</span></td>
>       </tr>
>       <tr>
>         <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
>         <td id="LC714" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
>         <td id="LC715" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> i, j, demePosition[nPOPULATIONS], spot;</td>
>       </tr>
>       <tr>
>         <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
>         <td id="LC716" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> *ipt, loc;</td>
>       </tr>
>       <tr>
>         <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
>         <td id="LC717" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
>         <td id="LC718" class="blob-code blob-code-inner js-file-line">    demePosition[<span class="pl-c1">0</span>] = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
>         <td id="LC719" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; nPOPULATIONS; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
>         <td id="LC720" class="blob-code blob-code-inner js-file-line">        demePosition[i] = demePosition[(i-<span class="pl-c1">1</span>)] + abundances[(i-<span class="pl-c1">1</span>)];</td>
>       </tr>
>       <tr>
>         <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
>         <td id="LC721" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
>         <td id="LC722" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
>         <td id="LC723" class="blob-code blob-code-inner js-file-line">    ipt = locations;</td>
>       </tr>
>       <tr>
>         <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
>         <td id="LC724" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
>         <td id="LC725" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; N; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
>         <td id="LC726" class="blob-code blob-code-inner js-file-line">        loc = *ipt;</td>
>       </tr>
>       <tr>
>         <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
>         <td id="LC727" class="blob-code blob-code-inner js-file-line">        spot = demePosition[loc];</td>
>       </tr>
>       <tr>
>         <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
>         <td id="LC728" class="blob-code blob-code-inner js-file-line">        *(individualsInDeme + spot) = i;</td>
>       </tr>
>       <tr>
>         <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
>         <td id="LC729" class="blob-code blob-code-inner js-file-line">        demePosition[loc] = demePosition[loc] + <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
>         <td id="LC730" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
>         <td id="LC731" class="blob-code blob-code-inner js-file-line">        ipt++;</td>
>       </tr>
>       <tr>
>         <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
>         <td id="LC732" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
>         <td id="LC733" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
>         <td id="LC734" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
>         <td id="LC735" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">FILE</span> *testMakeIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
>         <td id="LC736" class="blob-code blob-code-inner js-file-line">        testMakeIndexes = <span class="pl-c1">fopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>TestMakeDemesIndexes.txt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
>         <td id="LC737" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; N; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
>         <td id="LC738" class="blob-code blob-code-inner js-file-line">            j = individualsInDeme[i];</td>
>       </tr>
>       <tr>
>         <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
>         <td id="LC739" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(testMakeIndexes, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%li</span>,<span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, j, locations[j]);</td>
>       </tr>
>       <tr>
>         <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
>         <td id="LC740" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
>         <td id="LC741" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fclose</span>(testMakeIndexes);</td>
>       </tr>
>       <tr>
>         <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
>         <td id="LC742" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
>         <td id="LC743" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
>         <td id="LC744" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
>         <td id="LC745" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
>         <td id="LC746" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">makeOneOffspring</span>(<span class="pl-k">long</span> <span class="pl-k">int</span> momIndex, <span class="pl-k">long</span> <span class="pl-k">int</span> dadIndex, <span class="pl-k">short</span> <span class="pl-k">int</span> *offGTpt, <span class="pl-k">long</span> <span class="pl-k">int</span> nSitesInOffspring, <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *offsp_SiteIndexes, <span class="pl-k">short</span> <span class="pl-k">int</span> *offsp_lociStates)</td>
>       </tr>
>       <tr>
>         <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
>         <td id="LC747" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
>         <td id="LC748" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> i, currentLinkageGroup;</td>
>       </tr>
>       <tr>
>         <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
>         <td id="LC749" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> j, focalSite, *offsp_SIpt, *parentalLocusIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
>         <td id="LC750" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">short</span> <span class="pl-k">int</span> *sipt, *parentPoint, *offsp_ls;</td>
>       </tr>
>       <tr>
>         <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
>         <td id="LC751" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> chromosome;</td>
>       </tr>
>       <tr>
>         <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
>         <td id="LC752" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> meanRecombDistance = <span class="pl-c1">1000.0</span> / RECOMBINATION_RATE_PER_KB;</td>
>       </tr>
>       <tr>
>         <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
>         <td id="LC753" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> nextRecombinationSpot;</td>
>       </tr>
>       <tr>
>         <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
>         <td id="LC754" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> parentalLocusCounter;</td>
>       </tr>
>       <tr>
>         <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
>         <td id="LC755" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
>         <td id="LC756" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
>         <td id="LC757" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( *(locations + momIndex) != *(locations + dadIndex) ) {</td>
>       </tr>
>       <tr>
>         <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
>         <td id="LC758" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in makeOneOffspring:<span class="pl-cce">\n\t</span>Indexes are off giving bogus mom or dad<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
>         <td id="LC759" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
>         <td id="LC760" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
>         <td id="LC761" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
>         <td id="LC762" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
>         <td id="LC763" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">2</span>; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
>         <td id="LC764" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
>         <td id="LC765" class="blob-code blob-code-inner js-file-line">        sipt = offGTpt + i; <span class="pl-c">// which haploid set in offspring</span></td>
>       </tr>
>       <tr>
>         <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
>         <td id="LC766" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
>         <td id="LC767" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
>         <td id="LC768" class="blob-code blob-code-inner js-file-line">        parentalLocusCounter = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
>         <td id="LC769" class="blob-code blob-code-inner js-file-line">        parentalLocusIndexes = parentalTrackedSiteIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
>         <td id="LC770" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( nTrackedSitesInParents ) {</td>
>       </tr>
>       <tr>
>         <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
>         <td id="LC771" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> ( *(sitesStatuses + *parentalLocusIndexes) != LOCUS_STATUS_VARIABLE_IN_PARENTS ) {</td>
>       </tr>
>       <tr>
>         <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
>         <td id="LC772" class="blob-code blob-code-inner js-file-line">                parentalLocusCounter++;</td>
>       </tr>
>       <tr>
>         <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
>         <td id="LC773" class="blob-code blob-code-inner js-file-line">                parentalLocusIndexes++;</td>
>       </tr>
>       <tr>
>         <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
>         <td id="LC774" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
>         <td id="LC775" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
>         <td id="LC776" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
>         <td id="LC777" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// which parent</span></td>
>       </tr>
>       <tr>
>         <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
>         <td id="LC778" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( i == <span class="pl-c1">0</span> )</td>
>       </tr>
>       <tr>
>         <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
>         <td id="LC779" class="blob-code blob-code-inner js-file-line">            parentPoint = gts + (PLOIDY * nTrackedSitesInParents * momIndex ) + (PLOIDY * parentalLocusCounter);</td>
>       </tr>
>       <tr>
>         <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
>         <td id="LC780" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
>         <td id="LC781" class="blob-code blob-code-inner js-file-line">            parentPoint = gts + (PLOIDY * nTrackedSitesInParents * dadIndex ) + (PLOIDY * parentalLocusCounter);</td>
>       </tr>
>       <tr>
>         <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
>         <td id="LC782" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
>         <td id="LC783" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
>         <td id="LC784" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
>         <td id="LC785" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// which chromosome to start with in the parent</span></td>
>       </tr>
>       <tr>
>         <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
>         <td id="LC786" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( <span class="pl-c1">gsl_rng_uniform</span>( rngState ) &lt; <span class="pl-c1">0.5</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
>         <td id="LC787" class="blob-code blob-code-inner js-file-line">            chromosome = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
>         <td id="LC788" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
>         <td id="LC789" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
>         <td id="LC790" class="blob-code blob-code-inner js-file-line">            chromosome = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
>         <td id="LC791" class="blob-code blob-code-inner js-file-line">            parentPoint++; <span class="pl-c">// advance 1 to &quot;second&quot; choromosome</span></td>
>       </tr>
>       <tr>
>         <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
>         <td id="LC792" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
>         <td id="LC793" class="blob-code blob-code-inner js-file-line">        currentLinkageGroup = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
>         <td id="LC794" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
>         <td id="LC795" class="blob-code blob-code-inner js-file-line">        offsp_ls = offsp_lociStates;</td>
>       </tr>
>       <tr>
>         <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
>         <td id="LC796" class="blob-code blob-code-inner js-file-line">        offsp_SIpt = offsp_SiteIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
>         <td id="LC797" class="blob-code blob-code-inner js-file-line">        nextRecombinationSpot = (<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) <span class="pl-c1">randExp</span>( meanRecombDistance );</td>
>       </tr>
>       <tr>
>         <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
>         <td id="LC798" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( j = <span class="pl-c1">0</span>; j &lt; nSitesInOffspring; j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
>         <td id="LC799" class="blob-code blob-code-inner js-file-line">            focalSite = *offsp_SIpt;</td>
>       </tr>
>       <tr>
>         <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
>         <td id="LC800" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
>         <td id="LC801" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// now copy alleles from parents to offspring</span></td>
>       </tr>
>       <tr>
>         <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
>         <td id="LC802" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( *offsp_ls == LOCUS_STATUS_VARIABLE_IN_PARENTS || *offsp_ls == LOCUS_STATUS_VARIABLE_PLUS_MUT ) {</td>
>       </tr>
>       <tr>
>         <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
>         <td id="LC803" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
>         <td id="LC804" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// first handle recombination and independent assortment</span></td>
>       </tr>
>       <tr>
>         <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
>         <td id="LC805" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( *(linkageGroupMembership + focalSite) != currentLinkageGroup ) {</td>
>       </tr>
>       <tr>
>         <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
>         <td id="LC806" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c">// new &quot;chromosome&quot;; need to implement independent assortment</span></td>
>       </tr>
>       <tr>
>         <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
>         <td id="LC807" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> ( <span class="pl-c1">gsl_rng_uniform</span>(rngState) &lt; <span class="pl-c1">0.5</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
>         <td id="LC808" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c">// flip to other chromosome in parent</span></td>
>       </tr>
>       <tr>
>         <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
>         <td id="LC809" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> ( chromosome ) {</td>
>       </tr>
>       <tr>
>         <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
>         <td id="LC810" class="blob-code blob-code-inner js-file-line">                            parentPoint--; <span class="pl-c">// move back one</span></td>
>       </tr>
>       <tr>
>         <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
>         <td id="LC811" class="blob-code blob-code-inner js-file-line">                            chromosome = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
>         <td id="LC812" class="blob-code blob-code-inner js-file-line">                        }</td>
>       </tr>
>       <tr>
>         <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
>         <td id="LC813" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
>         <td id="LC814" class="blob-code blob-code-inner js-file-line">                            parentPoint++; <span class="pl-c">// move forward one</span></td>
>       </tr>
>       <tr>
>         <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
>         <td id="LC815" class="blob-code blob-code-inner js-file-line">                            chromosome = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
>         <td id="LC816" class="blob-code blob-code-inner js-file-line">                        }</td>
>       </tr>
>       <tr>
>         <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
>         <td id="LC817" class="blob-code blob-code-inner js-file-line">                    }</td>
>       </tr>
>       <tr>
>         <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
>         <td id="LC818" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> ( *(linkageGroupMembership + focalSite) &lt; currentLinkageGroup ) {</td>
>       </tr>
>       <tr>
>         <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
>         <td id="LC819" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in makeOneOffspring():<span class="pl-cce">\n\t</span>*(linkageGroupMembership + focalSite) (<span class="pl-c1">%i</span>) &lt; currentLinkageGroup (<span class="pl-c1">%i</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, *(linkageGroupMembership + focalSite), currentLinkageGroup );</td>
>       </tr>
>       <tr>
>         <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
>         <td id="LC820" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
>         <td id="LC821" class="blob-code blob-code-inner js-file-line">                    }</td>
>       </tr>
>       <tr>
>         <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
>         <td id="LC822" class="blob-code blob-code-inner js-file-line">                    currentLinkageGroup = *(linkageGroupMembership + focalSite);</td>
>       </tr>
>       <tr>
>         <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
>         <td id="LC823" class="blob-code blob-code-inner js-file-line">                    </td>
>       </tr>
>       <tr>
>         <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
>         <td id="LC824" class="blob-code blob-code-inner js-file-line">                    nextRecombinationSpot = focalSite + ((<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) <span class="pl-c1">randExp</span>( meanRecombDistance ));</td>
>       </tr>
>       <tr>
>         <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
>         <td id="LC825" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
>         <td id="LC826" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">else</span> <span class="pl-k">if</span> ( focalSite &gt; nextRecombinationSpot ) {</td>
>       </tr>
>       <tr>
>         <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
>         <td id="LC827" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c">// implement recombination within a linkage group</span></td>
>       </tr>
>       <tr>
>         <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
>         <td id="LC828" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">do</span> {</td>
>       </tr>
>       <tr>
>         <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
>         <td id="LC829" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c">// do-while loop allows for multiple recombination events</span></td>
>       </tr>
>       <tr>
>         <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
>         <td id="LC830" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> ( chromosome ) {</td>
>       </tr>
>       <tr>
>         <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
>         <td id="LC831" class="blob-code blob-code-inner js-file-line">                            parentPoint--; <span class="pl-c">// move back one</span></td>
>       </tr>
>       <tr>
>         <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
>         <td id="LC832" class="blob-code blob-code-inner js-file-line">                            chromosome = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
>         <td id="LC833" class="blob-code blob-code-inner js-file-line">                        }</td>
>       </tr>
>       <tr>
>         <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
>         <td id="LC834" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
>         <td id="LC835" class="blob-code blob-code-inner js-file-line">                            parentPoint++; <span class="pl-c">// move forward one</span></td>
>       </tr>
>       <tr>
>         <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
>         <td id="LC836" class="blob-code blob-code-inner js-file-line">                            chromosome = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
>         <td id="LC837" class="blob-code blob-code-inner js-file-line">                        }</td>
>       </tr>
>       <tr>
>         <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
>         <td id="LC838" class="blob-code blob-code-inner js-file-line">                        nextRecombinationSpot += ((<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) <span class="pl-c1">randExp</span>( meanRecombDistance ));</td>
>       </tr>
>       <tr>
>         <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
>         <td id="LC839" class="blob-code blob-code-inner js-file-line">                    } <span class="pl-k">while</span> ( focalSite &gt; nextRecombinationSpot );</td>
>       </tr>
>       <tr>
>         <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
>         <td id="LC840" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
>         <td id="LC841" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
>         <td id="LC842" class="blob-code blob-code-inner js-file-line">                *sipt = *parentPoint;</td>
>       </tr>
>       <tr>
>         <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
>         <td id="LC843" class="blob-code blob-code-inner js-file-line">                parentalLocusCounter++;  <span class="pl-c">// one more parental locus taken care of</span></td>
>       </tr>
>       <tr>
>         <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
>         <td id="LC844" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( j &lt; (nSitesInOffspring - <span class="pl-c1">1</span>) &amp;&amp; parentalLocusCounter &lt; nTrackedSitesInParents ) {</td>
>       </tr>
>       <tr>
>         <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
>         <td id="LC845" class="blob-code blob-code-inner js-file-line">                    parentalLocusIndexes++; <span class="pl-c">// advance to index of next parental site/locus</span></td>
>       </tr>
>       <tr>
>         <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
>         <td id="LC846" class="blob-code blob-code-inner js-file-line">                    parentPoint += PLOIDY; <span class="pl-c">// advance to next site in genome</span></td>
>       </tr>
>       <tr>
>         <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
>         <td id="LC847" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">while</span> ( *(sitesStatuses + *parentalLocusIndexes) != LOCUS_STATUS_VARIABLE_IN_PARENTS &amp;&amp; parentalLocusCounter &lt; nTrackedSitesInParents ) {</td>
>       </tr>
>       <tr>
>         <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
>         <td id="LC848" class="blob-code blob-code-inner js-file-line">                        parentalLocusIndexes++; <span class="pl-c">// advance to index of next parental site/locus</span></td>
>       </tr>
>       <tr>
>         <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
>         <td id="LC849" class="blob-code blob-code-inner js-file-line">                        parentPoint += PLOIDY; <span class="pl-c">// advance to next site in genome</span></td>
>       </tr>
>       <tr>
>         <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
>         <td id="LC850" class="blob-code blob-code-inner js-file-line">                        parentalLocusCounter++; <span class="pl-c">// count prior locus toward those that are &quot;done&quot;</span></td>
>       </tr>
>       <tr>
>         <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
>         <td id="LC851" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c">// the while part helps skip over loci that will no longer be tracked</span></td>
>       </tr>
>       <tr>
>         <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
>         <td id="LC852" class="blob-code blob-code-inner js-file-line">                    }</td>
>       </tr>
>       <tr>
>         <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
>         <td id="LC853" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
>         <td id="LC854" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
>         <td id="LC855" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> <span class="pl-k">if</span> ( *offsp_ls == LOCUS_STATUS_NEW_MUT_ONLY ) {</td>
>       </tr>
>       <tr>
>         <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
>         <td id="LC856" class="blob-code blob-code-inner js-file-line">                *sipt = ALLELE_CODE_ANCESTRAL; <span class="pl-c">// just put in the locus as a placeholder; mutations added later</span></td>
>       </tr>
>       <tr>
>         <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
>         <td id="LC857" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// do NOT advance any parent pointers or counters</span></td>
>       </tr>
>       <tr>
>         <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
>         <td id="LC858" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
>         <td id="LC859" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
>         <td id="LC860" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in makeOneOffspring():<span class="pl-cce">\n\t</span>*offsp_ls = <span class="pl-c1">%i</span> code not recognized.<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, *offsp_ls);</td>
>       </tr>
>       <tr>
>         <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
>         <td id="LC861" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
>         <td id="LC862" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
>         <td id="LC863" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
>         <td id="LC864" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( *sipt )</td>
>       </tr>
>       <tr>
>         <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
>         <td id="LC865" class="blob-code blob-code-inner js-file-line">                *(alleleCounts + focalSite) += *sipt;</td>
>       </tr>
>       <tr>
>         <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
>         <td id="LC866" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
>         <td id="LC867" class="blob-code blob-code-inner js-file-line">            sipt += PLOIDY;</td>
>       </tr>
>       <tr>
>         <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
>         <td id="LC868" class="blob-code blob-code-inner js-file-line">            offsp_SIpt++;</td>
>       </tr>
>       <tr>
>         <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
>         <td id="LC869" class="blob-code blob-code-inner js-file-line">            offsp_ls++;</td>
>       </tr>
>       <tr>
>         <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
>         <td id="LC870" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
>         <td id="LC871" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
>         <td id="LC872" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
>         <td id="LC873" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
>         <td id="LC874" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
>         <td id="LC875" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
>         <td id="LC876" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">migration</span>(<span class="pl-k">void</span>)</td>
>       </tr>
>       <tr>
>         <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
>         <td id="LC877" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
>         <td id="LC878" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> i, j, counter, focalTime, nhere, nmoving, mover;</td>
>       </tr>
>       <tr>
>         <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
>         <td id="LC879" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> cumulativeM, numberLine[nPOPULATIONS], dum, *dpt;</td>
>       </tr>
>       <tr>
>         <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
>         <td id="LC880" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> choiceVector[N], thoseMoving[N], immigrants[nPOPULATIONS], emigrants[nPOPULATIONS];</td>
>       </tr>
>       <tr>
>         <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
>         <td id="LC881" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> chosen, dumi;</td>
>       </tr>
>       <tr>
>         <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
>         <td id="LC882" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
>         <td id="LC883" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; N; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
>         <td id="LC884" class="blob-code blob-code-inner js-file-line">        choiceVector[i] = i;</td>
>       </tr>
>       <tr>
>         <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
>         <td id="LC885" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
>         <td id="LC886" class="blob-code blob-code-inner js-file-line">        immigrants[i] = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
>         <td id="LC887" class="blob-code blob-code-inner js-file-line">        emigrants[i] = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
>         <td id="LC888" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
>         <td id="LC889" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
>         <td id="LC890" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// check to see if now is a time to change migration rates</span></td>
>       </tr>
>       <tr>
>         <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
>         <td id="LC891" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( nMIGRATION_CHANGES &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
>         <td id="LC892" class="blob-code blob-code-inner js-file-line">        focalTime = MIGRATION_CHANGE_TIMES[currentMigrationPeriod];</td>
>       </tr>
>       <tr>
>         <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
>         <td id="LC893" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( t == focalTime ) {</td>
>       </tr>
>       <tr>
>         <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
>         <td id="LC894" class="blob-code blob-code-inner js-file-line">            migRatePt += ( nPOPULATIONS * nPOPULATIONS );</td>
>       </tr>
>       <tr>
>         <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
>         <td id="LC895" class="blob-code blob-code-inner js-file-line">            currentMigrationPeriod++;</td>
>       </tr>
>       <tr>
>         <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
>         <td id="LC896" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
>         <td id="LC897" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
>         <td id="LC898" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
>         <td id="LC899" class="blob-code blob-code-inner js-file-line">    counter = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
>         <td id="LC900" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
>         <td id="LC901" class="blob-code blob-code-inner js-file-line">        nhere = abundances[i]; <span class="pl-c">// abundance in subpopulation i</span></td>
>       </tr>
>       <tr>
>         <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
>         <td id="LC902" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( nhere &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
>         <td id="LC903" class="blob-code blob-code-inner js-file-line">            cumulativeM = *(migRatePt + (i * nPOPULATIONS)); <span class="pl-c">// first entry in ith &quot;row&quot; of current migration matrix</span></td>
>       </tr>
>       <tr>
>         <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
>         <td id="LC904" class="blob-code blob-code-inner js-file-line">            numberLine[<span class="pl-c1">0</span>] = cumulativeM;</td>
>       </tr>
>       <tr>
>         <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
>         <td id="LC905" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( j = <span class="pl-c1">1</span>; j &lt; nPOPULATIONS; j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
>         <td id="LC906" class="blob-code blob-code-inner js-file-line">                cumulativeM += (*(migRatePt + (i * nPOPULATIONS) + j));</td>
>       </tr>
>       <tr>
>         <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
>         <td id="LC907" class="blob-code blob-code-inner js-file-line">                numberLine[j] = cumulativeM;</td>
>       </tr>
>       <tr>
>         <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
>         <td id="LC908" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
>         <td id="LC909" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( j = <span class="pl-c1">0</span>; j &lt; nPOPULATIONS; j++ )</td>
>       </tr>
>       <tr>
>         <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
>         <td id="LC910" class="blob-code blob-code-inner js-file-line">                numberLine[j] = numberLine[j] / cumulativeM; <span class="pl-c">// normalize</span></td>
>       </tr>
>       <tr>
>         <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
>         <td id="LC911" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
>         <td id="LC912" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( cumulativeM &gt; <span class="pl-c1">0.0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
>         <td id="LC913" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
>         <td id="LC914" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// determine how many migrate: stochastic</span></td>
>       </tr>
>       <tr>
>         <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
>         <td id="LC915" class="blob-code blob-code-inner js-file-line">                nmoving = <span class="pl-c1">gsl_ran_binomial</span>(rngState, cumulativeM, nhere);</td>
>       </tr>
>       <tr>
>         <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
>         <td id="LC916" class="blob-code blob-code-inner js-file-line">                </td>
>       </tr>
>       <tr>
>         <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
>         <td id="LC917" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( nmoving &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
>         <td id="LC918" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c">// determine which ones migrate: stochastic</span></td>
>       </tr>
>       <tr>
>         <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
>         <td id="LC919" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c">// int gsl_ran_choose (const gsl_rng * r, void * dest, size_t k, void * src, size_t n, size_t size)</span></td>
>       </tr>
>       <tr>
>         <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
>         <td id="LC920" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">gsl_ran_choose</span>( rngState, thoseMoving, nmoving, choiceVector, nhere, <span class="pl-k">sizeof</span>(<span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
>         <td id="LC921" class="blob-code blob-code-inner js-file-line">                    </td>
>       </tr>
>       <tr>
>         <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
>         <td id="LC922" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> ( j = <span class="pl-c1">0</span>; j &lt; nmoving; j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
>         <td id="LC923" class="blob-code blob-code-inner js-file-line">                        dum = <span class="pl-c1">gsl_rng_uniform</span>( rngState );</td>
>       </tr>
>       <tr>
>         <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
>         <td id="LC924" class="blob-code blob-code-inner js-file-line">                        dpt = numberLine;</td>
>       </tr>
>       <tr>
>         <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
>         <td id="LC925" class="blob-code blob-code-inner js-file-line">                        dumi = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
>         <td id="LC926" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">while</span> ( (*dpt) &lt; dum &amp;&amp; dumi &lt; nPOPULATIONS) {</td>
>       </tr>
>       <tr>
>         <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
>         <td id="LC927" class="blob-code blob-code-inner js-file-line">                            dpt++;</td>
>       </tr>
>       <tr>
>         <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
>         <td id="LC928" class="blob-code blob-code-inner js-file-line">                            dumi++;</td>
>       </tr>
>       <tr>
>         <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
>         <td id="LC929" class="blob-code blob-code-inner js-file-line">                        }</td>
>       </tr>
>       <tr>
>         <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
>         <td id="LC930" class="blob-code blob-code-inner js-file-line">                        </td>
>       </tr>
>       <tr>
>         <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
>         <td id="LC931" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> ( i == dumi ) {</td>
>       </tr>
>       <tr>
>         <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
>         <td id="LC932" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in migration():<span class="pl-cce">\n\t</span>migrator moving to same patch it is already in.<span class="pl-cce">\n\t</span>Need to fix algorithm<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
>         <td id="LC933" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
>         <td id="LC934" class="blob-code blob-code-inner js-file-line">                        }</td>
>       </tr>
>       <tr>
>         <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
>         <td id="LC935" class="blob-code blob-code-inner js-file-line">                        </td>
>       </tr>
>       <tr>
>         <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
>         <td id="LC936" class="blob-code blob-code-inner js-file-line">                        mover = thoseMoving[j];</td>
>       </tr>
>       <tr>
>         <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
>         <td id="LC937" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> ( *(locations + counter + mover) != i ) {</td>
>       </tr>
>       <tr>
>         <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
>         <td id="LC938" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in migration():<span class="pl-cce">\n\t</span>Your mover isn&#39;t where you think she is.<span class="pl-cce">\n\t</span>Need to fix algorithm<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
>         <td id="LC939" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
>         <td id="LC940" class="blob-code blob-code-inner js-file-line">                        }</td>
>       </tr>
>       <tr>
>         <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
>         <td id="LC941" class="blob-code blob-code-inner js-file-line">                        *(locations + counter + mover) = dumi;</td>
>       </tr>
>       <tr>
>         <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
>         <td id="LC942" class="blob-code blob-code-inner js-file-line">                        </td>
>       </tr>
>       <tr>
>         <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
>         <td id="LC943" class="blob-code blob-code-inner js-file-line">                        immigrants[dumi] = immigrants[dumi] + <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
>         <td id="LC944" class="blob-code blob-code-inner js-file-line">                        emigrants[i] = emigrants[i] + <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
>         <td id="LC945" class="blob-code blob-code-inner js-file-line">                        </td>
>       </tr>
>       <tr>
>         <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
>         <td id="LC946" class="blob-code blob-code-inner js-file-line">                    }</td>
>       </tr>
>       <tr>
>         <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
>         <td id="LC947" class="blob-code blob-code-inner js-file-line">                    </td>
>       </tr>
>       <tr>
>         <td id="L948" class="blob-num js-line-number" data-line-number="948"></td>
>         <td id="LC948" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L949" class="blob-num js-line-number" data-line-number="949"></td>
>         <td id="LC949" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L950" class="blob-num js-line-number" data-line-number="950"></td>
>         <td id="LC950" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L951" class="blob-num js-line-number" data-line-number="951"></td>
>         <td id="LC951" class="blob-code blob-code-inner js-file-line">        counter += nhere;</td>
>       </tr>
>       <tr>
>         <td id="L952" class="blob-num js-line-number" data-line-number="952"></td>
>         <td id="LC952" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L953" class="blob-num js-line-number" data-line-number="953"></td>
>         <td id="LC953" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L954" class="blob-num js-line-number" data-line-number="954"></td>
>         <td id="LC954" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L955" class="blob-num js-line-number" data-line-number="955"></td>
>         <td id="LC955" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Abundances before migration:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L956" class="blob-num js-line-number" data-line-number="956"></td>
>         <td id="LC956" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L957" class="blob-num js-line-number" data-line-number="957"></td>
>         <td id="LC957" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, abundances[i]);</td>
>       </tr>
>       <tr>
>         <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
>         <td id="LC958" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Emigrants:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
>         <td id="LC959" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
>         <td id="LC960" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, emigrants[i]);</td>
>       </tr>
>       <tr>
>         <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
>         <td id="LC961" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Immigrants:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
>         <td id="LC962" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L963" class="blob-num js-line-number" data-line-number="963"></td>
>         <td id="LC963" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, immigrants[i]);</td>
>       </tr>
>       <tr>
>         <td id="L964" class="blob-num js-line-number" data-line-number="964"></td>
>         <td id="LC964" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L965" class="blob-num js-line-number" data-line-number="965"></td>
>         <td id="LC965" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L966" class="blob-num js-line-number" data-line-number="966"></td>
>         <td id="LC966" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L967" class="blob-num js-line-number" data-line-number="967"></td>
>         <td id="LC967" class="blob-code blob-code-inner js-file-line">        abundances[i] = abundances[i] + immigrants[i] - emigrants[i];</td>
>       </tr>
>       <tr>
>         <td id="L968" class="blob-num js-line-number" data-line-number="968"></td>
>         <td id="LC968" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L969" class="blob-num js-line-number" data-line-number="969"></td>
>         <td id="LC969" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L970" class="blob-num js-line-number" data-line-number="970"></td>
>         <td id="LC970" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L971" class="blob-num js-line-number" data-line-number="971"></td>
>         <td id="LC971" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Abundances after migration:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L972" class="blob-num js-line-number" data-line-number="972"></td>
>         <td id="LC972" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L973" class="blob-num js-line-number" data-line-number="973"></td>
>         <td id="LC973" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, abundances[i]);</td>
>       </tr>
>       <tr>
>         <td id="L974" class="blob-num js-line-number" data-line-number="974"></td>
>         <td id="LC974" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L975" class="blob-num js-line-number" data-line-number="975"></td>
>         <td id="LC975" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L976" class="blob-num js-line-number" data-line-number="976"></td>
>         <td id="LC976" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L977" class="blob-num js-line-number" data-line-number="977"></td>
>         <td id="LC977" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//printf(&quot;\nWarning: migration() not written yet!\n&quot;);</span></td>
>       </tr>
>       <tr>
>         <td id="L978" class="blob-num js-line-number" data-line-number="978"></td>
>         <td id="LC978" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//exit(0);</span></td>
>       </tr>
>       <tr>
>         <td id="L979" class="blob-num js-line-number" data-line-number="979"></td>
>         <td id="LC979" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L980" class="blob-num js-line-number" data-line-number="980"></td>
>         <td id="LC980" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L981" class="blob-num js-line-number" data-line-number="981"></td>
>         <td id="LC981" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L982" class="blob-num js-line-number" data-line-number="982"></td>
>         <td id="LC982" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">printParametersToFiles</span>(<span class="pl-k">unsigned</span> RNG_SEED)</td>
>       </tr>
>       <tr>
>         <td id="L983" class="blob-num js-line-number" data-line-number="983"></td>
>         <td id="LC983" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L984" class="blob-num js-line-number" data-line-number="984"></td>
>         <td id="LC984" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// make an R-sourceable script of parameter values</span></td>
>       </tr>
>       <tr>
>         <td id="L985" class="blob-num js-line-number" data-line-number="985"></td>
>         <td id="LC985" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> i, j;</td>
>       </tr>
>       <tr>
>         <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
>         <td id="LC986" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">FILE</span> *rfile;</td>
>       </tr>
>       <tr>
>         <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
>         <td id="LC987" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> *dpt, THETA;</td>
>       </tr>
>       <tr>
>         <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
>         <td id="LC988" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> foo;</td>
>       </tr>
>       <tr>
>         <td id="L989" class="blob-num js-line-number" data-line-number="989"></td>
>         <td id="LC989" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L990" class="blob-num js-line-number" data-line-number="990"></td>
>         <td id="LC990" class="blob-code blob-code-inner js-file-line">    rfile = <span class="pl-c1">fopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>metadataAndParameters.R<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L991" class="blob-num js-line-number" data-line-number="991"></td>
>         <td id="LC991" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>RNG_SEED &lt;- <span class="pl-c1">%u</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L992" class="blob-num js-line-number" data-line-number="992"></td>
>         <td id="LC992" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>nGENERATIONS &lt;- <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nGENERATIONS);</td>
>       </tr>
>       <tr>
>         <td id="L993" class="blob-num js-line-number" data-line-number="993"></td>
>         <td id="LC993" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>nPOPULATIONS &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nPOPULATIONS);</td>
>       </tr>
>       <tr>
>         <td id="L994" class="blob-num js-line-number" data-line-number="994"></td>
>         <td id="LC994" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L995" class="blob-num js-line-number" data-line-number="995"></td>
>         <td id="LC995" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L996" class="blob-num js-line-number" data-line-number="996"></td>
>         <td id="LC996" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// demography</span></td>
>       </tr>
>       <tr>
>         <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
>         <td id="LC997" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span># demography<span class="pl-cce">\n</span>nDEMOGRAPHIC_CHANGES &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nDEMOGRAPHIC_CHANGES);</td>
>       </tr>
>       <tr>
>         <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
>         <td id="LC998" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( nDEMOGRAPHIC_CHANGES &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
>         <td id="LC999" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( nDEMOGRAPHIC_CHANGES == <span class="pl-c1">1</span> )</td>
>       </tr>
>       <tr>
>         <td id="L1000" class="blob-num js-line-number" data-line-number="1000"></td>
>         <td id="LC1000" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>DEMOGRAPHIC_CHANGE_TIMES &lt;- <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, *DEMOGRAPHIC_CHANGE_TIMES);</td>
>       </tr>
>       <tr>
>         <td id="L1001" class="blob-num js-line-number" data-line-number="1001"></td>
>         <td id="LC1001" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1002" class="blob-num js-line-number" data-line-number="1002"></td>
>         <td id="LC1002" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>DEMOGRAPHIC_CHANGE_TIMES &lt;- c(<span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, *DEMOGRAPHIC_CHANGE_TIMES);</td>
>       </tr>
>       <tr>
>         <td id="L1003" class="blob-num js-line-number" data-line-number="1003"></td>
>         <td id="LC1003" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; nDEMOGRAPHIC_CHANGES; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L1004" class="blob-num js-line-number" data-line-number="1004"></td>
>         <td id="LC1004" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, *(DEMOGRAPHIC_CHANGE_TIMES + i));</td>
>       </tr>
>       <tr>
>         <td id="L1005" class="blob-num js-line-number" data-line-number="1005"></td>
>         <td id="LC1005" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1006" class="blob-num js-line-number" data-line-number="1006"></td>
>         <td id="LC1006" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1007" class="blob-num js-line-number" data-line-number="1007"></td>
>         <td id="LC1007" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
>         <td id="LC1008" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
>         <td id="LC1009" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>DEMOGRAPHIC_CHANGE_TIMES &lt;- -1<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
>         <td id="LC1010" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1011" class="blob-num js-line-number" data-line-number="1011"></td>
>         <td id="LC1011" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>K_VALUES &lt;- c(<span class="pl-c1">%E</span><span class="pl-pds">&quot;</span></span>, *K_VALUES);</td>
>       </tr>
>       <tr>
>         <td id="L1012" class="blob-num js-line-number" data-line-number="1012"></td>
>         <td id="LC1012" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; (nPOPULATIONS * (nDEMOGRAPHIC_CHANGES+<span class="pl-c1">1</span>)); i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1013" class="blob-num js-line-number" data-line-number="1013"></td>
>         <td id="LC1013" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-c1">%E</span><span class="pl-pds">&quot;</span></span>, *(K_VALUES+i));</td>
>       </tr>
>       <tr>
>         <td id="L1014" class="blob-num js-line-number" data-line-number="1014"></td>
>         <td id="LC1014" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1015" class="blob-num js-line-number" data-line-number="1015"></td>
>         <td id="LC1015" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1016" class="blob-num js-line-number" data-line-number="1016"></td>
>         <td id="LC1016" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>K_VALUES &lt;- matrix(data = K_VALUES, nrow = nDEMOGRAPHIC_CHANGES+1, ncol = nPOPULATIONS, byrow = TRUE)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1017" class="blob-num js-line-number" data-line-number="1017"></td>
>         <td id="LC1017" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>FIXED_POP_SIZE &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, FIXED_POP_SIZE);</td>
>       </tr>
>       <tr>
>         <td id="L1018" class="blob-num js-line-number" data-line-number="1018"></td>
>         <td id="LC1018" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>MAX_POP_GROWTH_RATE &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, MAX_POP_GROWTH_RATE);</td>
>       </tr>
>       <tr>
>         <td id="L1019" class="blob-num js-line-number" data-line-number="1019"></td>
>         <td id="LC1019" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1020" class="blob-num js-line-number" data-line-number="1020"></td>
>         <td id="LC1020" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1021" class="blob-num js-line-number" data-line-number="1021"></td>
>         <td id="LC1021" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// migration parameters</span></td>
>       </tr>
>       <tr>
>         <td id="L1022" class="blob-num js-line-number" data-line-number="1022"></td>
>         <td id="LC1022" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span># migration parameters<span class="pl-cce">\n</span>nMIGRATION_CHANGES &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nMIGRATION_CHANGES);</td>
>       </tr>
>       <tr>
>         <td id="L1023" class="blob-num js-line-number" data-line-number="1023"></td>
>         <td id="LC1023" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( nMIGRATION_CHANGES &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1024" class="blob-num js-line-number" data-line-number="1024"></td>
>         <td id="LC1024" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( nMIGRATION_CHANGES == <span class="pl-c1">1</span> )</td>
>       </tr>
>       <tr>
>         <td id="L1025" class="blob-num js-line-number" data-line-number="1025"></td>
>         <td id="LC1025" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>MIGRATION_CHANGE_TIMES &lt;- <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, *MIGRATION_CHANGE_TIMES);</td>
>       </tr>
>       <tr>
>         <td id="L1026" class="blob-num js-line-number" data-line-number="1026"></td>
>         <td id="LC1026" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1027" class="blob-num js-line-number" data-line-number="1027"></td>
>         <td id="LC1027" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>MIGRATION_CHANGE_TIMES &lt;- c(<span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, *MIGRATION_CHANGE_TIMES);</td>
>       </tr>
>       <tr>
>         <td id="L1028" class="blob-num js-line-number" data-line-number="1028"></td>
>         <td id="LC1028" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; nMIGRATION_CHANGES; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L1029" class="blob-num js-line-number" data-line-number="1029"></td>
>         <td id="LC1029" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, *(MIGRATION_CHANGE_TIMES + i));</td>
>       </tr>
>       <tr>
>         <td id="L1030" class="blob-num js-line-number" data-line-number="1030"></td>
>         <td id="LC1030" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1031" class="blob-num js-line-number" data-line-number="1031"></td>
>         <td id="LC1031" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1032" class="blob-num js-line-number" data-line-number="1032"></td>
>         <td id="LC1032" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1033" class="blob-num js-line-number" data-line-number="1033"></td>
>         <td id="LC1033" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L1034" class="blob-num js-line-number" data-line-number="1034"></td>
>         <td id="LC1034" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>MIGRATION_CHANGE_TIMES &lt;- -1<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1035" class="blob-num js-line-number" data-line-number="1035"></td>
>         <td id="LC1035" class="blob-code blob-code-inner js-file-line">    dpt = M_VALUES;</td>
>       </tr>
>       <tr>
>         <td id="L1036" class="blob-num js-line-number" data-line-number="1036"></td>
>         <td id="LC1036" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt;= (nMIGRATION_CHANGES + <span class="pl-c1">1</span>); i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1037" class="blob-num js-line-number" data-line-number="1037"></td>
>         <td id="LC1037" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>M_VALUES_period_<span class="pl-c1">%i</span> &lt;- c(<span class="pl-c1">%E</span><span class="pl-pds">&quot;</span></span>, i, *dpt);</td>
>       </tr>
>       <tr>
>         <td id="L1038" class="blob-num js-line-number" data-line-number="1038"></td>
>         <td id="LC1038" class="blob-code blob-code-inner js-file-line">        dpt++;</td>
>       </tr>
>       <tr>
>         <td id="L1039" class="blob-num js-line-number" data-line-number="1039"></td>
>         <td id="LC1039" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( j = <span class="pl-c1">1</span>; j &lt; (nPOPULATIONS * nPOPULATIONS); j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1040" class="blob-num js-line-number" data-line-number="1040"></td>
>         <td id="LC1040" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-c1">%E</span><span class="pl-pds">&quot;</span></span>, *dpt);</td>
>       </tr>
>       <tr>
>         <td id="L1041" class="blob-num js-line-number" data-line-number="1041"></td>
>         <td id="LC1041" class="blob-code blob-code-inner js-file-line">            dpt++;</td>
>       </tr>
>       <tr>
>         <td id="L1042" class="blob-num js-line-number" data-line-number="1042"></td>
>         <td id="LC1042" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1043" class="blob-num js-line-number" data-line-number="1043"></td>
>         <td id="LC1043" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1044" class="blob-num js-line-number" data-line-number="1044"></td>
>         <td id="LC1044" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>M_VALUES_period_<span class="pl-c1">%i</span> &lt;- matrix(data = M_VALUES_period_<span class="pl-c1">%i</span>, nrow = nPOPULATIONS, ncol = nPOPULATIONS, byrow = TRUE)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, i, i);</td>
>       </tr>
>       <tr>
>         <td id="L1045" class="blob-num js-line-number" data-line-number="1045"></td>
>         <td id="LC1045" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1046" class="blob-num js-line-number" data-line-number="1046"></td>
>         <td id="LC1046" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1047" class="blob-num js-line-number" data-line-number="1047"></td>
>         <td id="LC1047" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1048" class="blob-num js-line-number" data-line-number="1048"></td>
>         <td id="LC1048" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// genome</span></td>
>       </tr>
>       <tr>
>         <td id="L1049" class="blob-num js-line-number" data-line-number="1049"></td>
>         <td id="LC1049" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span># genome parameters<span class="pl-cce">\n</span>nSITES &lt;- <span class="pl-c1">%llu</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nSITES);</td>
>       </tr>
>       <tr>
>         <td id="L1050" class="blob-num js-line-number" data-line-number="1050"></td>
>         <td id="LC1050" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>nLINKAGE_GROUPS &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nLINKAGE_GROUPS);</td>
>       </tr>
>       <tr>
>         <td id="L1051" class="blob-num js-line-number" data-line-number="1051"></td>
>         <td id="LC1051" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>PLOIDY &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, PLOIDY);</td>
>       </tr>
>       <tr>
>         <td id="L1052" class="blob-num js-line-number" data-line-number="1052"></td>
>         <td id="LC1052" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>RECOMBINATION_RATE_PER_KB &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, RECOMBINATION_RATE_PER_KB);</td>
>       </tr>
>       <tr>
>         <td id="L1053" class="blob-num js-line-number" data-line-number="1053"></td>
>         <td id="LC1053" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>MU &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, MU);</td>
>       </tr>
>       <tr>
>         <td id="L1054" class="blob-num js-line-number" data-line-number="1054"></td>
>         <td id="LC1054" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>GENOME_MU &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, GENOME_MU);</td>
>       </tr>
>       <tr>
>         <td id="L1055" class="blob-num js-line-number" data-line-number="1055"></td>
>         <td id="LC1055" class="blob-code blob-code-inner js-file-line">    foo = N * PLOIDY * nSITES;</td>
>       </tr>
>       <tr>
>         <td id="L1056" class="blob-num js-line-number" data-line-number="1056"></td>
>         <td id="LC1056" class="blob-code blob-code-inner js-file-line">    THETA = <span class="pl-c1">2.0</span> * MU * ((<span class="pl-k">double</span>) foo);</td>
>       </tr>
>       <tr>
>         <td id="L1057" class="blob-num js-line-number" data-line-number="1057"></td>
>         <td id="LC1057" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>THETA &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, THETA);</td>
>       </tr>
>       <tr>
>         <td id="L1058" class="blob-num js-line-number" data-line-number="1058"></td>
>         <td id="LC1058" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1059" class="blob-num js-line-number" data-line-number="1059"></td>
>         <td id="LC1059" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1060" class="blob-num js-line-number" data-line-number="1060"></td>
>         <td id="LC1060" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// natural selection</span></td>
>       </tr>
>       <tr>
>         <td id="L1061" class="blob-num js-line-number" data-line-number="1061"></td>
>         <td id="LC1061" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span># natural selection<span class="pl-cce">\n</span>INCLUDE_SELECTION &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, INCLUDE_SELECTION);</td>
>       </tr>
>       <tr>
>         <td id="L1062" class="blob-num js-line-number" data-line-number="1062"></td>
>         <td id="LC1062" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>MEAN_S_BGS &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, MEAN_S_BGS);</td>
>       </tr>
>       <tr>
>         <td id="L1063" class="blob-num js-line-number" data-line-number="1063"></td>
>         <td id="LC1063" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>MEAN_S_POS &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, MEAN_S_POS);</td>
>       </tr>
>       <tr>
>         <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
>         <td id="LC1064" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>MEAN_S_DIV &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, MEAN_S_DIV);</td>
>       </tr>
>       <tr>
>         <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
>         <td id="LC1065" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>PROBABILITY_SITE_BGS &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, PROBABILITY_SITE_BGS);</td>
>       </tr>
>       <tr>
>         <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
>         <td id="LC1066" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>PROBABILITY_SITE_POS &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, PROBABILITY_SITE_POS);</td>
>       </tr>
>       <tr>
>         <td id="L1067" class="blob-num js-line-number" data-line-number="1067"></td>
>         <td id="LC1067" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>PROBABILITY_SITE_DIV &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, PROBABILITY_SITE_DIV);</td>
>       </tr>
>       <tr>
>         <td id="L1068" class="blob-num js-line-number" data-line-number="1068"></td>
>         <td id="LC1068" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>ENVIRONMENT_TYPE &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, ENVIRONMENT_TYPE);</td>
>       </tr>
>       <tr>
>         <td id="L1069" class="blob-num js-line-number" data-line-number="1069"></td>
>         <td id="LC1069" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>ENVT_MIN &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, ENVT_MIN);</td>
>       </tr>
>       <tr>
>         <td id="L1070" class="blob-num js-line-number" data-line-number="1070"></td>
>         <td id="LC1070" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>ENVT_MAX &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, ENVT_MAX);</td>
>       </tr>
>       <tr>
>         <td id="L1071" class="blob-num js-line-number" data-line-number="1071"></td>
>         <td id="LC1071" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>environmentGradient &lt;- c(<span class="pl-c1">%E</span><span class="pl-pds">&quot;</span></span>, *environmentGradient);</td>
>       </tr>
>       <tr>
>         <td id="L1072" class="blob-num js-line-number" data-line-number="1072"></td>
>         <td id="LC1072" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; nPOPULATIONS; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L1073" class="blob-num js-line-number" data-line-number="1073"></td>
>         <td id="LC1073" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-c1">%E</span><span class="pl-pds">&quot;</span></span>, *(environmentGradient + i));</td>
>       </tr>
>       <tr>
>         <td id="L1074" class="blob-num js-line-number" data-line-number="1074"></td>
>         <td id="LC1074" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1075" class="blob-num js-line-number" data-line-number="1075"></td>
>         <td id="LC1075" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>FITNESS_MODEL &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, FITNESS_MODEL);</td>
>       </tr>
>       <tr>
>         <td id="L1076" class="blob-num js-line-number" data-line-number="1076"></td>
>         <td id="LC1076" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1077" class="blob-num js-line-number" data-line-number="1077"></td>
>         <td id="LC1077" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1078" class="blob-num js-line-number" data-line-number="1078"></td>
>         <td id="LC1078" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// codes and magic numbers</span></td>
>       </tr>
>       <tr>
>         <td id="L1079" class="blob-num js-line-number" data-line-number="1079"></td>
>         <td id="LC1079" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span># codes and magic numbers<span class="pl-cce">\n</span>nSITE_CLASSES &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nSITE_CLASSES);</td>
>       </tr>
>       <tr>
>         <td id="L1080" class="blob-num js-line-number" data-line-number="1080"></td>
>         <td id="LC1080" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>SITE_CLASS_NEUTRAL &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, SITE_CLASS_NEUTRAL);</td>
>       </tr>
>       <tr>
>         <td id="L1081" class="blob-num js-line-number" data-line-number="1081"></td>
>         <td id="LC1081" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>SITE_CLASS_BGS &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, SITE_CLASS_BGS);</td>
>       </tr>
>       <tr>
>         <td id="L1082" class="blob-num js-line-number" data-line-number="1082"></td>
>         <td id="LC1082" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>SITE_CLASS_POS &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, SITE_CLASS_POS);</td>
>       </tr>
>       <tr>
>         <td id="L1083" class="blob-num js-line-number" data-line-number="1083"></td>
>         <td id="LC1083" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>SITE_CLASS_DIV &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, SITE_CLASS_DIV);</td>
>       </tr>
>       <tr>
>         <td id="L1084" class="blob-num js-line-number" data-line-number="1084"></td>
>         <td id="LC1084" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>ALLELE_CODE_ANCESTRAL &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, ALLELE_CODE_ANCESTRAL);</td>
>       </tr>
>       <tr>
>         <td id="L1085" class="blob-num js-line-number" data-line-number="1085"></td>
>         <td id="LC1085" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>ALLELE_CODE_DERIVED &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, ALLELE_CODE_DERIVED);</td>
>       </tr>
>       <tr>
>         <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
>         <td id="LC1086" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>ENVT_TYPE_GRADIENT &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, ENVT_TYPE_GRADIENT);</td>
>       </tr>
>       <tr>
>         <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
>         <td id="LC1087" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>ENVT_TYPE_MOSAIC &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, ENVT_TYPE_MOSAIC);</td>
>       </tr>
>       <tr>
>         <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
>         <td id="LC1088" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>ENVT_TYPE_INVARIANT &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, ENVT_TYPE_INVARIANT);</td>
>       </tr>
>       <tr>
>         <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
>         <td id="LC1089" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1090" class="blob-num js-line-number" data-line-number="1090"></td>
>         <td id="LC1090" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>FITNESS_MODEL_ADDITIVE &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, FITNESS_MODEL_ADDITIVE);</td>
>       </tr>
>       <tr>
>         <td id="L1091" class="blob-num js-line-number" data-line-number="1091"></td>
>         <td id="LC1091" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>FITNESS_MODEL_MULTIPLICATIVE &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, FITNESS_MODEL_MULTIPLICATIVE);</td>
>       </tr>
>       <tr>
>         <td id="L1092" class="blob-num js-line-number" data-line-number="1092"></td>
>         <td id="LC1092" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>LOCUS_STATUS_INACTIVE &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, LOCUS_STATUS_INACTIVE);</td>
>       </tr>
>       <tr>
>         <td id="L1093" class="blob-num js-line-number" data-line-number="1093"></td>
>         <td id="LC1093" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>LOCUS_STATUS_VARIABLE_IN_PARENTS &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, LOCUS_STATUS_VARIABLE_IN_PARENTS);</td>
>       </tr>
>       <tr>
>         <td id="L1094" class="blob-num js-line-number" data-line-number="1094"></td>
>         <td id="LC1094" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>LOCUS_STATUS_VARIABLE_PLUS_MUT &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, LOCUS_STATUS_VARIABLE_PLUS_MUT);</td>
>       </tr>
>       <tr>
>         <td id="L1095" class="blob-num js-line-number" data-line-number="1095"></td>
>         <td id="LC1095" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>LOCUS_STATUS_NEW_MUT_ONLY &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, LOCUS_STATUS_NEW_MUT_ONLY);</td>
>       </tr>
>       <tr>
>         <td id="L1096" class="blob-num js-line-number" data-line-number="1096"></td>
>         <td id="LC1096" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>LOCUS_STATUS_TRACKED_IN_PARENTS &lt;- <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, LOCUS_STATUS_TRACKED_IN_PARENTS);</td>
>       </tr>
>       <tr>
>         <td id="L1097" class="blob-num js-line-number" data-line-number="1097"></td>
>         <td id="LC1097" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>CODOMINANCE &lt;- <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, CODOMINANCE);</td>
>       </tr>
>       <tr>
>         <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
>         <td id="LC1098" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
>         <td id="LC1099" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
>         <td id="LC1100" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// states at end of run</span></td>
>       </tr>
>       <tr>
>         <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
>         <td id="LC1101" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>#states of variables at the end of the run<span class="pl-cce">\n</span>N &lt;- <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, N);</td>
>       </tr>
>       <tr>
>         <td id="L1102" class="blob-num js-line-number" data-line-number="1102"></td>
>         <td id="LC1102" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>nSelectedSites &lt;- <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nSelectedSites);</td>
>       </tr>
>       <tr>
>         <td id="L1103" class="blob-num js-line-number" data-line-number="1103"></td>
>         <td id="LC1103" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>nTrackedSitesInParents &lt;- <span class="pl-c1">%llu</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nTrackedSitesInParents);</td>
>       </tr>
>       <tr>
>         <td id="L1104" class="blob-num js-line-number" data-line-number="1104"></td>
>         <td id="LC1104" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>abundances &lt;- c(<span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, abundances[<span class="pl-c1">0</span>]);</td>
>       </tr>
>       <tr>
>         <td id="L1105" class="blob-num js-line-number" data-line-number="1105"></td>
>         <td id="LC1105" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; nPOPULATIONS; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L1106" class="blob-num js-line-number" data-line-number="1106"></td>
>         <td id="LC1106" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, abundances[i]);</td>
>       </tr>
>       <tr>
>         <td id="L1107" class="blob-num js-line-number" data-line-number="1107"></td>
>         <td id="LC1107" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1108" class="blob-num js-line-number" data-line-number="1108"></td>
>         <td id="LC1108" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1109" class="blob-num js-line-number" data-line-number="1109"></td>
>         <td id="LC1109" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(rfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
>         <td id="LC1110" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
>         <td id="LC1111" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fclose</span>(rfile);</td>
>       </tr>
>       <tr>
>         <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
>         <td id="LC1112" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
>         <td id="LC1113" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1114" class="blob-num js-line-number" data-line-number="1114"></td>
>         <td id="LC1114" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1115" class="blob-num js-line-number" data-line-number="1115"></td>
>         <td id="LC1115" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">putInMutations</span>( <span class="pl-k">short</span> <span class="pl-k">int</span> *offspringGTs, <span class="pl-k">short</span> <span class="pl-k">int</span> *offsp_lociStates, <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *offsp_SiteIndexes, <span class="pl-k">long</span> <span class="pl-k">int</span> nNewMutations, <span class="pl-k">long</span> <span class="pl-k">int</span> totalOffspring, <span class="pl-k">long</span> <span class="pl-k">int</span> nSitesInOffspring )</td>
>       </tr>
>       <tr>
>         <td id="L1116" class="blob-num js-line-number" data-line-number="1116"></td>
>         <td id="LC1116" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L1117" class="blob-num js-line-number" data-line-number="1117"></td>
>         <td id="LC1117" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> i, individual, totalMutsAdded = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1118" class="blob-num js-line-number" data-line-number="1118"></td>
>         <td id="LC1118" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">short</span> <span class="pl-k">int</span> *spot, *offsp_ls;</td>
>       </tr>
>       <tr>
>         <td id="L1119" class="blob-num js-line-number" data-line-number="1119"></td>
>         <td id="LC1119" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> locus;</td>
>       </tr>
>       <tr>
>         <td id="L1120" class="blob-num js-line-number" data-line-number="1120"></td>
>         <td id="LC1120" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1121" class="blob-num js-line-number" data-line-number="1121"></td>
>         <td id="LC1121" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// only considering a possibility of two different alleles at each site</span></td>
>       </tr>
>       <tr>
>         <td id="L1122" class="blob-num js-line-number" data-line-number="1122"></td>
>         <td id="LC1122" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1123" class="blob-num js-line-number" data-line-number="1123"></td>
>         <td id="LC1123" class="blob-code blob-code-inner js-file-line">    offsp_ls = offsp_lociStates;</td>
>       </tr>
>       <tr>
>         <td id="L1124" class="blob-num js-line-number" data-line-number="1124"></td>
>         <td id="LC1124" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nSitesInOffspring; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1125" class="blob-num js-line-number" data-line-number="1125"></td>
>         <td id="LC1125" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( *offsp_ls == LOCUS_STATUS_NEW_MUT_ONLY || *offsp_ls == LOCUS_STATUS_VARIABLE_PLUS_MUT ) {</td>
>       </tr>
>       <tr>
>         <td id="L1126" class="blob-num js-line-number" data-line-number="1126"></td>
>         <td id="LC1126" class="blob-code blob-code-inner js-file-line">            individual = <span class="pl-c1">gsl_rng_uniform_int</span>( rngState, totalOffspring );</td>
>       </tr>
>       <tr>
>         <td id="L1127" class="blob-num js-line-number" data-line-number="1127"></td>
>         <td id="LC1127" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">//unsigned long int gsl_rng_uniform_int (const gsl_rng * r, unsigned long int n)</span></td>
>       </tr>
>       <tr>
>         <td id="L1128" class="blob-num js-line-number" data-line-number="1128"></td>
>         <td id="LC1128" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">//this function returns a random integer from 0 to n-1</span></td>
>       </tr>
>       <tr>
>         <td id="L1129" class="blob-num js-line-number" data-line-number="1129"></td>
>         <td id="LC1129" class="blob-code blob-code-inner js-file-line">            spot = offspringGTs + ( PLOIDY * nSitesInOffspring * individual ) + ( i * PLOIDY );</td>
>       </tr>
>       <tr>
>         <td id="L1130" class="blob-num js-line-number" data-line-number="1130"></td>
>         <td id="LC1130" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// spot = site in genome array</span></td>
>       </tr>
>       <tr>
>         <td id="L1131" class="blob-num js-line-number" data-line-number="1131"></td>
>         <td id="LC1131" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1132" class="blob-num js-line-number" data-line-number="1132"></td>
>         <td id="LC1132" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// choose one of the two alleles at random</span></td>
>       </tr>
>       <tr>
>         <td id="L1133" class="blob-num js-line-number" data-line-number="1133"></td>
>         <td id="LC1133" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( <span class="pl-c1">gsl_rng_uniform</span>( rngState ) &lt; <span class="pl-c1">0.5</span> )</td>
>       </tr>
>       <tr>
>         <td id="L1134" class="blob-num js-line-number" data-line-number="1134"></td>
>         <td id="LC1134" class="blob-code blob-code-inner js-file-line">                spot++;</td>
>       </tr>
>       <tr>
>         <td id="L1135" class="blob-num js-line-number" data-line-number="1135"></td>
>         <td id="LC1135" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1136" class="blob-num js-line-number" data-line-number="1136"></td>
>         <td id="LC1136" class="blob-code blob-code-inner js-file-line">            locus = *(offsp_SiteIndexes + i);</td>
>       </tr>
>       <tr>
>         <td id="L1137" class="blob-num js-line-number" data-line-number="1137"></td>
>         <td id="LC1137" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1138" class="blob-num js-line-number" data-line-number="1138"></td>
>         <td id="LC1138" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// if it is a derived allele, mutate it back to the ancestral state</span></td>
>       </tr>
>       <tr>
>         <td id="L1139" class="blob-num js-line-number" data-line-number="1139"></td>
>         <td id="LC1139" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( *spot == ALLELE_CODE_DERIVED ) {</td>
>       </tr>
>       <tr>
>         <td id="L1140" class="blob-num js-line-number" data-line-number="1140"></td>
>         <td id="LC1140" class="blob-code blob-code-inner js-file-line">                *spot = ALLELE_CODE_ANCESTRAL;</td>
>       </tr>
>       <tr>
>         <td id="L1141" class="blob-num js-line-number" data-line-number="1141"></td>
>         <td id="LC1141" class="blob-code blob-code-inner js-file-line">                *(alleleCounts + locus) -= <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1142" class="blob-num js-line-number" data-line-number="1142"></td>
>         <td id="LC1142" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1143" class="blob-num js-line-number" data-line-number="1143"></td>
>         <td id="LC1143" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
>         <td id="LC1144" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// otherwise, insert a derived allele</span></td>
>       </tr>
>       <tr>
>         <td id="L1145" class="blob-num js-line-number" data-line-number="1145"></td>
>         <td id="LC1145" class="blob-code blob-code-inner js-file-line">                *spot = ALLELE_CODE_DERIVED;</td>
>       </tr>
>       <tr>
>         <td id="L1146" class="blob-num js-line-number" data-line-number="1146"></td>
>         <td id="LC1146" class="blob-code blob-code-inner js-file-line">                *(alleleCounts + locus) += <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1147" class="blob-num js-line-number" data-line-number="1147"></td>
>         <td id="LC1147" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1148" class="blob-num js-line-number" data-line-number="1148"></td>
>         <td id="LC1148" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1149" class="blob-num js-line-number" data-line-number="1149"></td>
>         <td id="LC1149" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// double check allele counts</span></td>
>       </tr>
>       <tr>
>         <td id="L1150" class="blob-num js-line-number" data-line-number="1150"></td>
>         <td id="LC1150" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( *(alleleCounts + locus) &gt; (PLOIDY * N) ) {</td>
>       </tr>
>       <tr>
>         <td id="L1151" class="blob-num js-line-number" data-line-number="1151"></td>
>         <td id="LC1151" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in putInMutations():<span class="pl-cce">\n\t</span>*(alleleCounts + locus) (<span class="pl-c1">%llu</span>) out of bounds<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, *(alleleCounts + locus));</td>
>       </tr>
>       <tr>
>         <td id="L1152" class="blob-num js-line-number" data-line-number="1152"></td>
>         <td id="LC1152" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1153" class="blob-num js-line-number" data-line-number="1153"></td>
>         <td id="LC1153" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1154" class="blob-num js-line-number" data-line-number="1154"></td>
>         <td id="LC1154" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
>         <td id="LC1155" class="blob-code blob-code-inner js-file-line">            totalMutsAdded++;</td>
>       </tr>
>       <tr>
>         <td id="L1156" class="blob-num js-line-number" data-line-number="1156"></td>
>         <td id="LC1156" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1157" class="blob-num js-line-number" data-line-number="1157"></td>
>         <td id="LC1157" class="blob-code blob-code-inner js-file-line">        offsp_ls++;</td>
>       </tr>
>       <tr>
>         <td id="L1158" class="blob-num js-line-number" data-line-number="1158"></td>
>         <td id="LC1158" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1159" class="blob-num js-line-number" data-line-number="1159"></td>
>         <td id="LC1159" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1160" class="blob-num js-line-number" data-line-number="1160"></td>
>         <td id="LC1160" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( totalMutsAdded != nNewMutations ) {</td>
>       </tr>
>       <tr>
>         <td id="L1161" class="blob-num js-line-number" data-line-number="1161"></td>
>         <td id="LC1161" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>( stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in putInMutations():<span class="pl-cce">\n\t</span>totalMutsAdded (<span class="pl-c1">%li</span>) != nNewMutations (<span class="pl-c1">%li</span>)<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, totalMutsAdded, nNewMutations);</td>
>       </tr>
>       <tr>
>         <td id="L1162" class="blob-num js-line-number" data-line-number="1162"></td>
>         <td id="LC1162" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1163" class="blob-num js-line-number" data-line-number="1163"></td>
>         <td id="LC1163" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1164" class="blob-num js-line-number" data-line-number="1164"></td>
>         <td id="LC1164" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1165" class="blob-num js-line-number" data-line-number="1165"></td>
>         <td id="LC1165" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L1166" class="blob-num js-line-number" data-line-number="1166"></td>
>         <td id="LC1166" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1167" class="blob-num js-line-number" data-line-number="1167"></td>
>         <td id="LC1167" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1168" class="blob-num js-line-number" data-line-number="1168"></td>
>         <td id="LC1168" class="blob-code blob-code-inner js-file-line"><span class="pl-k">double</span> <span class="pl-en">randExp</span>(<span class="pl-k">double</span> meanValue)</td>
>       </tr>
>       <tr>
>         <td id="L1169" class="blob-num js-line-number" data-line-number="1169"></td>
>         <td id="LC1169" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L1170" class="blob-num js-line-number" data-line-number="1170"></td>
>         <td id="LC1170" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ( (<span class="pl-c1">log</span>(<span class="pl-c1">1.0</span> - <span class="pl-c1">gsl_rng_uniform</span>(rngState))) * (-meanValue) );</td>
>       </tr>
>       <tr>
>         <td id="L1171" class="blob-num js-line-number" data-line-number="1171"></td>
>         <td id="LC1171" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L1172" class="blob-num js-line-number" data-line-number="1172"></td>
>         <td id="LC1172" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1173" class="blob-num js-line-number" data-line-number="1173"></td>
>         <td id="LC1173" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1174" class="blob-num js-line-number" data-line-number="1174"></td>
>         <td id="LC1174" class="blob-code blob-code-inner js-file-line"><span class="pl-k">unsigned</span> <span class="pl-en">readInParametersFromFile</span>(<span class="pl-k">void</span>)</td>
>       </tr>
>       <tr>
>         <td id="L1175" class="blob-num js-line-number" data-line-number="1175"></td>
>         <td id="LC1175" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L1176" class="blob-num js-line-number" data-line-number="1176"></td>
>         <td id="LC1176" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">char</span> c, option[<span class="pl-c1">80</span>], option2[<span class="pl-c1">80</span>];</td>
>       </tr>
>       <tr>
>         <td id="L1177" class="blob-num js-line-number" data-line-number="1177"></td>
>         <td id="LC1177" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> INITIAL_N;</td>
>       </tr>
>       <tr>
>         <td id="L1178" class="blob-num js-line-number" data-line-number="1178"></td>
>         <td id="LC1178" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> foo;</td>
>       </tr>
>       <tr>
>         <td id="L1179" class="blob-num js-line-number" data-line-number="1179"></td>
>         <td id="LC1179" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> i, j, k, dumi, temp;</td>
>       </tr>
>       <tr>
>         <td id="L1180" class="blob-num js-line-number" data-line-number="1180"></td>
>         <td id="LC1180" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> RNG_SEED = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1181" class="blob-num js-line-number" data-line-number="1181"></td>
>         <td id="LC1181" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> value;</td>
>       </tr>
>       <tr>
>         <td id="L1182" class="blob-num js-line-number" data-line-number="1182"></td>
>         <td id="LC1182" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">FILE</span> *pfile;</td>
>       </tr>
>       <tr>
>         <td id="L1183" class="blob-num js-line-number" data-line-number="1183"></td>
>         <td id="LC1183" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">_Bool</span> nPopSet = <span class="pl-c1">0</span>, migrationSet = <span class="pl-c1">0</span>, demographySet = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1184" class="blob-num js-line-number" data-line-number="1184"></td>
>         <td id="LC1184" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1185" class="blob-num js-line-number" data-line-number="1185"></td>
>         <td id="LC1185" class="blob-code blob-code-inner js-file-line">    pfile = <span class="pl-c1">fopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>parameters.ini.txt<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1186" class="blob-num js-line-number" data-line-number="1186"></td>
>         <td id="LC1186" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( pfile == <span class="pl-c1">NULL</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1187" class="blob-num js-line-number" data-line-number="1187"></td>
>         <td id="LC1187" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\t</span>parameters.ini.txt not found!<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1188" class="blob-num js-line-number" data-line-number="1188"></td>
>         <td id="LC1188" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1189" class="blob-num js-line-number" data-line-number="1189"></td>
>         <td id="LC1189" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1190" class="blob-num js-line-number" data-line-number="1190"></td>
>         <td id="LC1190" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1191" class="blob-num js-line-number" data-line-number="1191"></td>
>         <td id="LC1191" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// the action of reading.  Order of things in parameters.ini.txt file matters!</span></td>
>       </tr>
>       <tr>
>         <td id="L1192" class="blob-num js-line-number" data-line-number="1192"></td>
>         <td id="LC1192" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ( !<span class="pl-c1">feof</span>(pfile) ) {</td>
>       </tr>
>       <tr>
>         <td id="L1193" class="blob-num js-line-number" data-line-number="1193"></td>
>         <td id="LC1193" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span><span class="pl-pds">&quot;</span></span>, option);</td>
>       </tr>
>       <tr>
>         <td id="L1194" class="blob-num js-line-number" data-line-number="1194"></td>
>         <td id="LC1194" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L1195" class="blob-num js-line-number" data-line-number="1195"></td>
>         <td id="LC1195" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>RNG_SEED<span class="pl-pds">&quot;</span></span> ) ) { <span class="pl-c">// set RNG seed value</span></td>
>       </tr>
>       <tr>
>         <td id="L1196" class="blob-num js-line-number" data-line-number="1196"></td>
>         <td id="LC1196" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, &amp;RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L1197" class="blob-num js-line-number" data-line-number="1197"></td>
>         <td id="LC1197" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1198" class="blob-num js-line-number" data-line-number="1198"></td>
>         <td id="LC1198" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found RNG_SEED (<span class="pl-c1">%s</span>) = <span class="pl-c1">%u</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, RNG_SEED);</td>
>       </tr>
>       <tr>
>         <td id="L1199" class="blob-num js-line-number" data-line-number="1199"></td>
>         <td id="LC1199" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1200" class="blob-num js-line-number" data-line-number="1200"></td>
>         <td id="LC1200" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>nGENERATIONS<span class="pl-pds">&quot;</span></span> ) ) { <span class="pl-c">// set RNG seed value</span></td>
>       </tr>
>       <tr>
>         <td id="L1201" class="blob-num js-line-number" data-line-number="1201"></td>
>         <td id="LC1201" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, &amp;nGENERATIONS);</td>
>       </tr>
>       <tr>
>         <td id="L1202" class="blob-num js-line-number" data-line-number="1202"></td>
>         <td id="LC1202" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1203" class="blob-num js-line-number" data-line-number="1203"></td>
>         <td id="LC1203" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found nGENERATIONS (<span class="pl-c1">%s</span>) = <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, nGENERATIONS);</td>
>       </tr>
>       <tr>
>         <td id="L1204" class="blob-num js-line-number" data-line-number="1204"></td>
>         <td id="LC1204" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1205" class="blob-num js-line-number" data-line-number="1205"></td>
>         <td id="LC1205" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>nPOPULATIONS<span class="pl-pds">&quot;</span></span> ) ) { <span class="pl-c">// set number of populations</span></td>
>       </tr>
>       <tr>
>         <td id="L1206" class="blob-num js-line-number" data-line-number="1206"></td>
>         <td id="LC1206" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, &amp;nPOPULATIONS);</td>
>       </tr>
>       <tr>
>         <td id="L1207" class="blob-num js-line-number" data-line-number="1207"></td>
>         <td id="LC1207" class="blob-code blob-code-inner js-file-line">            nPopSet = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1208" class="blob-num js-line-number" data-line-number="1208"></td>
>         <td id="LC1208" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( nPOPULATIONS &lt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1209" class="blob-num js-line-number" data-line-number="1209"></td>
>         <td id="LC1209" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1210" class="blob-num js-line-number" data-line-number="1210"></td>
>         <td id="LC1210" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>nPOPULATIONS (<span class="pl-c1">%i</span>) &lt; 0<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>, nPOPULATIONS);</td>
>       </tr>
>       <tr>
>         <td id="L1211" class="blob-num js-line-number" data-line-number="1211"></td>
>         <td id="LC1211" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>*** Exiting *** <span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1212" class="blob-num js-line-number" data-line-number="1212"></td>
>         <td id="LC1212" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1213" class="blob-num js-line-number" data-line-number="1213"></td>
>         <td id="LC1213" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1214" class="blob-num js-line-number" data-line-number="1214"></td>
>         <td id="LC1214" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1215" class="blob-num js-line-number" data-line-number="1215"></td>
>         <td id="LC1215" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found nPOPULATIONS (<span class="pl-c1">%s</span>) = <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, nPOPULATIONS);</td>
>       </tr>
>       <tr>
>         <td id="L1216" class="blob-num js-line-number" data-line-number="1216"></td>
>         <td id="LC1216" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1217" class="blob-num js-line-number" data-line-number="1217"></td>
>         <td id="LC1217" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>nDEMOGRAPHIC_CHANGES<span class="pl-pds">&quot;</span></span> ) ) { <span class="pl-c">// set demography</span></td>
>       </tr>
>       <tr>
>         <td id="L1218" class="blob-num js-line-number" data-line-number="1218"></td>
>         <td id="LC1218" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( !nPopSet ) {</td>
>       </tr>
>       <tr>
>         <td id="L1219" class="blob-num js-line-number" data-line-number="1219"></td>
>         <td id="LC1219" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Warning in readInParametersFromFile():<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1220" class="blob-num js-line-number" data-line-number="1220"></td>
>         <td id="LC1220" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>nPOPULATIONS should be set in parameters.ini.txt before nDEMOGRAPHIC_CHANGES<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1221" class="blob-num js-line-number" data-line-number="1221"></td>
>         <td id="LC1221" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1222" class="blob-num js-line-number" data-line-number="1222"></td>
>         <td id="LC1222" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1223" class="blob-num js-line-number" data-line-number="1223"></td>
>         <td id="LC1223" class="blob-code blob-code-inner js-file-line">            demographySet = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1224" class="blob-num js-line-number" data-line-number="1224"></td>
>         <td id="LC1224" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1225" class="blob-num js-line-number" data-line-number="1225"></td>
>         <td id="LC1225" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// number of demographic events:</span></td>
>       </tr>
>       <tr>
>         <td id="L1226" class="blob-num js-line-number" data-line-number="1226"></td>
>         <td id="LC1226" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, &amp;nDEMOGRAPHIC_CHANGES);</td>
>       </tr>
>       <tr>
>         <td id="L1227" class="blob-num js-line-number" data-line-number="1227"></td>
>         <td id="LC1227" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE)</td>
>       </tr>
>       <tr>
>         <td id="L1228" class="blob-num js-line-number" data-line-number="1228"></td>
>         <td id="LC1228" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found nDEMOGRAPHIC_CHANGES (<span class="pl-c1">%s</span>) = <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, nDEMOGRAPHIC_CHANGES);</td>
>       </tr>
>       <tr>
>         <td id="L1229" class="blob-num js-line-number" data-line-number="1229"></td>
>         <td id="LC1229" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1230" class="blob-num js-line-number" data-line-number="1230"></td>
>         <td id="LC1230" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// times of demographic events:</span></td>
>       </tr>
>       <tr>
>         <td id="L1231" class="blob-num js-line-number" data-line-number="1231"></td>
>         <td id="LC1231" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span><span class="pl-pds">&quot;</span></span>, option);</td>
>       </tr>
>       <tr>
>         <td id="L1232" class="blob-num js-line-number" data-line-number="1232"></td>
>         <td id="LC1232" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( <span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>DEMOGRAPHIC_CHANGE_TIMES<span class="pl-pds">&quot;</span></span> ) ) {</td>
>       </tr>
>       <tr>
>         <td id="L1233" class="blob-num js-line-number" data-line-number="1233"></td>
>         <td id="LC1233" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">wrongParametersIniOption</span>( <span class="pl-s"><span class="pl-pds">&quot;</span>DEMOGRAPHIC_CHANGE_TIMES<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>nDEMOGRAPHIC_CHANGES<span class="pl-pds">&quot;</span></span>, option );</td>
>       </tr>
>       <tr>
>         <td id="L1234" class="blob-num js-line-number" data-line-number="1234"></td>
>         <td id="LC1234" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1235" class="blob-num js-line-number" data-line-number="1235"></td>
>         <td id="LC1235" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1236" class="blob-num js-line-number" data-line-number="1236"></td>
>         <td id="LC1236" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( nDEMOGRAPHIC_CHANGES &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1237" class="blob-num js-line-number" data-line-number="1237"></td>
>         <td id="LC1237" class="blob-code blob-code-inner js-file-line">                    DEMOGRAPHIC_CHANGE_TIMES = (<span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( nDEMOGRAPHIC_CHANGES * <span class="pl-k">sizeof</span>(<span class="pl-k">long</span> <span class="pl-k">int</span>));</td>
>       </tr>
>       <tr>
>         <td id="L1238" class="blob-num js-line-number" data-line-number="1238"></td>
>         <td id="LC1238" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nDEMOGRAPHIC_CHANGES; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1239" class="blob-num js-line-number" data-line-number="1239"></td>
>         <td id="LC1239" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, (DEMOGRAPHIC_CHANGE_TIMES + i));</td>
>       </tr>
>       <tr>
>         <td id="L1240" class="blob-num js-line-number" data-line-number="1240"></td>
>         <td id="LC1240" class="blob-code blob-code-inner js-file-line">                    }</td>
>       </tr>
>       <tr>
>         <td id="L1241" class="blob-num js-line-number" data-line-number="1241"></td>
>         <td id="LC1241" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1242" class="blob-num js-line-number" data-line-number="1242"></td>
>         <td id="LC1242" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1243" class="blob-num js-line-number" data-line-number="1243"></td>
>         <td id="LC1243" class="blob-code blob-code-inner js-file-line">                    DEMOGRAPHIC_CHANGE_TIMES = (<span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( <span class="pl-k">sizeof</span>(<span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1244" class="blob-num js-line-number" data-line-number="1244"></td>
>         <td id="LC1244" class="blob-code blob-code-inner js-file-line">                    *DEMOGRAPHIC_CHANGE_TIMES = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1245" class="blob-num js-line-number" data-line-number="1245"></td>
>         <td id="LC1245" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1246" class="blob-num js-line-number" data-line-number="1246"></td>
>         <td id="LC1246" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1247" class="blob-num js-line-number" data-line-number="1247"></td>
>         <td id="LC1247" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1248" class="blob-num js-line-number" data-line-number="1248"></td>
>         <td id="LC1248" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// K values for demographic event periods:</span></td>
>       </tr>
>       <tr>
>         <td id="L1249" class="blob-num js-line-number" data-line-number="1249"></td>
>         <td id="LC1249" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span><span class="pl-pds">&quot;</span></span>, option);</td>
>       </tr>
>       <tr>
>         <td id="L1250" class="blob-num js-line-number" data-line-number="1250"></td>
>         <td id="LC1250" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( <span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>K_VALUES<span class="pl-pds">&quot;</span></span> ) ) {</td>
>       </tr>
>       <tr>
>         <td id="L1251" class="blob-num js-line-number" data-line-number="1251"></td>
>         <td id="LC1251" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">wrongParametersIniOption</span>( <span class="pl-s"><span class="pl-pds">&quot;</span>K_VALUES<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>DEMOGRAPHIC_CHANGE_TIMES<span class="pl-pds">&quot;</span></span>, option );</td>
>       </tr>
>       <tr>
>         <td id="L1252" class="blob-num js-line-number" data-line-number="1252"></td>
>         <td id="LC1252" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1253" class="blob-num js-line-number" data-line-number="1253"></td>
>         <td id="LC1253" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1254" class="blob-num js-line-number" data-line-number="1254"></td>
>         <td id="LC1254" class="blob-code blob-code-inner js-file-line">                INITIAL_N = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1255" class="blob-num js-line-number" data-line-number="1255"></td>
>         <td id="LC1255" class="blob-code blob-code-inner js-file-line">                K_VALUES = (<span class="pl-k">double</span> *) <span class="pl-c1">malloc</span>( (nDEMOGRAPHIC_CHANGES + <span class="pl-c1">1</span>) * nPOPULATIONS * <span class="pl-k">sizeof</span>(<span class="pl-k">double</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1256" class="blob-num js-line-number" data-line-number="1256"></td>
>         <td id="LC1256" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; ((nDEMOGRAPHIC_CHANGES + <span class="pl-c1">1</span>) * nPOPULATIONS); i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1257" class="blob-num js-line-number" data-line-number="1257"></td>
>         <td id="LC1257" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, (K_VALUES + i));</td>
>       </tr>
>       <tr>
>         <td id="L1258" class="blob-num js-line-number" data-line-number="1258"></td>
>         <td id="LC1258" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> ( i &lt; nPOPULATIONS )</td>
>       </tr>
>       <tr>
>         <td id="L1259" class="blob-num js-line-number" data-line-number="1259"></td>
>         <td id="LC1259" class="blob-code blob-code-inner js-file-line">                        INITIAL_N += K_VALUES[i];</td>
>       </tr>
>       <tr>
>         <td id="L1260" class="blob-num js-line-number" data-line-number="1260"></td>
>         <td id="LC1260" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> ( *(K_VALUES+i) &lt; <span class="pl-c1">0.0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1261" class="blob-num js-line-number" data-line-number="1261"></td>
>         <td id="LC1261" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1262" class="blob-num js-line-number" data-line-number="1262"></td>
>         <td id="LC1262" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>K_VALUES should be non-negative, but instead found <span class="pl-c1">%i</span>ith value = <span class="pl-c1">%f</span>.<span class="pl-cce">\n\t</span>Please fix parameters.ini.txt<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, (i+<span class="pl-c1">1</span>), *(K_VALUES+i));</td>
>       </tr>
>       <tr>
>         <td id="L1263" class="blob-num js-line-number" data-line-number="1263"></td>
>         <td id="LC1263" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t\t</span>*** Exiting *** <span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1264" class="blob-num js-line-number" data-line-number="1264"></td>
>         <td id="LC1264" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1265" class="blob-num js-line-number" data-line-number="1265"></td>
>         <td id="LC1265" class="blob-code blob-code-inner js-file-line">                    }</td>
>       </tr>
>       <tr>
>         <td id="L1266" class="blob-num js-line-number" data-line-number="1266"></td>
>         <td id="LC1266" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1267" class="blob-num js-line-number" data-line-number="1267"></td>
>         <td id="LC1267" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1268" class="blob-num js-line-number" data-line-number="1268"></td>
>         <td id="LC1268" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// test check</span></td>
>       </tr>
>       <tr>
>         <td id="L1269" class="blob-num js-line-number" data-line-number="1269"></td>
>         <td id="LC1269" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
>         <td id="LC1270" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found DEMOGRAPHIC_CHANGE_TIMES: <span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1271" class="blob-num js-line-number" data-line-number="1271"></td>
>         <td id="LC1271" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nDEMOGRAPHIC_CHANGES; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1272" class="blob-num js-line-number" data-line-number="1272"></td>
>         <td id="LC1272" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, DEMOGRAPHIC_CHANGE_TIMES[i]);</td>
>       </tr>
>       <tr>
>         <td id="L1273" class="blob-num js-line-number" data-line-number="1273"></td>
>         <td id="LC1273" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1274" class="blob-num js-line-number" data-line-number="1274"></td>
>         <td id="LC1274" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>INITIAL_N = <span class="pl-c1">%li</span><span class="pl-cce">\n</span>Found the following K_VALUES:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, INITIAL_N);</td>
>       </tr>
>       <tr>
>         <td id="L1275" class="blob-num js-line-number" data-line-number="1275"></td>
>         <td id="LC1275" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; ((nDEMOGRAPHIC_CHANGES + <span class="pl-c1">1</span>) * nPOPULATIONS); i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1276" class="blob-num js-line-number" data-line-number="1276"></td>
>         <td id="LC1276" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%f</span><span class="pl-pds">&quot;</span></span>, K_VALUES[i]);</td>
>       </tr>
>       <tr>
>         <td id="L1277" class="blob-num js-line-number" data-line-number="1277"></td>
>         <td id="LC1277" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> ( i % nPOPULATIONS == nPOPULATIONS - <span class="pl-c1">1</span> )</td>
>       </tr>
>       <tr>
>         <td id="L1278" class="blob-num js-line-number" data-line-number="1278"></td>
>         <td id="LC1278" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1279" class="blob-num js-line-number" data-line-number="1279"></td>
>         <td id="LC1279" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1280" class="blob-num js-line-number" data-line-number="1280"></td>
>         <td id="LC1280" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1281" class="blob-num js-line-number" data-line-number="1281"></td>
>         <td id="LC1281" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1282" class="blob-num js-line-number" data-line-number="1282"></td>
>         <td id="LC1282" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1283" class="blob-num js-line-number" data-line-number="1283"></td>
>         <td id="LC1283" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1284" class="blob-num js-line-number" data-line-number="1284"></td>
>         <td id="LC1284" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>FIXED_POP_SIZE<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// whether or not ppulation sizes are fixed</span></td>
>       </tr>
>       <tr>
>         <td id="L1285" class="blob-num js-line-number" data-line-number="1285"></td>
>         <td id="LC1285" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, &amp;temp);</td>
>       </tr>
>       <tr>
>         <td id="L1286" class="blob-num js-line-number" data-line-number="1286"></td>
>         <td id="LC1286" class="blob-code blob-code-inner js-file-line">            FIXED_POP_SIZE = temp;</td>
>       </tr>
>       <tr>
>         <td id="L1287" class="blob-num js-line-number" data-line-number="1287"></td>
>         <td id="LC1287" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1288" class="blob-num js-line-number" data-line-number="1288"></td>
>         <td id="LC1288" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found FIXED_POP_SIZE (<span class="pl-c1">%s</span>) = <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, FIXED_POP_SIZE);</td>
>       </tr>
>       <tr>
>         <td id="L1289" class="blob-num js-line-number" data-line-number="1289"></td>
>         <td id="LC1289" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1290" class="blob-num js-line-number" data-line-number="1290"></td>
>         <td id="LC1290" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>MAX_POP_GROWTH_RATE<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// maximum population growth rate in logistic equation</span></td>
>       </tr>
>       <tr>
>         <td id="L1291" class="blob-num js-line-number" data-line-number="1291"></td>
>         <td id="LC1291" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;MAX_POP_GROWTH_RATE);</td>
>       </tr>
>       <tr>
>         <td id="L1292" class="blob-num js-line-number" data-line-number="1292"></td>
>         <td id="LC1292" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( FIXED_POP_SIZE ) {</td>
>       </tr>
>       <tr>
>         <td id="L1293" class="blob-num js-line-number" data-line-number="1293"></td>
>         <td id="LC1293" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Warning in readInParametersFromFile():<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1294" class="blob-num js-line-number" data-line-number="1294"></td>
>         <td id="LC1294" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>Since population size is fixed, MAX_POP_GROWTH_RATE won&#39;t be used<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1295" class="blob-num js-line-number" data-line-number="1295"></td>
>         <td id="LC1295" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1296" class="blob-num js-line-number" data-line-number="1296"></td>
>         <td id="LC1296" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1297" class="blob-num js-line-number" data-line-number="1297"></td>
>         <td id="LC1297" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found MAX_POP_GROWTH_RATE (<span class="pl-c1">%s</span>) = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, MAX_POP_GROWTH_RATE);</td>
>       </tr>
>       <tr>
>         <td id="L1298" class="blob-num js-line-number" data-line-number="1298"></td>
>         <td id="LC1298" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1299" class="blob-num js-line-number" data-line-number="1299"></td>
>         <td id="LC1299" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>nMIGRATION_CHANGES<span class="pl-pds">&quot;</span></span> ) ) { <span class="pl-c">// set up migration rates</span></td>
>       </tr>
>       <tr>
>         <td id="L1300" class="blob-num js-line-number" data-line-number="1300"></td>
>         <td id="LC1300" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( !nPopSet ) {</td>
>       </tr>
>       <tr>
>         <td id="L1301" class="blob-num js-line-number" data-line-number="1301"></td>
>         <td id="LC1301" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Warning in readInParametersFromFile():<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1302" class="blob-num js-line-number" data-line-number="1302"></td>
>         <td id="LC1302" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>nPOPULATIONS should be set in parameters.ini.txt before nMIGRATION_CHANGES<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1303" class="blob-num js-line-number" data-line-number="1303"></td>
>         <td id="LC1303" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1304" class="blob-num js-line-number" data-line-number="1304"></td>
>         <td id="LC1304" class="blob-code blob-code-inner js-file-line">            migrationSet = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1305" class="blob-num js-line-number" data-line-number="1305"></td>
>         <td id="LC1305" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1306" class="blob-num js-line-number" data-line-number="1306"></td>
>         <td id="LC1306" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// number of migration change events:</span></td>
>       </tr>
>       <tr>
>         <td id="L1307" class="blob-num js-line-number" data-line-number="1307"></td>
>         <td id="LC1307" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, &amp;nMIGRATION_CHANGES);</td>
>       </tr>
>       <tr>
>         <td id="L1308" class="blob-num js-line-number" data-line-number="1308"></td>
>         <td id="LC1308" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
>         <td id="LC1309" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found nMIGRATION_CHANGES (<span class="pl-c1">%s</span>) = <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, nMIGRATION_CHANGES);</td>
>       </tr>
>       <tr>
>         <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
>         <td id="LC1310" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
>         <td id="LC1311" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// times of migration change events:</span></td>
>       </tr>
>       <tr>
>         <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
>         <td id="LC1312" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span><span class="pl-pds">&quot;</span></span>, option);</td>
>       </tr>
>       <tr>
>         <td id="L1313" class="blob-num js-line-number" data-line-number="1313"></td>
>         <td id="LC1313" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( <span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>MIGRATION_CHANGE_TIMES<span class="pl-pds">&quot;</span></span> ) ) {</td>
>       </tr>
>       <tr>
>         <td id="L1314" class="blob-num js-line-number" data-line-number="1314"></td>
>         <td id="LC1314" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">wrongParametersIniOption</span>( <span class="pl-s"><span class="pl-pds">&quot;</span>MIGRATION_CHANGE_TIMES<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>nMIGRATION_CHANGES<span class="pl-pds">&quot;</span></span>, option);</td>
>       </tr>
>       <tr>
>         <td id="L1315" class="blob-num js-line-number" data-line-number="1315"></td>
>         <td id="LC1315" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1316" class="blob-num js-line-number" data-line-number="1316"></td>
>         <td id="LC1316" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1317" class="blob-num js-line-number" data-line-number="1317"></td>
>         <td id="LC1317" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( nMIGRATION_CHANGES &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1318" class="blob-num js-line-number" data-line-number="1318"></td>
>         <td id="LC1318" class="blob-code blob-code-inner js-file-line">                    MIGRATION_CHANGE_TIMES = (<span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( nMIGRATION_CHANGES * <span class="pl-k">sizeof</span>(<span class="pl-k">long</span> <span class="pl-k">int</span>));</td>
>       </tr>
>       <tr>
>         <td id="L1319" class="blob-num js-line-number" data-line-number="1319"></td>
>         <td id="LC1319" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nMIGRATION_CHANGES; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1320" class="blob-num js-line-number" data-line-number="1320"></td>
>         <td id="LC1320" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, (MIGRATION_CHANGE_TIMES + i));</td>
>       </tr>
>       <tr>
>         <td id="L1321" class="blob-num js-line-number" data-line-number="1321"></td>
>         <td id="LC1321" class="blob-code blob-code-inner js-file-line">                    }</td>
>       </tr>
>       <tr>
>         <td id="L1322" class="blob-num js-line-number" data-line-number="1322"></td>
>         <td id="LC1322" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1323" class="blob-num js-line-number" data-line-number="1323"></td>
>         <td id="LC1323" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1324" class="blob-num js-line-number" data-line-number="1324"></td>
>         <td id="LC1324" class="blob-code blob-code-inner js-file-line">                    MIGRATION_CHANGE_TIMES = (<span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( <span class="pl-k">sizeof</span>(<span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1325" class="blob-num js-line-number" data-line-number="1325"></td>
>         <td id="LC1325" class="blob-code blob-code-inner js-file-line">                    *MIGRATION_CHANGE_TIMES = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1326" class="blob-num js-line-number" data-line-number="1326"></td>
>         <td id="LC1326" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1327" class="blob-num js-line-number" data-line-number="1327"></td>
>         <td id="LC1327" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1328" class="blob-num js-line-number" data-line-number="1328"></td>
>         <td id="LC1328" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1329" class="blob-num js-line-number" data-line-number="1329"></td>
>         <td id="LC1329" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// migration rate values for periods.  expecting nPOPULATIONS x nPOPULATIONS entries (like a matrix) for each period</span></td>
>       </tr>
>       <tr>
>         <td id="L1330" class="blob-num js-line-number" data-line-number="1330"></td>
>         <td id="LC1330" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span><span class="pl-pds">&quot;</span></span>, option);</td>
>       </tr>
>       <tr>
>         <td id="L1331" class="blob-num js-line-number" data-line-number="1331"></td>
>         <td id="LC1331" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( <span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>M_VALUES<span class="pl-pds">&quot;</span></span> ) ) {</td>
>       </tr>
>       <tr>
>         <td id="L1332" class="blob-num js-line-number" data-line-number="1332"></td>
>         <td id="LC1332" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">wrongParametersIniOption</span>( <span class="pl-s"><span class="pl-pds">&quot;</span>M_VALUES<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>MIGRATION_CHANGE_TIMES<span class="pl-pds">&quot;</span></span>, option);</td>
>       </tr>
>       <tr>
>         <td id="L1333" class="blob-num js-line-number" data-line-number="1333"></td>
>         <td id="LC1333" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1334" class="blob-num js-line-number" data-line-number="1334"></td>
>         <td id="LC1334" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1335" class="blob-num js-line-number" data-line-number="1335"></td>
>         <td id="LC1335" class="blob-code blob-code-inner js-file-line">                M_VALUES = (<span class="pl-k">double</span> *) <span class="pl-c1">malloc</span>( nPOPULATIONS * nPOPULATIONS * (nMIGRATION_CHANGES + <span class="pl-c1">1</span>) * <span class="pl-k">sizeof</span>(<span class="pl-k">double</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1336" class="blob-num js-line-number" data-line-number="1336"></td>
>         <td id="LC1336" class="blob-code blob-code-inner js-file-line">                dumi = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1337" class="blob-num js-line-number" data-line-number="1337"></td>
>         <td id="LC1337" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; (nMIGRATION_CHANGES+<span class="pl-c1">1</span>); i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1338" class="blob-num js-line-number" data-line-number="1338"></td>
>         <td id="LC1338" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> ( j = <span class="pl-c1">0</span>; j &lt; nPOPULATIONS; j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1339" class="blob-num js-line-number" data-line-number="1339"></td>
>         <td id="LC1339" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">for</span> ( k = <span class="pl-c1">0</span>; k &lt; nPOPULATIONS; k++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1340" class="blob-num js-line-number" data-line-number="1340"></td>
>         <td id="LC1340" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, (M_VALUES + dumi));</td>
>       </tr>
>       <tr>
>         <td id="L1341" class="blob-num js-line-number" data-line-number="1341"></td>
>         <td id="LC1341" class="blob-code blob-code-inner js-file-line">                            value =  *(M_VALUES + dumi);</td>
>       </tr>
>       <tr>
>         <td id="L1342" class="blob-num js-line-number" data-line-number="1342"></td>
>         <td id="LC1342" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">if</span> ( value &lt; <span class="pl-c1">0.0</span> || value &gt; <span class="pl-c1">1.0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1343" class="blob-num js-line-number" data-line-number="1343"></td>
>         <td id="LC1343" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1344" class="blob-num js-line-number" data-line-number="1344"></td>
>         <td id="LC1344" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>found migration rate value out of bounds [0,1] = <span class="pl-c1">%f</span><span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>, value);</td>
>       </tr>
>       <tr>
>         <td id="L1345" class="blob-num js-line-number" data-line-number="1345"></td>
>         <td id="LC1345" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>Please fix parameters.ini.txt<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1346" class="blob-num js-line-number" data-line-number="1346"></td>
>         <td id="LC1346" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t\t</span>*** Exiting *** <span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1347" class="blob-num js-line-number" data-line-number="1347"></td>
>         <td id="LC1347" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1348" class="blob-num js-line-number" data-line-number="1348"></td>
>         <td id="LC1348" class="blob-code blob-code-inner js-file-line">                            }</td>
>       </tr>
>       <tr>
>         <td id="L1349" class="blob-num js-line-number" data-line-number="1349"></td>
>         <td id="LC1349" class="blob-code blob-code-inner js-file-line">                            <span class="pl-k">else</span> <span class="pl-k">if</span> ( j == k &amp;&amp; value &gt; <span class="pl-c1">0.0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1350" class="blob-num js-line-number" data-line-number="1350"></td>
>         <td id="LC1350" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1351" class="blob-num js-line-number" data-line-number="1351"></td>
>         <td id="LC1351" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>found non-zero migration rate on diagonal = <span class="pl-c1">%f</span><span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>, value);</td>
>       </tr>
>       <tr>
>         <td id="L1352" class="blob-num js-line-number" data-line-number="1352"></td>
>         <td id="LC1352" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>Please fix parameters.ini.txt<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1353" class="blob-num js-line-number" data-line-number="1353"></td>
>         <td id="LC1353" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t\t</span>*** Exiting *** <span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1354" class="blob-num js-line-number" data-line-number="1354"></td>
>         <td id="LC1354" class="blob-code blob-code-inner js-file-line">                                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1355" class="blob-num js-line-number" data-line-number="1355"></td>
>         <td id="LC1355" class="blob-code blob-code-inner js-file-line">                            }</td>
>       </tr>
>       <tr>
>         <td id="L1356" class="blob-num js-line-number" data-line-number="1356"></td>
>         <td id="LC1356" class="blob-code blob-code-inner js-file-line">                            dumi++;</td>
>       </tr>
>       <tr>
>         <td id="L1357" class="blob-num js-line-number" data-line-number="1357"></td>
>         <td id="LC1357" class="blob-code blob-code-inner js-file-line">                        }</td>
>       </tr>
>       <tr>
>         <td id="L1358" class="blob-num js-line-number" data-line-number="1358"></td>
>         <td id="LC1358" class="blob-code blob-code-inner js-file-line">                    }</td>
>       </tr>
>       <tr>
>         <td id="L1359" class="blob-num js-line-number" data-line-number="1359"></td>
>         <td id="LC1359" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1360" class="blob-num js-line-number" data-line-number="1360"></td>
>         <td id="LC1360" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1361" class="blob-num js-line-number" data-line-number="1361"></td>
>         <td id="LC1361" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// test check</span></td>
>       </tr>
>       <tr>
>         <td id="L1362" class="blob-num js-line-number" data-line-number="1362"></td>
>         <td id="LC1362" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L1363" class="blob-num js-line-number" data-line-number="1363"></td>
>         <td id="LC1363" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found MIGRATION_CHANGE_TIMES: <span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1364" class="blob-num js-line-number" data-line-number="1364"></td>
>         <td id="LC1364" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nMIGRATION_CHANGES; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1365" class="blob-num js-line-number" data-line-number="1365"></td>
>         <td id="LC1365" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, MIGRATION_CHANGE_TIMES[i]);</td>
>       </tr>
>       <tr>
>         <td id="L1366" class="blob-num js-line-number" data-line-number="1366"></td>
>         <td id="LC1366" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1367" class="blob-num js-line-number" data-line-number="1367"></td>
>         <td id="LC1367" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Found M_VALUES:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1368" class="blob-num js-line-number" data-line-number="1368"></td>
>         <td id="LC1368" class="blob-code blob-code-inner js-file-line">                dumi = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1369" class="blob-num js-line-number" data-line-number="1369"></td>
>         <td id="LC1369" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; (nMIGRATION_CHANGES+<span class="pl-c1">1</span>); i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1370" class="blob-num js-line-number" data-line-number="1370"></td>
>         <td id="LC1370" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">for</span> ( j = <span class="pl-c1">0</span>; j &lt; nPOPULATIONS; j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1371" class="blob-num js-line-number" data-line-number="1371"></td>
>         <td id="LC1371" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">for</span> ( k = <span class="pl-c1">0</span>; k &lt; nPOPULATIONS; k++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1372" class="blob-num js-line-number" data-line-number="1372"></td>
>         <td id="LC1372" class="blob-code blob-code-inner js-file-line">                            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%f</span><span class="pl-pds">&quot;</span></span>, M_VALUES[dumi++]);</td>
>       </tr>
>       <tr>
>         <td id="L1373" class="blob-num js-line-number" data-line-number="1373"></td>
>         <td id="LC1373" class="blob-code blob-code-inner js-file-line">                        }</td>
>       </tr>
>       <tr>
>         <td id="L1374" class="blob-num js-line-number" data-line-number="1374"></td>
>         <td id="LC1374" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1375" class="blob-num js-line-number" data-line-number="1375"></td>
>         <td id="LC1375" class="blob-code blob-code-inner js-file-line">                    }</td>
>       </tr>
>       <tr>
>         <td id="L1376" class="blob-num js-line-number" data-line-number="1376"></td>
>         <td id="LC1376" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1377" class="blob-num js-line-number" data-line-number="1377"></td>
>         <td id="LC1377" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1378" class="blob-num js-line-number" data-line-number="1378"></td>
>         <td id="LC1378" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1379" class="blob-num js-line-number" data-line-number="1379"></td>
>         <td id="LC1379" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1380" class="blob-num js-line-number" data-line-number="1380"></td>
>         <td id="LC1380" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L1381" class="blob-num js-line-number" data-line-number="1381"></td>
>         <td id="LC1381" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1382" class="blob-num js-line-number" data-line-number="1382"></td>
>         <td id="LC1382" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>nSITES<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// total number of sites in genome</span></td>
>       </tr>
>       <tr>
>         <td id="L1383" class="blob-num js-line-number" data-line-number="1383"></td>
>         <td id="LC1383" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%llu</span><span class="pl-pds">&quot;</span></span>, &amp;nSITES);</td>
>       </tr>
>       <tr>
>         <td id="L1384" class="blob-num js-line-number" data-line-number="1384"></td>
>         <td id="LC1384" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( nSITES &lt; <span class="pl-c1">1</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1385" class="blob-num js-line-number" data-line-number="1385"></td>
>         <td id="LC1385" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\t</span>nSITES (= <span class="pl-c1">%llu</span>) should be &gt; 1<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nSITES);</td>
>       </tr>
>       <tr>
>         <td id="L1386" class="blob-num js-line-number" data-line-number="1386"></td>
>         <td id="LC1386" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>Please fix parameters.ini.txt<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1387" class="blob-num js-line-number" data-line-number="1387"></td>
>         <td id="LC1387" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t\t</span>*** Exiting *** <span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1388" class="blob-num js-line-number" data-line-number="1388"></td>
>         <td id="LC1388" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1389" class="blob-num js-line-number" data-line-number="1389"></td>
>         <td id="LC1389" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1390" class="blob-num js-line-number" data-line-number="1390"></td>
>         <td id="LC1390" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// test check</span></td>
>       </tr>
>       <tr>
>         <td id="L1391" class="blob-num js-line-number" data-line-number="1391"></td>
>         <td id="LC1391" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1392" class="blob-num js-line-number" data-line-number="1392"></td>
>         <td id="LC1392" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found nSITES (<span class="pl-c1">%s</span>) = <span class="pl-c1">%llu</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, nSITES);</td>
>       </tr>
>       <tr>
>         <td id="L1393" class="blob-num js-line-number" data-line-number="1393"></td>
>         <td id="LC1393" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1394" class="blob-num js-line-number" data-line-number="1394"></td>
>         <td id="LC1394" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>nLINKAGE_GROUPS<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// total number of sites in genome</span></td>
>       </tr>
>       <tr>
>         <td id="L1395" class="blob-num js-line-number" data-line-number="1395"></td>
>         <td id="LC1395" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, &amp;nLINKAGE_GROUPS);</td>
>       </tr>
>       <tr>
>         <td id="L1396" class="blob-num js-line-number" data-line-number="1396"></td>
>         <td id="LC1396" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( nLINKAGE_GROUPS &lt; <span class="pl-c1">1</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1397" class="blob-num js-line-number" data-line-number="1397"></td>
>         <td id="LC1397" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\n</span>LINKAGE_GROUPS (= <span class="pl-c1">%i</span>) should be &gt; 1<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nLINKAGE_GROUPS);</td>
>       </tr>
>       <tr>
>         <td id="L1398" class="blob-num js-line-number" data-line-number="1398"></td>
>         <td id="LC1398" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>Please fix parameters.ini.txt<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1399" class="blob-num js-line-number" data-line-number="1399"></td>
>         <td id="LC1399" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t\t</span>*** Exiting *** <span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1400" class="blob-num js-line-number" data-line-number="1400"></td>
>         <td id="LC1400" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1401" class="blob-num js-line-number" data-line-number="1401"></td>
>         <td id="LC1401" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1402" class="blob-num js-line-number" data-line-number="1402"></td>
>         <td id="LC1402" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// test check</span></td>
>       </tr>
>       <tr>
>         <td id="L1403" class="blob-num js-line-number" data-line-number="1403"></td>
>         <td id="LC1403" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1404" class="blob-num js-line-number" data-line-number="1404"></td>
>         <td id="LC1404" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found nLINKAGE_GROUPS (<span class="pl-c1">%s</span>) = <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, nLINKAGE_GROUPS);</td>
>       </tr>
>       <tr>
>         <td id="L1405" class="blob-num js-line-number" data-line-number="1405"></td>
>         <td id="LC1405" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1406" class="blob-num js-line-number" data-line-number="1406"></td>
>         <td id="LC1406" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>RECOMBINATION_RATE_PER_KB<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// background selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1407" class="blob-num js-line-number" data-line-number="1407"></td>
>         <td id="LC1407" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;RECOMBINATION_RATE_PER_KB);</td>
>       </tr>
>       <tr>
>         <td id="L1408" class="blob-num js-line-number" data-line-number="1408"></td>
>         <td id="LC1408" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1409" class="blob-num js-line-number" data-line-number="1409"></td>
>         <td id="LC1409" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found RECOMBINATION_RATE_PER_KB (<span class="pl-c1">%s</span>) = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, RECOMBINATION_RATE_PER_KB);</td>
>       </tr>
>       <tr>
>         <td id="L1410" class="blob-num js-line-number" data-line-number="1410"></td>
>         <td id="LC1410" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1411" class="blob-num js-line-number" data-line-number="1411"></td>
>         <td id="LC1411" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>MU<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// background selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1412" class="blob-num js-line-number" data-line-number="1412"></td>
>         <td id="LC1412" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;MU);</td>
>       </tr>
>       <tr>
>         <td id="L1413" class="blob-num js-line-number" data-line-number="1413"></td>
>         <td id="LC1413" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1414" class="blob-num js-line-number" data-line-number="1414"></td>
>         <td id="LC1414" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found MU (<span class="pl-c1">%s</span>) = <span class="pl-c1">%E</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, MU);</td>
>       </tr>
>       <tr>
>         <td id="L1415" class="blob-num js-line-number" data-line-number="1415"></td>
>         <td id="LC1415" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1416" class="blob-num js-line-number" data-line-number="1416"></td>
>         <td id="LC1416" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>INCLUDE_SELECTION<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// using selection</span></td>
>       </tr>
>       <tr>
>         <td id="L1417" class="blob-num js-line-number" data-line-number="1417"></td>
>         <td id="LC1417" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, &amp;temp);</td>
>       </tr>
>       <tr>
>         <td id="L1418" class="blob-num js-line-number" data-line-number="1418"></td>
>         <td id="LC1418" class="blob-code blob-code-inner js-file-line">            INCLUDE_SELECTION = temp;</td>
>       </tr>
>       <tr>
>         <td id="L1419" class="blob-num js-line-number" data-line-number="1419"></td>
>         <td id="LC1419" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1420" class="blob-num js-line-number" data-line-number="1420"></td>
>         <td id="LC1420" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found INCLUDE_SELECTION (<span class="pl-c1">%s</span>) = <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, INCLUDE_SELECTION);</td>
>       </tr>
>       <tr>
>         <td id="L1421" class="blob-num js-line-number" data-line-number="1421"></td>
>         <td id="LC1421" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1422" class="blob-num js-line-number" data-line-number="1422"></td>
>         <td id="LC1422" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>MEAN_S_BGS<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// background selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1423" class="blob-num js-line-number" data-line-number="1423"></td>
>         <td id="LC1423" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;MEAN_S_BGS);</td>
>       </tr>
>       <tr>
>         <td id="L1424" class="blob-num js-line-number" data-line-number="1424"></td>
>         <td id="LC1424" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1425" class="blob-num js-line-number" data-line-number="1425"></td>
>         <td id="LC1425" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found MEAN_S_BGS (<span class="pl-c1">%s</span>) = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, MEAN_S_BGS);</td>
>       </tr>
>       <tr>
>         <td id="L1426" class="blob-num js-line-number" data-line-number="1426"></td>
>         <td id="LC1426" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1427" class="blob-num js-line-number" data-line-number="1427"></td>
>         <td id="LC1427" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>MEAN_S_POS<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// positive selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1428" class="blob-num js-line-number" data-line-number="1428"></td>
>         <td id="LC1428" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;MEAN_S_POS);</td>
>       </tr>
>       <tr>
>         <td id="L1429" class="blob-num js-line-number" data-line-number="1429"></td>
>         <td id="LC1429" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1430" class="blob-num js-line-number" data-line-number="1430"></td>
>         <td id="LC1430" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found MEAN_S_POS (<span class="pl-c1">%s</span>) = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, MEAN_S_POS);</td>
>       </tr>
>       <tr>
>         <td id="L1431" class="blob-num js-line-number" data-line-number="1431"></td>
>         <td id="LC1431" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1432" class="blob-num js-line-number" data-line-number="1432"></td>
>         <td id="LC1432" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>MEAN_S_DIV<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// divergent selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1433" class="blob-num js-line-number" data-line-number="1433"></td>
>         <td id="LC1433" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;MEAN_S_DIV);</td>
>       </tr>
>       <tr>
>         <td id="L1434" class="blob-num js-line-number" data-line-number="1434"></td>
>         <td id="LC1434" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1435" class="blob-num js-line-number" data-line-number="1435"></td>
>         <td id="LC1435" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found MEAN_S_DIV (<span class="pl-c1">%s</span>) = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, MEAN_S_DIV);</td>
>       </tr>
>       <tr>
>         <td id="L1436" class="blob-num js-line-number" data-line-number="1436"></td>
>         <td id="LC1436" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1437" class="blob-num js-line-number" data-line-number="1437"></td>
>         <td id="LC1437" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>PROBABILITY_SITE_BGS<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// divergent selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1438" class="blob-num js-line-number" data-line-number="1438"></td>
>         <td id="LC1438" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;PROBABILITY_SITE_BGS);</td>
>       </tr>
>       <tr>
>         <td id="L1439" class="blob-num js-line-number" data-line-number="1439"></td>
>         <td id="LC1439" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1440" class="blob-num js-line-number" data-line-number="1440"></td>
>         <td id="LC1440" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found PROBABILITY_SITE_BGS (<span class="pl-c1">%s</span>) = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, PROBABILITY_SITE_BGS);</td>
>       </tr>
>       <tr>
>         <td id="L1441" class="blob-num js-line-number" data-line-number="1441"></td>
>         <td id="LC1441" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1442" class="blob-num js-line-number" data-line-number="1442"></td>
>         <td id="LC1442" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>PROBABILITY_SITE_POS<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// divergent selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1443" class="blob-num js-line-number" data-line-number="1443"></td>
>         <td id="LC1443" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;PROBABILITY_SITE_POS);</td>
>       </tr>
>       <tr>
>         <td id="L1444" class="blob-num js-line-number" data-line-number="1444"></td>
>         <td id="LC1444" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1445" class="blob-num js-line-number" data-line-number="1445"></td>
>         <td id="LC1445" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found PROBABILITY_SITE_POS (<span class="pl-c1">%s</span>) = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, PROBABILITY_SITE_POS);</td>
>       </tr>
>       <tr>
>         <td id="L1446" class="blob-num js-line-number" data-line-number="1446"></td>
>         <td id="LC1446" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1447" class="blob-num js-line-number" data-line-number="1447"></td>
>         <td id="LC1447" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>PROBABILITY_SITE_DIV<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// divergent selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1448" class="blob-num js-line-number" data-line-number="1448"></td>
>         <td id="LC1448" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;PROBABILITY_SITE_DIV);</td>
>       </tr>
>       <tr>
>         <td id="L1449" class="blob-num js-line-number" data-line-number="1449"></td>
>         <td id="LC1449" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1450" class="blob-num js-line-number" data-line-number="1450"></td>
>         <td id="LC1450" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found PROBABILITY_SITE_DIV (<span class="pl-c1">%s</span>) = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, PROBABILITY_SITE_DIV);</td>
>       </tr>
>       <tr>
>         <td id="L1451" class="blob-num js-line-number" data-line-number="1451"></td>
>         <td id="LC1451" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1452" class="blob-num js-line-number" data-line-number="1452"></td>
>         <td id="LC1452" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>ENVIRONMENT_TYPE<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// divergent selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1453" class="blob-num js-line-number" data-line-number="1453"></td>
>         <td id="LC1453" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span><span class="pl-pds">&quot;</span></span>, option2);</td>
>       </tr>
>       <tr>
>         <td id="L1454" class="blob-num js-line-number" data-line-number="1454"></td>
>         <td id="LC1454" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option2, <span class="pl-s"><span class="pl-pds">&quot;</span>GRADIENT<span class="pl-pds">&quot;</span></span> ) )</td>
>       </tr>
>       <tr>
>         <td id="L1455" class="blob-num js-line-number" data-line-number="1455"></td>
>         <td id="LC1455" class="blob-code blob-code-inner js-file-line">                ENVIRONMENT_TYPE = ENVT_TYPE_GRADIENT;</td>
>       </tr>
>       <tr>
>         <td id="L1456" class="blob-num js-line-number" data-line-number="1456"></td>
>         <td id="LC1456" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option2, <span class="pl-s"><span class="pl-pds">&quot;</span>MOSAIC<span class="pl-pds">&quot;</span></span> ) )</td>
>       </tr>
>       <tr>
>         <td id="L1457" class="blob-num js-line-number" data-line-number="1457"></td>
>         <td id="LC1457" class="blob-code blob-code-inner js-file-line">                ENVIRONMENT_TYPE = ENVT_TYPE_MOSAIC;</td>
>       </tr>
>       <tr>
>         <td id="L1458" class="blob-num js-line-number" data-line-number="1458"></td>
>         <td id="LC1458" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option2, <span class="pl-s"><span class="pl-pds">&quot;</span>INVARIANT<span class="pl-pds">&quot;</span></span> ) )</td>
>       </tr>
>       <tr>
>         <td id="L1459" class="blob-num js-line-number" data-line-number="1459"></td>
>         <td id="LC1459" class="blob-code blob-code-inner js-file-line">                ENVIRONMENT_TYPE = ENVT_TYPE_INVARIANT;</td>
>       </tr>
>       <tr>
>         <td id="L1460" class="blob-num js-line-number" data-line-number="1460"></td>
>         <td id="LC1460" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1461" class="blob-num js-line-number" data-line-number="1461"></td>
>         <td id="LC1461" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\t</span>ENVIRONMENT_TYPE option (<span class="pl-c1">%s</span>) not recognized.<span class="pl-pds">&quot;</span></span>, option2);</td>
>       </tr>
>       <tr>
>         <td id="L1462" class="blob-num js-line-number" data-line-number="1462"></td>
>         <td id="LC1462" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t</span>Usable options are &#39;GRADIENT&#39;, &#39;MOSAIC&#39;, and &#39;INVARIANT&#39;.<span class="pl-cce">\n\t</span>Please fix parameters.ini.txt<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1463" class="blob-num js-line-number" data-line-number="1463"></td>
>         <td id="LC1463" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t\t</span>*** Exiting *** <span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1464" class="blob-num js-line-number" data-line-number="1464"></td>
>         <td id="LC1464" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1465" class="blob-num js-line-number" data-line-number="1465"></td>
>         <td id="LC1465" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1466" class="blob-num js-line-number" data-line-number="1466"></td>
>         <td id="LC1466" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1467" class="blob-num js-line-number" data-line-number="1467"></td>
>         <td id="LC1467" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found ENVIRONMENT_TYPE (<span class="pl-c1">%s</span>) = <span class="pl-c1">%s</span> = <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, option2, ENVIRONMENT_TYPE);</td>
>       </tr>
>       <tr>
>         <td id="L1468" class="blob-num js-line-number" data-line-number="1468"></td>
>         <td id="LC1468" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1469" class="blob-num js-line-number" data-line-number="1469"></td>
>         <td id="LC1469" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>ENVT_MIN<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// divergent selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1470" class="blob-num js-line-number" data-line-number="1470"></td>
>         <td id="LC1470" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;ENVT_MIN);</td>
>       </tr>
>       <tr>
>         <td id="L1471" class="blob-num js-line-number" data-line-number="1471"></td>
>         <td id="LC1471" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1472" class="blob-num js-line-number" data-line-number="1472"></td>
>         <td id="LC1472" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found ENVT_MIN (<span class="pl-c1">%s</span>) = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, ENVT_MIN);</td>
>       </tr>
>       <tr>
>         <td id="L1473" class="blob-num js-line-number" data-line-number="1473"></td>
>         <td id="LC1473" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1474" class="blob-num js-line-number" data-line-number="1474"></td>
>         <td id="LC1474" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>ENVT_MAX<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// divergent selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1475" class="blob-num js-line-number" data-line-number="1475"></td>
>         <td id="LC1475" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%lf</span><span class="pl-pds">&quot;</span></span>, &amp;ENVT_MAX);</td>
>       </tr>
>       <tr>
>         <td id="L1476" class="blob-num js-line-number" data-line-number="1476"></td>
>         <td id="LC1476" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1477" class="blob-num js-line-number" data-line-number="1477"></td>
>         <td id="LC1477" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found ENVT_MAX (<span class="pl-c1">%s</span>) = <span class="pl-c1">%f</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, ENVT_MAX);</td>
>       </tr>
>       <tr>
>         <td id="L1478" class="blob-num js-line-number" data-line-number="1478"></td>
>         <td id="LC1478" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1479" class="blob-num js-line-number" data-line-number="1479"></td>
>         <td id="LC1479" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>FITNESS_MODEL<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// divergent selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1480" class="blob-num js-line-number" data-line-number="1480"></td>
>         <td id="LC1480" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span><span class="pl-pds">&quot;</span></span>, option2);</td>
>       </tr>
>       <tr>
>         <td id="L1481" class="blob-num js-line-number" data-line-number="1481"></td>
>         <td id="LC1481" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option2, <span class="pl-s"><span class="pl-pds">&quot;</span>ADDITIVE<span class="pl-pds">&quot;</span></span> ) )</td>
>       </tr>
>       <tr>
>         <td id="L1482" class="blob-num js-line-number" data-line-number="1482"></td>
>         <td id="LC1482" class="blob-code blob-code-inner js-file-line">                FITNESS_MODEL = FITNESS_MODEL_ADDITIVE;</td>
>       </tr>
>       <tr>
>         <td id="L1483" class="blob-num js-line-number" data-line-number="1483"></td>
>         <td id="LC1483" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option2, <span class="pl-s"><span class="pl-pds">&quot;</span>MULTIPLICATIVE<span class="pl-pds">&quot;</span></span> ) )</td>
>       </tr>
>       <tr>
>         <td id="L1484" class="blob-num js-line-number" data-line-number="1484"></td>
>         <td id="LC1484" class="blob-code blob-code-inner js-file-line">                FITNESS_MODEL = FITNESS_MODEL_MULTIPLICATIVE;</td>
>       </tr>
>       <tr>
>         <td id="L1485" class="blob-num js-line-number" data-line-number="1485"></td>
>         <td id="LC1485" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1486" class="blob-num js-line-number" data-line-number="1486"></td>
>         <td id="LC1486" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\t</span>FITNESS_MODEL option (<span class="pl-c1">%s</span>) not recognized.<span class="pl-pds">&quot;</span></span>, option2);</td>
>       </tr>
>       <tr>
>         <td id="L1487" class="blob-num js-line-number" data-line-number="1487"></td>
>         <td id="LC1487" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t</span>Usable options are &#39;ADDITIVE&#39; and &#39;MULTIPLICATIVE&#39;.<span class="pl-cce">\n\t</span>Please fix parameters.ini.txt<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1488" class="blob-num js-line-number" data-line-number="1488"></td>
>         <td id="LC1488" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t\t</span>*** Exiting *** <span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1489" class="blob-num js-line-number" data-line-number="1489"></td>
>         <td id="LC1489" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1490" class="blob-num js-line-number" data-line-number="1490"></td>
>         <td id="LC1490" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1491" class="blob-num js-line-number" data-line-number="1491"></td>
>         <td id="LC1491" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1492" class="blob-num js-line-number" data-line-number="1492"></td>
>         <td id="LC1492" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found ENVIRONMENT_TYPE (<span class="pl-c1">%s</span>) = <span class="pl-c1">%s</span> = <span class="pl-c1">%i</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, option2, FITNESS_MODEL);</td>
>       </tr>
>       <tr>
>         <td id="L1493" class="blob-num js-line-number" data-line-number="1493"></td>
>         <td id="LC1493" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1494" class="blob-num js-line-number" data-line-number="1494"></td>
>         <td id="LC1494" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( !<span class="pl-c1">strcmp</span>( option, <span class="pl-s"><span class="pl-pds">&quot;</span>TIME_SERIES_SAMPLE_FREQ<span class="pl-pds">&quot;</span></span>  ) ) { <span class="pl-c">// divergent selection mean coefficient</span></td>
>       </tr>
>       <tr>
>         <td id="L1495" class="blob-num js-line-number" data-line-number="1495"></td>
>         <td id="LC1495" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fscanf</span>(pfile, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, &amp;TIME_SERIES_SAMPLE_FREQ);</td>
>       </tr>
>       <tr>
>         <td id="L1496" class="blob-num js-line-number" data-line-number="1496"></td>
>         <td id="LC1496" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1497" class="blob-num js-line-number" data-line-number="1497"></td>
>         <td id="LC1497" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Found TIME_SERIES_SAMPLE_FREQ (<span class="pl-c1">%s</span>) = <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, option, TIME_SERIES_SAMPLE_FREQ);</td>
>       </tr>
>       <tr>
>         <td id="L1498" class="blob-num js-line-number" data-line-number="1498"></td>
>         <td id="LC1498" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1499" class="blob-num js-line-number" data-line-number="1499"></td>
>         <td id="LC1499" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1500" class="blob-num js-line-number" data-line-number="1500"></td>
>         <td id="LC1500" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L1501" class="blob-num js-line-number" data-line-number="1501"></td>
>         <td id="LC1501" class="blob-code blob-code-inner js-file-line">        option[<span class="pl-c1">0</span>] = <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\0</span><span class="pl-pds">&#39;</span></span>; <span class="pl-c">// reset to avoid double setting last option</span></td>
>       </tr>
>       <tr>
>         <td id="L1502" class="blob-num js-line-number" data-line-number="1502"></td>
>         <td id="LC1502" class="blob-code blob-code-inner js-file-line">        option2[<span class="pl-c1">0</span>] = <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\0</span><span class="pl-pds">&#39;</span></span>;</td>
>       </tr>
>       <tr>
>         <td id="L1503" class="blob-num js-line-number" data-line-number="1503"></td>
>         <td id="LC1503" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1504" class="blob-num js-line-number" data-line-number="1504"></td>
>         <td id="LC1504" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1505" class="blob-num js-line-number" data-line-number="1505"></td>
>         <td id="LC1505" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fclose</span>(pfile);</td>
>       </tr>
>       <tr>
>         <td id="L1506" class="blob-num js-line-number" data-line-number="1506"></td>
>         <td id="LC1506" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1507" class="blob-num js-line-number" data-line-number="1507"></td>
>         <td id="LC1507" class="blob-code blob-code-inner js-file-line">    PROBABILITY_SITE_NEUTRAL = <span class="pl-c1">1.0</span> - (PROBABILITY_SITE_BGS + PROBABILITY_SITE_DIV + PROBABILITY_SITE_POS);</td>
>       </tr>
>       <tr>
>         <td id="L1508" class="blob-num js-line-number" data-line-number="1508"></td>
>         <td id="LC1508" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( PROBABILITY_SITE_NEUTRAL &lt; <span class="pl-c1">0.0</span> || PROBABILITY_SITE_BGS &lt; <span class="pl-c1">0.0</span> || PROBABILITY_SITE_POS &lt; <span class="pl-c1">0.0</span> || PROBABILITY_SITE_DIV &lt; <span class="pl-c1">0.0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1509" class="blob-num js-line-number" data-line-number="1509"></td>
>         <td id="LC1509" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1510" class="blob-num js-line-number" data-line-number="1510"></td>
>         <td id="LC1510" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>One or more PROBABILITY_SITE_... variables out of bounds<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1511" class="blob-num js-line-number" data-line-number="1511"></td>
>         <td id="LC1511" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>Please fix parameters.ini.txt<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1512" class="blob-num js-line-number" data-line-number="1512"></td>
>         <td id="LC1512" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t\t</span>*** Exiting *** <span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1513" class="blob-num js-line-number" data-line-number="1513"></td>
>         <td id="LC1513" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1514" class="blob-num js-line-number" data-line-number="1514"></td>
>         <td id="LC1514" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1515" class="blob-num js-line-number" data-line-number="1515"></td>
>         <td id="LC1515" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1516" class="blob-num js-line-number" data-line-number="1516"></td>
>         <td id="LC1516" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( !demographySet ) {</td>
>       </tr>
>       <tr>
>         <td id="L1517" class="blob-num js-line-number" data-line-number="1517"></td>
>         <td id="LC1517" class="blob-code blob-code-inner js-file-line">        INITIAL_N = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1518" class="blob-num js-line-number" data-line-number="1518"></td>
>         <td id="LC1518" class="blob-code blob-code-inner js-file-line">        nDEMOGRAPHIC_CHANGES = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1519" class="blob-num js-line-number" data-line-number="1519"></td>
>         <td id="LC1519" class="blob-code blob-code-inner js-file-line">        DEMOGRAPHIC_CHANGE_TIMES = (<span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( <span class="pl-k">sizeof</span>(<span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1520" class="blob-num js-line-number" data-line-number="1520"></td>
>         <td id="LC1520" class="blob-code blob-code-inner js-file-line">        *DEMOGRAPHIC_CHANGE_TIMES = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1521" class="blob-num js-line-number" data-line-number="1521"></td>
>         <td id="LC1521" class="blob-code blob-code-inner js-file-line">        K_VALUES = (<span class="pl-k">double</span> *) <span class="pl-c1">malloc</span>( nPOPULATIONS * <span class="pl-k">sizeof</span>(<span class="pl-k">double</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1522" class="blob-num js-line-number" data-line-number="1522"></td>
>         <td id="LC1522" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1523" class="blob-num js-line-number" data-line-number="1523"></td>
>         <td id="LC1523" class="blob-code blob-code-inner js-file-line">            K_VALUES[i] = K_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L1524" class="blob-num js-line-number" data-line-number="1524"></td>
>         <td id="LC1524" class="blob-code blob-code-inner js-file-line">            INITIAL_N += K_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L1525" class="blob-num js-line-number" data-line-number="1525"></td>
>         <td id="LC1525" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1526" class="blob-num js-line-number" data-line-number="1526"></td>
>         <td id="LC1526" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1527" class="blob-num js-line-number" data-line-number="1527"></td>
>         <td id="LC1527" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>INITIAL_N = <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, INITIAL_N);</td>
>       </tr>
>       <tr>
>         <td id="L1528" class="blob-num js-line-number" data-line-number="1528"></td>
>         <td id="LC1528" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1529" class="blob-num js-line-number" data-line-number="1529"></td>
>         <td id="LC1529" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( !migrationSet ) {</td>
>       </tr>
>       <tr>
>         <td id="L1530" class="blob-num js-line-number" data-line-number="1530"></td>
>         <td id="LC1530" class="blob-code blob-code-inner js-file-line">        nMIGRATION_CHANGES = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1531" class="blob-num js-line-number" data-line-number="1531"></td>
>         <td id="LC1531" class="blob-code blob-code-inner js-file-line">        MIGRATION_CHANGE_TIMES = (<span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( <span class="pl-k">sizeof</span>( <span class="pl-k">long</span> <span class="pl-k">int</span> ) );</td>
>       </tr>
>       <tr>
>         <td id="L1532" class="blob-num js-line-number" data-line-number="1532"></td>
>         <td id="LC1532" class="blob-code blob-code-inner js-file-line">        *MIGRATION_CHANGE_TIMES = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1533" class="blob-num js-line-number" data-line-number="1533"></td>
>         <td id="LC1533" class="blob-code blob-code-inner js-file-line">        M_VALUES = (<span class="pl-k">double</span> *) <span class="pl-c1">malloc</span>( nPOPULATIONS * nPOPULATIONS * <span class="pl-k">sizeof</span>(<span class="pl-k">double</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1534" class="blob-num js-line-number" data-line-number="1534"></td>
>         <td id="LC1534" class="blob-code blob-code-inner js-file-line">        k = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1535" class="blob-num js-line-number" data-line-number="1535"></td>
>         <td id="LC1535" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1536" class="blob-num js-line-number" data-line-number="1536"></td>
>         <td id="LC1536" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( j = <span class="pl-c1">0</span>; j &lt; nPOPULATIONS; j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1537" class="blob-num js-line-number" data-line-number="1537"></td>
>         <td id="LC1537" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( i == j )</td>
>       </tr>
>       <tr>
>         <td id="L1538" class="blob-num js-line-number" data-line-number="1538"></td>
>         <td id="LC1538" class="blob-code blob-code-inner js-file-line">                    M_VALUES[k] = <span class="pl-c1">0.0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1539" class="blob-num js-line-number" data-line-number="1539"></td>
>         <td id="LC1539" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L1540" class="blob-num js-line-number" data-line-number="1540"></td>
>         <td id="LC1540" class="blob-code blob-code-inner js-file-line">                    M_VALUES[k] = MIGRATION_RATE_DEFAULT;</td>
>       </tr>
>       <tr>
>         <td id="L1541" class="blob-num js-line-number" data-line-number="1541"></td>
>         <td id="LC1541" class="blob-code blob-code-inner js-file-line">                k++;</td>
>       </tr>
>       <tr>
>         <td id="L1542" class="blob-num js-line-number" data-line-number="1542"></td>
>         <td id="LC1542" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1543" class="blob-num js-line-number" data-line-number="1543"></td>
>         <td id="LC1543" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1544" class="blob-num js-line-number" data-line-number="1544"></td>
>         <td id="LC1544" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1545" class="blob-num js-line-number" data-line-number="1545"></td>
>         <td id="LC1545" class="blob-code blob-code-inner js-file-line">    KvalPt = K_VALUES;</td>
>       </tr>
>       <tr>
>         <td id="L1546" class="blob-num js-line-number" data-line-number="1546"></td>
>         <td id="LC1546" class="blob-code blob-code-inner js-file-line">    migRatePt = M_VALUES;</td>
>       </tr>
>       <tr>
>         <td id="L1547" class="blob-num js-line-number" data-line-number="1547"></td>
>         <td id="LC1547" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1548" class="blob-num js-line-number" data-line-number="1548"></td>
>         <td id="LC1548" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1549" class="blob-num js-line-number" data-line-number="1549"></td>
>         <td id="LC1549" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/* printf(&quot;\nWarning: not done writing readInParametersFromFile().\nNeed to write code for cases when paramters are left out.\nAnd probably other stuff too.\n\n&quot;); */</span></td>
>       </tr>
>       <tr>
>         <td id="L1550" class="blob-num js-line-number" data-line-number="1550"></td>
>         <td id="LC1550" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1551" class="blob-num js-line-number" data-line-number="1551"></td>
>         <td id="LC1551" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//exit(0);</span></td>
>       </tr>
>       <tr>
>         <td id="L1552" class="blob-num js-line-number" data-line-number="1552"></td>
>         <td id="LC1552" class="blob-code blob-code-inner js-file-line">    N = INITIAL_N;</td>
>       </tr>
>       <tr>
>         <td id="L1553" class="blob-num js-line-number" data-line-number="1553"></td>
>         <td id="LC1553" class="blob-code blob-code-inner js-file-line">    GENOME_MU = MU * ((<span class="pl-k">double</span>) PLOIDY) * ((<span class="pl-k">double</span>) nSITES);</td>
>       </tr>
>       <tr>
>         <td id="L1554" class="blob-num js-line-number" data-line-number="1554"></td>
>         <td id="LC1554" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1555" class="blob-num js-line-number" data-line-number="1555"></td>
>         <td id="LC1555" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> RNG_SEED;</td>
>       </tr>
>       <tr>
>         <td id="L1556" class="blob-num js-line-number" data-line-number="1556"></td>
>         <td id="LC1556" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L1557" class="blob-num js-line-number" data-line-number="1557"></td>
>         <td id="LC1557" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1558" class="blob-num js-line-number" data-line-number="1558"></td>
>         <td id="LC1558" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1559" class="blob-num js-line-number" data-line-number="1559"></td>
>         <td id="LC1559" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1560" class="blob-num js-line-number" data-line-number="1560"></td>
>         <td id="LC1560" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">reproduction</span>(<span class="pl-k">void</span>)</td>
>       </tr>
>       <tr>
>         <td id="L1561" class="blob-num js-line-number" data-line-number="1561"></td>
>         <td id="LC1561" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L1562" class="blob-num js-line-number" data-line-number="1562"></td>
>         <td id="LC1562" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> pop, *locpt, *offspringLocations;</td>
>       </tr>
>       <tr>
>         <td id="L1563" class="blob-num js-line-number" data-line-number="1563"></td>
>         <td id="LC1563" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> i, j, noffspring[nPOPULATIONS], totalOffspring, mommy, daddy, noff, nhere;</td>
>       </tr>
>       <tr>
>         <td id="L1564" class="blob-num js-line-number" data-line-number="1564"></td>
>         <td id="LC1564" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> momIndex, dadIndex, driftLosses, actuallyVariable;</td>
>       </tr>
>       <tr>
>         <td id="L1565" class="blob-num js-line-number" data-line-number="1565"></td>
>         <td id="LC1565" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">short</span> <span class="pl-k">int</span> *offspringGTs, *sipt;</td>
>       </tr>
>       <tr>
>         <td id="L1566" class="blob-num js-line-number" data-line-number="1566"></td>
>         <td id="LC1566" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> individualsInDeme[N], nNewMutations, *lipt, randomNumberLine[N], nSitesInOffspring, maxSitesInOffspring;</td>
>       </tr>
>       <tr>
>         <td id="L1567" class="blob-num js-line-number" data-line-number="1567"></td>
>         <td id="LC1567" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> mutRate;</td>
>       </tr>
>       <tr>
>         <td id="L1568" class="blob-num js-line-number" data-line-number="1568"></td>
>         <td id="LC1568" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> fitnessValues[N], fitnessNumLines[N], *dpt;</td>
>       </tr>
>       <tr>
>         <td id="L1569" class="blob-num js-line-number" data-line-number="1569"></td>
>         <td id="LC1569" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> locus, *ullipt;</td>
>       </tr>
>       <tr>
>         <td id="L1570" class="blob-num js-line-number" data-line-number="1570"></td>
>         <td id="LC1570" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *offsp_SiteIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L1571" class="blob-num js-line-number" data-line-number="1571"></td>
>         <td id="LC1571" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1572" class="blob-num js-line-number" data-line-number="1572"></td>
>         <td id="LC1572" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( INCLUDE_SELECTION )</td>
>       </tr>
>       <tr>
>         <td id="L1573" class="blob-num js-line-number" data-line-number="1573"></td>
>         <td id="LC1573" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">computeFitness</span>(fitnessValues);</td>
>       </tr>
>       <tr>
>         <td id="L1574" class="blob-num js-line-number" data-line-number="1574"></td>
>         <td id="LC1574" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1575" class="blob-num js-line-number" data-line-number="1575"></td>
>         <td id="LC1575" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; N; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1576" class="blob-num js-line-number" data-line-number="1576"></td>
>         <td id="LC1576" class="blob-code blob-code-inner js-file-line">            randomNumberLine[i] = i;</td>
>       </tr>
>       <tr>
>         <td id="L1577" class="blob-num js-line-number" data-line-number="1577"></td>
>         <td id="LC1577" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1578" class="blob-num js-line-number" data-line-number="1578"></td>
>         <td id="LC1578" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1579" class="blob-num js-line-number" data-line-number="1579"></td>
>         <td id="LC1579" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1580" class="blob-num js-line-number" data-line-number="1580"></td>
>         <td id="LC1580" class="blob-code blob-code-inner js-file-line">    totalOffspring = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1581" class="blob-num js-line-number" data-line-number="1581"></td>
>         <td id="LC1581" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( pop = <span class="pl-c1">0</span>; pop &lt; nPOPULATIONS; pop++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1582" class="blob-num js-line-number" data-line-number="1582"></td>
>         <td id="LC1582" class="blob-code blob-code-inner js-file-line">        noffspring[pop] = <span class="pl-c1">calculateNumOffspring</span>(pop);</td>
>       </tr>
>       <tr>
>         <td id="L1583" class="blob-num js-line-number" data-line-number="1583"></td>
>         <td id="LC1583" class="blob-code blob-code-inner js-file-line">        totalOffspring += noffspring[pop];</td>
>       </tr>
>       <tr>
>         <td id="L1584" class="blob-num js-line-number" data-line-number="1584"></td>
>         <td id="LC1584" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1585" class="blob-num js-line-number" data-line-number="1585"></td>
>         <td id="LC1585" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1586" class="blob-num js-line-number" data-line-number="1586"></td>
>         <td id="LC1586" class="blob-code blob-code-inner js-file-line">    offspringLocations = (<span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( totalOffspring * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1587" class="blob-num js-line-number" data-line-number="1587"></td>
>         <td id="LC1587" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1588" class="blob-num js-line-number" data-line-number="1588"></td>
>         <td id="LC1588" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L1589" class="blob-num js-line-number" data-line-number="1589"></td>
>         <td id="LC1589" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Number of offspring in each deme:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1590" class="blob-num js-line-number" data-line-number="1590"></td>
>         <td id="LC1590" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L1591" class="blob-num js-line-number" data-line-number="1591"></td>
>         <td id="LC1591" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%li</span><span class="pl-pds">&quot;</span></span>, noffspring[i]);</td>
>       </tr>
>       <tr>
>         <td id="L1592" class="blob-num js-line-number" data-line-number="1592"></td>
>         <td id="LC1592" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1593" class="blob-num js-line-number" data-line-number="1593"></td>
>         <td id="LC1593" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1594" class="blob-num js-line-number" data-line-number="1594"></td>
>         <td id="LC1594" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1595" class="blob-num js-line-number" data-line-number="1595"></td>
>         <td id="LC1595" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// figure out how many mutations and which sites, including possibility for repeat and back mutation</span></td>
>       </tr>
>       <tr>
>         <td id="L1596" class="blob-num js-line-number" data-line-number="1596"></td>
>         <td id="LC1596" class="blob-code blob-code-inner js-file-line">    nNewMutations = <span class="pl-c1">gsl_ran_poisson</span>( rngState, (GENOME_MU * ((<span class="pl-k">double</span>) totalOffspring)) );</td>
>       </tr>
>       <tr>
>         <td id="L1597" class="blob-num js-line-number" data-line-number="1597"></td>
>         <td id="LC1597" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> mutatedLoci[nNewMutations];</td>
>       </tr>
>       <tr>
>         <td id="L1598" class="blob-num js-line-number" data-line-number="1598"></td>
>         <td id="LC1598" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">gsl_ran_choose</span>( rngState, mutatedLoci, nNewMutations, siteIndexes, nSITES, <span class="pl-k">sizeof</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1599" class="blob-num js-line-number" data-line-number="1599"></td>
>         <td id="LC1599" class="blob-code blob-code-inner js-file-line">    maxSitesInOffspring = nTrackedSitesInParents + nNewMutations;</td>
>       </tr>
>       <tr>
>         <td id="L1600" class="blob-num js-line-number" data-line-number="1600"></td>
>         <td id="LC1600" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">short</span> <span class="pl-k">int</span> offsp_lociStates[maxSitesInOffspring];</td>
>       </tr>
>       <tr>
>         <td id="L1601" class="blob-num js-line-number" data-line-number="1601"></td>
>         <td id="LC1601" class="blob-code blob-code-inner js-file-line">    offsp_SiteIndexes = (<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( maxSitesInOffspring * <span class="pl-k">sizeof</span>( <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> ) );</td>
>       </tr>
>       <tr>
>         <td id="L1602" class="blob-num js-line-number" data-line-number="1602"></td>
>         <td id="LC1602" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1603" class="blob-num js-line-number" data-line-number="1603"></td>
>         <td id="LC1603" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// determine which sites will need to be tracked among offspring</span></td>
>       </tr>
>       <tr>
>         <td id="L1604" class="blob-num js-line-number" data-line-number="1604"></td>
>         <td id="LC1604" class="blob-code blob-code-inner js-file-line">    nSitesInOffspring = <span class="pl-c1">figureOutOffspringGenomeSites</span>( offsp_SiteIndexes, offsp_lociStates, nNewMutations, mutatedLoci );</td>
>       </tr>
>       <tr>
>         <td id="L1605" class="blob-num js-line-number" data-line-number="1605"></td>
>         <td id="LC1605" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1606" class="blob-num js-line-number" data-line-number="1606"></td>
>         <td id="LC1606" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// debug</span></td>
>       </tr>
>       <tr>
>         <td id="L1607" class="blob-num js-line-number" data-line-number="1607"></td>
>         <td id="LC1607" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//printf(&quot;\nreproduction: time, nTrackedSitesInParents, nSitesInOffspring, nNewMutations, N\n\t%li\t%llu\t%li\t%li\t%li&quot;, t, nTrackedSitesInParents, nSitesInOffspring, nNewMutations, N);</span></td>
>       </tr>
>       <tr>
>         <td id="L1608" class="blob-num js-line-number" data-line-number="1608"></td>
>         <td id="LC1608" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1609" class="blob-num js-line-number" data-line-number="1609"></td>
>         <td id="LC1609" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// make convenient arrays for choosing parents</span></td>
>       </tr>
>       <tr>
>         <td id="L1610" class="blob-num js-line-number" data-line-number="1610"></td>
>         <td id="LC1610" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">makeDemesIndexes</span>(individualsInDeme); <span class="pl-c">// this is instead of doing a sort; maybe doing a sort will turn out to be better???</span></td>
>       </tr>
>       <tr>
>         <td id="L1611" class="blob-num js-line-number" data-line-number="1611"></td>
>         <td id="LC1611" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( INCLUDE_SELECTION )</td>
>       </tr>
>       <tr>
>         <td id="L1612" class="blob-num js-line-number" data-line-number="1612"></td>
>         <td id="LC1612" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">makeCumulativeFitnessNumLines</span>( fitnessValues, fitnessNumLines, individualsInDeme );</td>
>       </tr>
>       <tr>
>         <td id="L1613" class="blob-num js-line-number" data-line-number="1613"></td>
>         <td id="LC1613" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1614" class="blob-num js-line-number" data-line-number="1614"></td>
>         <td id="LC1614" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// now, get a memory block to use to store the offspring genotypes</span></td>
>       </tr>
>       <tr>
>         <td id="L1615" class="blob-num js-line-number" data-line-number="1615"></td>
>         <td id="LC1615" class="blob-code blob-code-inner js-file-line">    offspringGTs = <span class="pl-c1">checkMemoryBlocks</span>(totalOffspring, nSitesInOffspring);</td>
>       </tr>
>       <tr>
>         <td id="L1616" class="blob-num js-line-number" data-line-number="1616"></td>
>         <td id="LC1616" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// choose parents and make offspring</span></td>
>       </tr>
>       <tr>
>         <td id="L1617" class="blob-num js-line-number" data-line-number="1617"></td>
>         <td id="LC1617" class="blob-code blob-code-inner js-file-line">    sipt = offspringGTs; <span class="pl-c">// pointer to beginning of offspring genotype array</span></td>
>       </tr>
>       <tr>
>         <td id="L1618" class="blob-num js-line-number" data-line-number="1618"></td>
>         <td id="LC1618" class="blob-code blob-code-inner js-file-line">    dpt = fitnessNumLines; <span class="pl-c">// pointer to first number line</span></td>
>       </tr>
>       <tr>
>         <td id="L1619" class="blob-num js-line-number" data-line-number="1619"></td>
>         <td id="LC1619" class="blob-code blob-code-inner js-file-line">    locpt = offspringLocations; <span class="pl-c">// pointer to location of first individual</span></td>
>       </tr>
>       <tr>
>         <td id="L1620" class="blob-num js-line-number" data-line-number="1620"></td>
>         <td id="LC1620" class="blob-code blob-code-inner js-file-line">    lipt = individualsInDeme;</td>
>       </tr>
>       <tr>
>         <td id="L1621" class="blob-num js-line-number" data-line-number="1621"></td>
>         <td id="LC1621" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">memset</span>( alleleCounts, <span class="pl-c1">0</span>, nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1622" class="blob-num js-line-number" data-line-number="1622"></td>
>         <td id="LC1622" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1623" class="blob-num js-line-number" data-line-number="1623"></td>
>         <td id="LC1623" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// some debug code</span></td>
>       </tr>
>       <tr>
>         <td id="L1624" class="blob-num js-line-number" data-line-number="1624"></td>
>         <td id="LC1624" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/*</span></td>
>       </tr>
>       <tr>
>         <td id="L1625" class="blob-num js-line-number" data-line-number="1625"></td>
>         <td id="LC1625" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    if ( t &gt;= 10 ) {</span></td>
>       </tr>
>       <tr>
>         <td id="L1626" class="blob-num js-line-number" data-line-number="1626"></td>
>         <td id="LC1626" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        printf(&quot;\nTracked sites in parents (%llu) @ t = %li:\n&quot;, nTrackedSitesInParents, t);</span></td>
>       </tr>
>       <tr>
>         <td id="L1627" class="blob-num js-line-number" data-line-number="1627"></td>
>         <td id="LC1627" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        for ( i = 0; i &lt; nTrackedSitesInParents; i++ )</span></td>
>       </tr>
>       <tr>
>         <td id="L1628" class="blob-num js-line-number" data-line-number="1628"></td>
>         <td id="LC1628" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            printf(&quot;%llu\t&quot;, parentalTrackedSiteIndexes[i]);</span></td>
>       </tr>
>       <tr>
>         <td id="L1629" class="blob-num js-line-number" data-line-number="1629"></td>
>         <td id="LC1629" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        </span></td>
>       </tr>
>       <tr>
>         <td id="L1630" class="blob-num js-line-number" data-line-number="1630"></td>
>         <td id="LC1630" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        printf(&quot;\n\nTSites in offspring (%li):\n&quot;, nSitesInOffspring);</span></td>
>       </tr>
>       <tr>
>         <td id="L1631" class="blob-num js-line-number" data-line-number="1631"></td>
>         <td id="LC1631" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        for ( i = 0; i &lt; nSitesInOffspring; i++ )</span></td>
>       </tr>
>       <tr>
>         <td id="L1632" class="blob-num js-line-number" data-line-number="1632"></td>
>         <td id="LC1632" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            printf(&quot;%llu\t&quot;, offsp_SiteIndexes[i]);</span></td>
>       </tr>
>       <tr>
>         <td id="L1633" class="blob-num js-line-number" data-line-number="1633"></td>
>         <td id="LC1633" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        printf(&quot;\n\n&quot;);</span></td>
>       </tr>
>       <tr>
>         <td id="L1634" class="blob-num js-line-number" data-line-number="1634"></td>
>         <td id="LC1634" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    }</span></td>
>       </tr>
>       <tr>
>         <td id="L1635" class="blob-num js-line-number" data-line-number="1635"></td>
>         <td id="LC1635" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
>       </tr>
>       <tr>
>         <td id="L1636" class="blob-num js-line-number" data-line-number="1636"></td>
>         <td id="LC1636" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1637" class="blob-num js-line-number" data-line-number="1637"></td>
>         <td id="LC1637" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1638" class="blob-num js-line-number" data-line-number="1638"></td>
>         <td id="LC1638" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1639" class="blob-num js-line-number" data-line-number="1639"></td>
>         <td id="LC1639" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( pop = <span class="pl-c1">0</span>; pop &lt; nPOPULATIONS; pop++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1640" class="blob-num js-line-number" data-line-number="1640"></td>
>         <td id="LC1640" class="blob-code blob-code-inner js-file-line">        noff = noffspring[pop];</td>
>       </tr>
>       <tr>
>         <td id="L1641" class="blob-num js-line-number" data-line-number="1641"></td>
>         <td id="LC1641" class="blob-code blob-code-inner js-file-line">        nhere = abundances[pop];</td>
>       </tr>
>       <tr>
>         <td id="L1642" class="blob-num js-line-number" data-line-number="1642"></td>
>         <td id="LC1642" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( noff &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1643" class="blob-num js-line-number" data-line-number="1643"></td>
>         <td id="LC1643" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; noff; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1644" class="blob-num js-line-number" data-line-number="1644"></td>
>         <td id="LC1644" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( INCLUDE_SELECTION )</td>
>       </tr>
>       <tr>
>         <td id="L1645" class="blob-num js-line-number" data-line-number="1645"></td>
>         <td id="LC1645" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">chooseParents</span>(&amp;mommy, &amp;daddy, dpt, nhere);</td>
>       </tr>
>       <tr>
>         <td id="L1646" class="blob-num js-line-number" data-line-number="1646"></td>
>         <td id="LC1646" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L1647" class="blob-num js-line-number" data-line-number="1647"></td>
>         <td id="LC1647" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">chooseParentsAtRandom</span>(&amp;mommy, &amp;daddy, randomNumberLine, nhere);</td>
>       </tr>
>       <tr>
>         <td id="L1648" class="blob-num js-line-number" data-line-number="1648"></td>
>         <td id="LC1648" class="blob-code blob-code-inner js-file-line">                momIndex = *(lipt + mommy);</td>
>       </tr>
>       <tr>
>         <td id="L1649" class="blob-num js-line-number" data-line-number="1649"></td>
>         <td id="LC1649" class="blob-code blob-code-inner js-file-line">                dadIndex = *(lipt + daddy);</td>
>       </tr>
>       <tr>
>         <td id="L1650" class="blob-num js-line-number" data-line-number="1650"></td>
>         <td id="LC1650" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">makeOneOffspring</span>(momIndex, dadIndex, sipt, nSitesInOffspring, offsp_SiteIndexes, offsp_lociStates);</td>
>       </tr>
>       <tr>
>         <td id="L1651" class="blob-num js-line-number" data-line-number="1651"></td>
>         <td id="LC1651" class="blob-code blob-code-inner js-file-line">                *locpt = pop;</td>
>       </tr>
>       <tr>
>         <td id="L1652" class="blob-num js-line-number" data-line-number="1652"></td>
>         <td id="LC1652" class="blob-code blob-code-inner js-file-line">                locpt++;</td>
>       </tr>
>       <tr>
>         <td id="L1653" class="blob-num js-line-number" data-line-number="1653"></td>
>         <td id="LC1653" class="blob-code blob-code-inner js-file-line">                sipt += (PLOIDY * nSitesInOffspring);</td>
>       </tr>
>       <tr>
>         <td id="L1654" class="blob-num js-line-number" data-line-number="1654"></td>
>         <td id="LC1654" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1655" class="blob-num js-line-number" data-line-number="1655"></td>
>         <td id="LC1655" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1656" class="blob-num js-line-number" data-line-number="1656"></td>
>         <td id="LC1656" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( nhere &gt; <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1657" class="blob-num js-line-number" data-line-number="1657"></td>
>         <td id="LC1657" class="blob-code blob-code-inner js-file-line">            dpt += nhere;</td>
>       </tr>
>       <tr>
>         <td id="L1658" class="blob-num js-line-number" data-line-number="1658"></td>
>         <td id="LC1658" class="blob-code blob-code-inner js-file-line">            lipt += nhere;</td>
>       </tr>
>       <tr>
>         <td id="L1659" class="blob-num js-line-number" data-line-number="1659"></td>
>         <td id="LC1659" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1660" class="blob-num js-line-number" data-line-number="1660"></td>
>         <td id="LC1660" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1661" class="blob-num js-line-number" data-line-number="1661"></td>
>         <td id="LC1661" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1662" class="blob-num js-line-number" data-line-number="1662"></td>
>         <td id="LC1662" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">putInMutations</span>( offspringGTs, offsp_lociStates, offsp_SiteIndexes, nNewMutations, totalOffspring, nSitesInOffspring );</td>
>       </tr>
>       <tr>
>         <td id="L1663" class="blob-num js-line-number" data-line-number="1663"></td>
>         <td id="LC1663" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1664" class="blob-num js-line-number" data-line-number="1664"></td>
>         <td id="LC1664" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// switch the genotype pointer to the offspring&#39;s</span></td>
>       </tr>
>       <tr>
>         <td id="L1665" class="blob-num js-line-number" data-line-number="1665"></td>
>         <td id="LC1665" class="blob-code blob-code-inner js-file-line">    gts = offspringGTs;</td>
>       </tr>
>       <tr>
>         <td id="L1666" class="blob-num js-line-number" data-line-number="1666"></td>
>         <td id="LC1666" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( currentBlock )</td>
>       </tr>
>       <tr>
>         <td id="L1667" class="blob-num js-line-number" data-line-number="1667"></td>
>         <td id="LC1667" class="blob-code blob-code-inner js-file-line">        currentBlock = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1668" class="blob-num js-line-number" data-line-number="1668"></td>
>         <td id="LC1668" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L1669" class="blob-num js-line-number" data-line-number="1669"></td>
>         <td id="LC1669" class="blob-code blob-code-inner js-file-line">        currentBlock = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1670" class="blob-num js-line-number" data-line-number="1670"></td>
>         <td id="LC1670" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1671" class="blob-num js-line-number" data-line-number="1671"></td>
>         <td id="LC1671" class="blob-code blob-code-inner js-file-line">        abundances[i] = noffspring[i];</td>
>       </tr>
>       <tr>
>         <td id="L1672" class="blob-num js-line-number" data-line-number="1672"></td>
>         <td id="LC1672" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1673" class="blob-num js-line-number" data-line-number="1673"></td>
>         <td id="LC1673" class="blob-code blob-code-inner js-file-line">    N = totalOffspring;</td>
>       </tr>
>       <tr>
>         <td id="L1674" class="blob-num js-line-number" data-line-number="1674"></td>
>         <td id="LC1674" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1675" class="blob-num js-line-number" data-line-number="1675"></td>
>         <td id="LC1675" class="blob-code blob-code-inner js-file-line">    ullipt = offsp_SiteIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L1676" class="blob-num js-line-number" data-line-number="1676"></td>
>         <td id="LC1676" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">memset</span>( sitesStatuses, LOCUS_STATUS_INACTIVE, nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">short</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1677" class="blob-num js-line-number" data-line-number="1677"></td>
>         <td id="LC1677" class="blob-code blob-code-inner js-file-line">    nSelectedSites = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1678" class="blob-num js-line-number" data-line-number="1678"></td>
>         <td id="LC1678" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nSitesInOffspring; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1679" class="blob-num js-line-number" data-line-number="1679"></td>
>         <td id="LC1679" class="blob-code blob-code-inner js-file-line">        locus = *ullipt;</td>
>       </tr>
>       <tr>
>         <td id="L1680" class="blob-num js-line-number" data-line-number="1680"></td>
>         <td id="LC1680" class="blob-code blob-code-inner js-file-line">        *(sitesStatuses + locus) = LOCUS_STATUS_TRACKED_IN_PARENTS;</td>
>       </tr>
>       <tr>
>         <td id="L1681" class="blob-num js-line-number" data-line-number="1681"></td>
>         <td id="LC1681" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( *(siteClassifications + locus) &gt; SITE_CLASS_NEUTRAL )</td>
>       </tr>
>       <tr>
>         <td id="L1682" class="blob-num js-line-number" data-line-number="1682"></td>
>         <td id="LC1682" class="blob-code blob-code-inner js-file-line">            nSelectedSites++;</td>
>       </tr>
>       <tr>
>         <td id="L1683" class="blob-num js-line-number" data-line-number="1683"></td>
>         <td id="LC1683" class="blob-code blob-code-inner js-file-line">        ullipt++;</td>
>       </tr>
>       <tr>
>         <td id="L1684" class="blob-num js-line-number" data-line-number="1684"></td>
>         <td id="LC1684" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1685" class="blob-num js-line-number" data-line-number="1685"></td>
>         <td id="LC1685" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1686" class="blob-num js-line-number" data-line-number="1686"></td>
>         <td id="LC1686" class="blob-code blob-code-inner js-file-line">    ullipt = alleleCounts;</td>
>       </tr>
>       <tr>
>         <td id="L1687" class="blob-num js-line-number" data-line-number="1687"></td>
>         <td id="LC1687" class="blob-code blob-code-inner js-file-line">    sipt = sitesStatuses;</td>
>       </tr>
>       <tr>
>         <td id="L1688" class="blob-num js-line-number" data-line-number="1688"></td>
>         <td id="LC1688" class="blob-code blob-code-inner js-file-line">    driftLosses = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1689" class="blob-num js-line-number" data-line-number="1689"></td>
>         <td id="LC1689" class="blob-code blob-code-inner js-file-line">    actuallyVariable = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1690" class="blob-num js-line-number" data-line-number="1690"></td>
>         <td id="LC1690" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( locus = <span class="pl-c1">0</span>; locus &lt; nSITES; locus++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1691" class="blob-num js-line-number" data-line-number="1691"></td>
>         <td id="LC1691" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( *ullipt &gt; <span class="pl-c1">0</span> &amp;&amp; *ullipt &lt; ( PLOIDY * N ) ) {</td>
>       </tr>
>       <tr>
>         <td id="L1692" class="blob-num js-line-number" data-line-number="1692"></td>
>         <td id="LC1692" class="blob-code blob-code-inner js-file-line">            *sipt = LOCUS_STATUS_VARIABLE_IN_PARENTS;</td>
>       </tr>
>       <tr>
>         <td id="L1693" class="blob-num js-line-number" data-line-number="1693"></td>
>         <td id="LC1693" class="blob-code blob-code-inner js-file-line">            actuallyVariable++;</td>
>       </tr>
>       <tr>
>         <td id="L1694" class="blob-num js-line-number" data-line-number="1694"></td>
>         <td id="LC1694" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1695" class="blob-num js-line-number" data-line-number="1695"></td>
>         <td id="LC1695" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( *sipt == LOCUS_STATUS_TRACKED_IN_PARENTS ) {</td>
>       </tr>
>       <tr>
>         <td id="L1696" class="blob-num js-line-number" data-line-number="1696"></td>
>         <td id="LC1696" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1697" class="blob-num js-line-number" data-line-number="1697"></td>
>         <td id="LC1697" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Locus <span class="pl-c1">%llu</span> lost in time step <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, locus, t);</td>
>       </tr>
>       <tr>
>         <td id="L1698" class="blob-num js-line-number" data-line-number="1698"></td>
>         <td id="LC1698" class="blob-code blob-code-inner js-file-line">            driftLosses++;</td>
>       </tr>
>       <tr>
>         <td id="L1699" class="blob-num js-line-number" data-line-number="1699"></td>
>         <td id="LC1699" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1700" class="blob-num js-line-number" data-line-number="1700"></td>
>         <td id="LC1700" class="blob-code blob-code-inner js-file-line">        sipt++;</td>
>       </tr>
>       <tr>
>         <td id="L1701" class="blob-num js-line-number" data-line-number="1701"></td>
>         <td id="LC1701" class="blob-code blob-code-inner js-file-line">        ullipt++;</td>
>       </tr>
>       <tr>
>         <td id="L1702" class="blob-num js-line-number" data-line-number="1702"></td>
>         <td id="LC1702" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1703" class="blob-num js-line-number" data-line-number="1703"></td>
>         <td id="LC1703" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1704" class="blob-num js-line-number" data-line-number="1704"></td>
>         <td id="LC1704" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( (driftLosses + actuallyVariable) != nSitesInOffspring ) {</td>
>       </tr>
>       <tr>
>         <td id="L1705" class="blob-num js-line-number" data-line-number="1705"></td>
>         <td id="LC1705" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in reproduction():<span class="pl-cce">\n\t</span>(driftLosses (<span class="pl-c1">%li</span>) + actuallyVariable (<span class="pl-c1">%li</span>)) != nSitesInOffspring (<span class="pl-c1">%li</span>) )<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, driftLosses, actuallyVariable, nSitesInOffspring);</td>
>       </tr>
>       <tr>
>         <td id="L1706" class="blob-num js-line-number" data-line-number="1706"></td>
>         <td id="LC1706" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1707" class="blob-num js-line-number" data-line-number="1707"></td>
>         <td id="LC1707" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1708" class="blob-num js-line-number" data-line-number="1708"></td>
>         <td id="LC1708" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1709" class="blob-num js-line-number" data-line-number="1709"></td>
>         <td id="LC1709" class="blob-code blob-code-inner js-file-line">    nTrackedSitesInParents = nSitesInOffspring;</td>
>       </tr>
>       <tr>
>         <td id="L1710" class="blob-num js-line-number" data-line-number="1710"></td>
>         <td id="LC1710" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1711" class="blob-num js-line-number" data-line-number="1711"></td>
>         <td id="LC1711" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(locations);</td>
>       </tr>
>       <tr>
>         <td id="L1712" class="blob-num js-line-number" data-line-number="1712"></td>
>         <td id="LC1712" class="blob-code blob-code-inner js-file-line">    locations = offspringLocations;</td>
>       </tr>
>       <tr>
>         <td id="L1713" class="blob-num js-line-number" data-line-number="1713"></td>
>         <td id="LC1713" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1714" class="blob-num js-line-number" data-line-number="1714"></td>
>         <td id="LC1714" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(parentalTrackedSiteIndexes);</td>
>       </tr>
>       <tr>
>         <td id="L1715" class="blob-num js-line-number" data-line-number="1715"></td>
>         <td id="LC1715" class="blob-code blob-code-inner js-file-line">    parentalTrackedSiteIndexes = offsp_SiteIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L1716" class="blob-num js-line-number" data-line-number="1716"></td>
>         <td id="LC1716" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1717" class="blob-num js-line-number" data-line-number="1717"></td>
>         <td id="LC1717" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// need to switch over/record nTrackedSitesInParents and variable site indexes</span></td>
>       </tr>
>       <tr>
>         <td id="L1718" class="blob-num js-line-number" data-line-number="1718"></td>
>         <td id="LC1718" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// memset all isVariableSite to zero</span></td>
>       </tr>
>       <tr>
>         <td id="L1719" class="blob-num js-line-number" data-line-number="1719"></td>
>         <td id="LC1719" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// then reset those variable ones to 1</span></td>
>       </tr>
>       <tr>
>         <td id="L1720" class="blob-num js-line-number" data-line-number="1720"></td>
>         <td id="LC1720" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// also copy over offspring locations</span></td>
>       </tr>
>       <tr>
>         <td id="L1721" class="blob-num js-line-number" data-line-number="1721"></td>
>         <td id="LC1721" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1722" class="blob-num js-line-number" data-line-number="1722"></td>
>         <td id="LC1722" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//printf(&quot;\nWarning: reproduction() not finished yet!\n&quot;);</span></td>
>       </tr>
>       <tr>
>         <td id="L1723" class="blob-num js-line-number" data-line-number="1723"></td>
>         <td id="LC1723" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1724" class="blob-num js-line-number" data-line-number="1724"></td>
>         <td id="LC1724" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//exit(0);</span></td>
>       </tr>
>       <tr>
>         <td id="L1725" class="blob-num js-line-number" data-line-number="1725"></td>
>         <td id="LC1725" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L1726" class="blob-num js-line-number" data-line-number="1726"></td>
>         <td id="LC1726" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1727" class="blob-num js-line-number" data-line-number="1727"></td>
>         <td id="LC1727" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1728" class="blob-num js-line-number" data-line-number="1728"></td>
>         <td id="LC1728" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">setUpGenome</span>(<span class="pl-k">void</span>)</td>
>       </tr>
>       <tr>
>         <td id="L1729" class="blob-num js-line-number" data-line-number="1729"></td>
>         <td id="LC1729" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L1730" class="blob-num js-line-number" data-line-number="1730"></td>
>         <td id="LC1730" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> theta, expectedSegSites, *expectedFreq, *dpt, value;</td>
>       </tr>
>       <tr>
>         <td id="L1731" class="blob-num js-line-number" data-line-number="1731"></td>
>         <td id="LC1731" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> foo, *ullpt, sitesPerLinkageGroup, lgCount;</td>
>       </tr>
>       <tr>
>         <td id="L1732" class="blob-num js-line-number" data-line-number="1732"></td>
>         <td id="LC1732" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">long</span> <span class="pl-k">int</span> i;</td>
>       </tr>
>       <tr>
>         <td id="L1733" class="blob-num js-line-number" data-line-number="1733"></td>
>         <td id="LC1733" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> dumi, currentLinkageGroup;</td>
>       </tr>
>       <tr>
>         <td id="L1734" class="blob-num js-line-number" data-line-number="1734"></td>
>         <td id="LC1734" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">char</span> str[<span class="pl-c1">80</span>];</td>
>       </tr>
>       <tr>
>         <td id="L1735" class="blob-num js-line-number" data-line-number="1735"></td>
>         <td id="LC1735" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">_Bool</span> firstOne;</td>
>       </tr>
>       <tr>
>         <td id="L1736" class="blob-num js-line-number" data-line-number="1736"></td>
>         <td id="LC1736" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1737" class="blob-num js-line-number" data-line-number="1737"></td>
>         <td id="LC1737" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// set up standing neutral variation using classical pop. gen. expectations</span></td>
>       </tr>
>       <tr>
>         <td id="L1738" class="blob-num js-line-number" data-line-number="1738"></td>
>         <td id="LC1738" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// theta is the poulation mutation parameter from coalescent theory, specifically</span></td>
>       </tr>
>       <tr>
>         <td id="L1739" class="blob-num js-line-number" data-line-number="1739"></td>
>         <td id="LC1739" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// here from Wakeley&#39;s book, p. 92, &quot;... twice the expected number of mutations</span></td>
>       </tr>
>       <tr>
>         <td id="L1740" class="blob-num js-line-number" data-line-number="1740"></td>
>         <td id="LC1740" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// introduced into the population each generation ... &quot;</span></td>
>       </tr>
>       <tr>
>         <td id="L1741" class="blob-num js-line-number" data-line-number="1741"></td>
>         <td id="LC1741" class="blob-code blob-code-inner js-file-line">    foo = N * PLOIDY * nSITES;</td>
>       </tr>
>       <tr>
>         <td id="L1742" class="blob-num js-line-number" data-line-number="1742"></td>
>         <td id="LC1742" class="blob-code blob-code-inner js-file-line">    theta = <span class="pl-c1">2.0</span> * MU * ((<span class="pl-k">double</span>) foo);</td>
>       </tr>
>       <tr>
>         <td id="L1743" class="blob-num js-line-number" data-line-number="1743"></td>
>         <td id="LC1743" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1744" class="blob-num js-line-number" data-line-number="1744"></td>
>         <td id="LC1744" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// now the expected number of segregating sites, Wakeley, p. 97, eqn. 4.7:</span></td>
>       </tr>
>       <tr>
>         <td id="L1745" class="blob-num js-line-number" data-line-number="1745"></td>
>         <td id="LC1745" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// note for diploid, we have 2N sequences in the population, so the sum is from 1 to 2N-1;</span></td>
>       </tr>
>       <tr>
>         <td id="L1746" class="blob-num js-line-number" data-line-number="1746"></td>
>         <td id="LC1746" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// the total number of expected segregating sites is the sum of the expected number of sites with each possible</span></td>
>       </tr>
>       <tr>
>         <td id="L1747" class="blob-num js-line-number" data-line-number="1747"></td>
>         <td id="LC1747" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// number of copies of a derived allele</span></td>
>       </tr>
>       <tr>
>         <td id="L1748" class="blob-num js-line-number" data-line-number="1748"></td>
>         <td id="LC1748" class="blob-code blob-code-inner js-file-line">    expectedFreq = (<span class="pl-k">double</span> *) <span class="pl-c1">malloc</span>( PLOIDY * N * <span class="pl-k">sizeof</span>(<span class="pl-k">double</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1749" class="blob-num js-line-number" data-line-number="1749"></td>
>         <td id="LC1749" class="blob-code blob-code-inner js-file-line">    *expectedFreq = <span class="pl-c1">0.0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1750" class="blob-num js-line-number" data-line-number="1750"></td>
>         <td id="LC1750" class="blob-code blob-code-inner js-file-line">    dpt = expectedFreq + <span class="pl-c1">1</span>; <span class="pl-c">// start with expected number of sites having 1 copy (not with zero copies)</span></td>
>       </tr>
>       <tr>
>         <td id="L1751" class="blob-num js-line-number" data-line-number="1751"></td>
>         <td id="LC1751" class="blob-code blob-code-inner js-file-line">    expectedSegSites = <span class="pl-c1">0.0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1752" class="blob-num js-line-number" data-line-number="1752"></td>
>         <td id="LC1752" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; (PLOIDY * N); i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1753" class="blob-num js-line-number" data-line-number="1753"></td>
>         <td id="LC1753" class="blob-code blob-code-inner js-file-line">        expectedSegSites += <span class="pl-c1">1.0</span> / ((<span class="pl-k">double</span>) i); <span class="pl-c">// summation equation; below sum is multiplied by theta</span></td>
>       </tr>
>       <tr>
>         <td id="L1754" class="blob-num js-line-number" data-line-number="1754"></td>
>         <td id="LC1754" class="blob-code blob-code-inner js-file-line">        *dpt = (*(dpt - <span class="pl-c1">1</span>)) + theta / ((<span class="pl-k">double</span>) i); <span class="pl-c">// equation from Wakeley&#39;s book (based on Fu 1995); build cumulative vector</span></td>
>       </tr>
>       <tr>
>         <td id="L1755" class="blob-num js-line-number" data-line-number="1755"></td>
>         <td id="LC1755" class="blob-code blob-code-inner js-file-line">        dpt++;</td>
>       </tr>
>       <tr>
>         <td id="L1756" class="blob-num js-line-number" data-line-number="1756"></td>
>         <td id="LC1756" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1757" class="blob-num js-line-number" data-line-number="1757"></td>
>         <td id="LC1757" class="blob-code blob-code-inner js-file-line">    expectedSegSites = expectedSegSites * theta;</td>
>       </tr>
>       <tr>
>         <td id="L1758" class="blob-num js-line-number" data-line-number="1758"></td>
>         <td id="LC1758" class="blob-code blob-code-inner js-file-line">    nTrackedSitesInParents = (<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) (expectedSegSites + <span class="pl-c1">0.5</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1759" class="blob-num js-line-number" data-line-number="1759"></td>
>         <td id="LC1759" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1760" class="blob-num js-line-number" data-line-number="1760"></td>
>         <td id="LC1760" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1761" class="blob-num js-line-number" data-line-number="1761"></td>
>         <td id="LC1761" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// now to choose the sites that are variable and their frequencies</span></td>
>       </tr>
>       <tr>
>         <td id="L1762" class="blob-num js-line-number" data-line-number="1762"></td>
>         <td id="LC1762" class="blob-code blob-code-inner js-file-line">    siteIndexes = (<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1763" class="blob-num js-line-number" data-line-number="1763"></td>
>         <td id="LC1763" class="blob-code blob-code-inner js-file-line">    parentalTrackedSiteIndexes = (<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( nTrackedSitesInParents * <span class="pl-k">sizeof</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1764" class="blob-num js-line-number" data-line-number="1764"></td>
>         <td id="LC1764" class="blob-code blob-code-inner js-file-line">    ullpt = siteIndexes;</td>
>       </tr>
>       <tr>
>         <td id="L1765" class="blob-num js-line-number" data-line-number="1765"></td>
>         <td id="LC1765" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( foo = <span class="pl-c1">0</span>; foo &lt; nSITES; foo++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1766" class="blob-num js-line-number" data-line-number="1766"></td>
>         <td id="LC1766" class="blob-code blob-code-inner js-file-line">        *ullpt = foo;</td>
>       </tr>
>       <tr>
>         <td id="L1767" class="blob-num js-line-number" data-line-number="1767"></td>
>         <td id="LC1767" class="blob-code blob-code-inner js-file-line">        ullpt++;</td>
>       </tr>
>       <tr>
>         <td id="L1768" class="blob-num js-line-number" data-line-number="1768"></td>
>         <td id="LC1768" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1769" class="blob-num js-line-number" data-line-number="1769"></td>
>         <td id="LC1769" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1770" class="blob-num js-line-number" data-line-number="1770"></td>
>         <td id="LC1770" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// use gsl ran choose to pick sites at random to be standing neutral variation</span></td>
>       </tr>
>       <tr>
>         <td id="L1771" class="blob-num js-line-number" data-line-number="1771"></td>
>         <td id="LC1771" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">gsl_ran_choose</span>( rngState, parentalTrackedSiteIndexes, nTrackedSitesInParents, siteIndexes, nSITES, <span class="pl-k">sizeof</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1772" class="blob-num js-line-number" data-line-number="1772"></td>
>         <td id="LC1772" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// variable site indexes now stores the ordered indexes of sites that should have segregating variants</span></td>
>       </tr>
>       <tr>
>         <td id="L1773" class="blob-num js-line-number" data-line-number="1773"></td>
>         <td id="LC1773" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// siteIndexes just stores the indexes [0..nSITES-1], which is useful for random choices like this one, so we keep it</span></td>
>       </tr>
>       <tr>
>         <td id="L1774" class="blob-num js-line-number" data-line-number="1774"></td>
>         <td id="LC1774" class="blob-code blob-code-inner js-file-line">    sitesStatuses = (<span class="pl-k">short</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">short</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1775" class="blob-num js-line-number" data-line-number="1775"></td>
>         <td id="LC1775" class="blob-code blob-code-inner js-file-line">    siteClassifications = (<span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1776" class="blob-num js-line-number" data-line-number="1776"></td>
>         <td id="LC1776" class="blob-code blob-code-inner js-file-line">    linkageGroupMembership = (<span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1777" class="blob-num js-line-number" data-line-number="1777"></td>
>         <td id="LC1777" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">memset</span>( sitesStatuses, LOCUS_STATUS_INACTIVE, (nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">short</span> <span class="pl-k">int</span>)) );</td>
>       </tr>
>       <tr>
>         <td id="L1778" class="blob-num js-line-number" data-line-number="1778"></td>
>         <td id="LC1778" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( foo = <span class="pl-c1">0</span>; foo &lt; nTrackedSitesInParents; foo++ )</td>
>       </tr>
>       <tr>
>         <td id="L1779" class="blob-num js-line-number" data-line-number="1779"></td>
>         <td id="LC1779" class="blob-code blob-code-inner js-file-line">        *(sitesStatuses + (parentalTrackedSiteIndexes[foo])) = LOCUS_STATUS_VARIABLE_IN_PARENTS;</td>
>       </tr>
>       <tr>
>         <td id="L1780" class="blob-num js-line-number" data-line-number="1780"></td>
>         <td id="LC1780" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// sitesStatuses stores the same information as parentalTrackedSiteIndexes, but in a different form; both are useful</span></td>
>       </tr>
>       <tr>
>         <td id="L1781" class="blob-num js-line-number" data-line-number="1781"></td>
>         <td id="LC1781" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1782" class="blob-num js-line-number" data-line-number="1782"></td>
>         <td id="LC1782" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// now randomly assign frequencies</span></td>
>       </tr>
>       <tr>
>         <td id="L1783" class="blob-num js-line-number" data-line-number="1783"></td>
>         <td id="LC1783" class="blob-code blob-code-inner js-file-line">    alleleFrequencies = (<span class="pl-k">double</span> *) <span class="pl-c1">malloc</span>( nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">double</span>)); <span class="pl-c">// frequencies (0 to 1) by site</span></td>
>       </tr>
>       <tr>
>         <td id="L1784" class="blob-num js-line-number" data-line-number="1784"></td>
>         <td id="LC1784" class="blob-code blob-code-inner js-file-line">    alleleCounts = (<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>));</td>
>       </tr>
>       <tr>
>         <td id="L1785" class="blob-num js-line-number" data-line-number="1785"></td>
>         <td id="LC1785" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">memset</span>( alleleCounts, <span class="pl-c1">0</span>, nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1786" class="blob-num js-line-number" data-line-number="1786"></td>
>         <td id="LC1786" class="blob-code blob-code-inner js-file-line">    SFScounts = (<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( PLOIDY * N * <span class="pl-k">sizeof</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1787" class="blob-num js-line-number" data-line-number="1787"></td>
>         <td id="LC1787" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setUpInitialAlleleFrequencies</span>(expectedFreq);</td>
>       </tr>
>       <tr>
>         <td id="L1788" class="blob-num js-line-number" data-line-number="1788"></td>
>         <td id="LC1788" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1789" class="blob-num js-line-number" data-line-number="1789"></td>
>         <td id="LC1789" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// pick allele frequencies using the Ewens sampling formula from Wakeley&#39;s book.</span></td>
>       </tr>
>       <tr>
>         <td id="L1790" class="blob-num js-line-number" data-line-number="1790"></td>
>         <td id="LC1790" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1791" class="blob-num js-line-number" data-line-number="1791"></td>
>         <td id="LC1791" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1792" class="blob-num js-line-number" data-line-number="1792"></td>
>         <td id="LC1792" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1793" class="blob-num js-line-number" data-line-number="1793"></td>
>         <td id="LC1793" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>theta = <span class="pl-c1">%f</span>, segSites = <span class="pl-c1">%llu</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, theta, nTrackedSitesInParents);</td>
>       </tr>
>       <tr>
>         <td id="L1794" class="blob-num js-line-number" data-line-number="1794"></td>
>         <td id="LC1794" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1795" class="blob-num js-line-number" data-line-number="1795"></td>
>         <td id="LC1795" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1796" class="blob-num js-line-number" data-line-number="1796"></td>
>         <td id="LC1796" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// assign site types</span></td>
>       </tr>
>       <tr>
>         <td id="L1797" class="blob-num js-line-number" data-line-number="1797"></td>
>         <td id="LC1797" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> siteProbs[nSITE_CLASSES];</td>
>       </tr>
>       <tr>
>         <td id="L1798" class="blob-num js-line-number" data-line-number="1798"></td>
>         <td id="LC1798" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> siteTypeCounts[nSITE_CLASSES];</td>
>       </tr>
>       <tr>
>         <td id="L1799" class="blob-num js-line-number" data-line-number="1799"></td>
>         <td id="LC1799" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">memset</span>( siteTypeCounts, <span class="pl-c1">0</span>, (nSITE_CLASSES * <span class="pl-k">sizeof</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>)) );</td>
>       </tr>
>       <tr>
>         <td id="L1800" class="blob-num js-line-number" data-line-number="1800"></td>
>         <td id="LC1800" class="blob-code blob-code-inner js-file-line">    selectionCoefficients = (<span class="pl-k">double</span> *) <span class="pl-c1">malloc</span>( nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">double</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L1801" class="blob-num js-line-number" data-line-number="1801"></td>
>         <td id="LC1801" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">memset</span>( selectionCoefficients, <span class="pl-c1">0</span>, (nSITES * <span class="pl-k">sizeof</span>(<span class="pl-k">double</span>)) );</td>
>       </tr>
>       <tr>
>         <td id="L1802" class="blob-num js-line-number" data-line-number="1802"></td>
>         <td id="LC1802" class="blob-code blob-code-inner js-file-line">    siteProbs[<span class="pl-c1">0</span>] = PROBABILITY_SITE_NEUTRAL;</td>
>       </tr>
>       <tr>
>         <td id="L1803" class="blob-num js-line-number" data-line-number="1803"></td>
>         <td id="LC1803" class="blob-code blob-code-inner js-file-line">    siteProbs[<span class="pl-c1">1</span>] = siteProbs[<span class="pl-c1">0</span>] + PROBABILITY_SITE_BGS;</td>
>       </tr>
>       <tr>
>         <td id="L1804" class="blob-num js-line-number" data-line-number="1804"></td>
>         <td id="LC1804" class="blob-code blob-code-inner js-file-line">    siteProbs[<span class="pl-c1">2</span>] = siteProbs[<span class="pl-c1">1</span>] + PROBABILITY_SITE_POS;</td>
>       </tr>
>       <tr>
>         <td id="L1805" class="blob-num js-line-number" data-line-number="1805"></td>
>         <td id="LC1805" class="blob-code blob-code-inner js-file-line">    siteProbs[<span class="pl-c1">3</span>] = <span class="pl-c1">1.0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1806" class="blob-num js-line-number" data-line-number="1806"></td>
>         <td id="LC1806" class="blob-code blob-code-inner js-file-line">    currentLinkageGroup = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1807" class="blob-num js-line-number" data-line-number="1807"></td>
>         <td id="LC1807" class="blob-code blob-code-inner js-file-line">    lgCount = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1808" class="blob-num js-line-number" data-line-number="1808"></td>
>         <td id="LC1808" class="blob-code blob-code-inner js-file-line">    sitesPerLinkageGroup = (<span class="pl-k">int</span>) ( ((<span class="pl-k">double</span>) nSITES) / ((<span class="pl-k">double</span>) nLINKAGE_GROUPS) );</td>
>       </tr>
>       <tr>
>         <td id="L1809" class="blob-num js-line-number" data-line-number="1809"></td>
>         <td id="LC1809" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( foo = <span class="pl-c1">0</span>; foo &lt; nSITES; foo ++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1810" class="blob-num js-line-number" data-line-number="1810"></td>
>         <td id="LC1810" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L1811" class="blob-num js-line-number" data-line-number="1811"></td>
>         <td id="LC1811" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// assign site types and selection coefficients</span></td>
>       </tr>
>       <tr>
>         <td id="L1812" class="blob-num js-line-number" data-line-number="1812"></td>
>         <td id="LC1812" class="blob-code blob-code-inner js-file-line">        value = <span class="pl-c1">gsl_rng_uniform</span>(rngState);</td>
>       </tr>
>       <tr>
>         <td id="L1813" class="blob-num js-line-number" data-line-number="1813"></td>
>         <td id="LC1813" class="blob-code blob-code-inner js-file-line">        i = -<span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1814" class="blob-num js-line-number" data-line-number="1814"></td>
>         <td id="LC1814" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">do</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1815" class="blob-num js-line-number" data-line-number="1815"></td>
>         <td id="LC1815" class="blob-code blob-code-inner js-file-line">            i++;</td>
>       </tr>
>       <tr>
>         <td id="L1816" class="blob-num js-line-number" data-line-number="1816"></td>
>         <td id="LC1816" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">while</span> ( value &gt; siteProbs[i] );</td>
>       </tr>
>       <tr>
>         <td id="L1817" class="blob-num js-line-number" data-line-number="1817"></td>
>         <td id="LC1817" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( i == <span class="pl-c1">0</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1818" class="blob-num js-line-number" data-line-number="1818"></td>
>         <td id="LC1818" class="blob-code blob-code-inner js-file-line">            *(siteClassifications + foo) = SITE_CLASS_NEUTRAL;</td>
>       </tr>
>       <tr>
>         <td id="L1819" class="blob-num js-line-number" data-line-number="1819"></td>
>         <td id="LC1819" class="blob-code blob-code-inner js-file-line">            *(selectionCoefficients + foo) = <span class="pl-c1">0.0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1820" class="blob-num js-line-number" data-line-number="1820"></td>
>         <td id="LC1820" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1821" class="blob-num js-line-number" data-line-number="1821"></td>
>         <td id="LC1821" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( i == <span class="pl-c1">1</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1822" class="blob-num js-line-number" data-line-number="1822"></td>
>         <td id="LC1822" class="blob-code blob-code-inner js-file-line">            *(siteClassifications + foo) = SITE_CLASS_BGS;</td>
>       </tr>
>       <tr>
>         <td id="L1823" class="blob-num js-line-number" data-line-number="1823"></td>
>         <td id="LC1823" class="blob-code blob-code-inner js-file-line">            *(selectionCoefficients + foo) = -(<span class="pl-c1">randExp</span>(MEAN_S_BGS)) * CODOMINANCE;</td>
>       </tr>
>       <tr>
>         <td id="L1824" class="blob-num js-line-number" data-line-number="1824"></td>
>         <td id="LC1824" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1825" class="blob-num js-line-number" data-line-number="1825"></td>
>         <td id="LC1825" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( i == <span class="pl-c1">2</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1826" class="blob-num js-line-number" data-line-number="1826"></td>
>         <td id="LC1826" class="blob-code blob-code-inner js-file-line">            *(siteClassifications + foo) = SITE_CLASS_POS;</td>
>       </tr>
>       <tr>
>         <td id="L1827" class="blob-num js-line-number" data-line-number="1827"></td>
>         <td id="LC1827" class="blob-code blob-code-inner js-file-line">            *(selectionCoefficients + foo) = <span class="pl-c1">randExp</span>(MEAN_S_POS) * CODOMINANCE;</td>
>       </tr>
>       <tr>
>         <td id="L1828" class="blob-num js-line-number" data-line-number="1828"></td>
>         <td id="LC1828" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1829" class="blob-num js-line-number" data-line-number="1829"></td>
>         <td id="LC1829" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( i == <span class="pl-c1">3</span> ) {</td>
>       </tr>
>       <tr>
>         <td id="L1830" class="blob-num js-line-number" data-line-number="1830"></td>
>         <td id="LC1830" class="blob-code blob-code-inner js-file-line">            *(siteClassifications + foo) = SITE_CLASS_DIV;</td>
>       </tr>
>       <tr>
>         <td id="L1831" class="blob-num js-line-number" data-line-number="1831"></td>
>         <td id="LC1831" class="blob-code blob-code-inner js-file-line">            *(selectionCoefficients + foo) = <span class="pl-c1">randExp</span>(MEAN_S_DIV) * CODOMINANCE;</td>
>       </tr>
>       <tr>
>         <td id="L1832" class="blob-num js-line-number" data-line-number="1832"></td>
>         <td id="LC1832" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1833" class="blob-num js-line-number" data-line-number="1833"></td>
>         <td id="LC1833" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1834" class="blob-num js-line-number" data-line-number="1834"></td>
>         <td id="LC1834" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in setUpGenome():<span class="pl-cce">\n\t</span>bogus site type (<span class="pl-c1">%li</span>)<span class="pl-cce">\n\t</span>*** Exiting ***<span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>, i);</td>
>       </tr>
>       <tr>
>         <td id="L1835" class="blob-num js-line-number" data-line-number="1835"></td>
>         <td id="LC1835" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1836" class="blob-num js-line-number" data-line-number="1836"></td>
>         <td id="LC1836" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1837" class="blob-num js-line-number" data-line-number="1837"></td>
>         <td id="LC1837" class="blob-code blob-code-inner js-file-line">        siteTypeCounts[i] = siteTypeCounts[i] + <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1838" class="blob-num js-line-number" data-line-number="1838"></td>
>         <td id="LC1838" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L1839" class="blob-num js-line-number" data-line-number="1839"></td>
>         <td id="LC1839" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// assign linkage group membership</span></td>
>       </tr>
>       <tr>
>         <td id="L1840" class="blob-num js-line-number" data-line-number="1840"></td>
>         <td id="LC1840" class="blob-code blob-code-inner js-file-line">        *(linkageGroupMembership + foo) = currentLinkageGroup;</td>
>       </tr>
>       <tr>
>         <td id="L1841" class="blob-num js-line-number" data-line-number="1841"></td>
>         <td id="LC1841" class="blob-code blob-code-inner js-file-line">        lgCount++;</td>
>       </tr>
>       <tr>
>         <td id="L1842" class="blob-num js-line-number" data-line-number="1842"></td>
>         <td id="LC1842" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( lgCount &gt;= sitesPerLinkageGroup &amp;&amp; currentLinkageGroup &lt; (nLINKAGE_GROUPS - <span class="pl-c1">1</span>) ) {</td>
>       </tr>
>       <tr>
>         <td id="L1843" class="blob-num js-line-number" data-line-number="1843"></td>
>         <td id="LC1843" class="blob-code blob-code-inner js-file-line">            lgCount = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1844" class="blob-num js-line-number" data-line-number="1844"></td>
>         <td id="LC1844" class="blob-code blob-code-inner js-file-line">            currentLinkageGroup++;</td>
>       </tr>
>       <tr>
>         <td id="L1845" class="blob-num js-line-number" data-line-number="1845"></td>
>         <td id="LC1845" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1846" class="blob-num js-line-number" data-line-number="1846"></td>
>         <td id="LC1846" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1847" class="blob-num js-line-number" data-line-number="1847"></td>
>         <td id="LC1847" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1848" class="blob-num js-line-number" data-line-number="1848"></td>
>         <td id="LC1848" class="blob-code blob-code-inner js-file-line">    foo = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1849" class="blob-num js-line-number" data-line-number="1849"></td>
>         <td id="LC1849" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1850" class="blob-num js-line-number" data-line-number="1850"></td>
>         <td id="LC1850" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Site type counts:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1851" class="blob-num js-line-number" data-line-number="1851"></td>
>         <td id="LC1851" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nSITE_CLASSES; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1852" class="blob-num js-line-number" data-line-number="1852"></td>
>         <td id="LC1852" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1853" class="blob-num js-line-number" data-line-number="1853"></td>
>         <td id="LC1853" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%llu</span><span class="pl-pds">&quot;</span></span>, siteTypeCounts[i]);</td>
>       </tr>
>       <tr>
>         <td id="L1854" class="blob-num js-line-number" data-line-number="1854"></td>
>         <td id="LC1854" class="blob-code blob-code-inner js-file-line">        foo += siteTypeCounts[i];</td>
>       </tr>
>       <tr>
>         <td id="L1855" class="blob-num js-line-number" data-line-number="1855"></td>
>         <td id="LC1855" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1856" class="blob-num js-line-number" data-line-number="1856"></td>
>         <td id="LC1856" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1857" class="blob-num js-line-number" data-line-number="1857"></td>
>         <td id="LC1857" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1858" class="blob-num js-line-number" data-line-number="1858"></td>
>         <td id="LC1858" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( foo != nSITES ) {</td>
>       </tr>
>       <tr>
>         <td id="L1859" class="blob-num js-line-number" data-line-number="1859"></td>
>         <td id="LC1859" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in setUpGenome():<span class="pl-cce">\n\t</span>site total (<span class="pl-c1">%llu</span>) != nSITES (<span class="pl-c1">%llu</span>)<span class="pl-cce">\n\t</span>*** Exiting ***<span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>, foo, nSITES);</td>
>       </tr>
>       <tr>
>         <td id="L1860" class="blob-num js-line-number" data-line-number="1860"></td>
>         <td id="LC1860" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1861" class="blob-num js-line-number" data-line-number="1861"></td>
>         <td id="LC1861" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1862" class="blob-num js-line-number" data-line-number="1862"></td>
>         <td id="LC1862" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1863" class="blob-num js-line-number" data-line-number="1863"></td>
>         <td id="LC1863" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// save data on selected sites to files</span></td>
>       </tr>
>       <tr>
>         <td id="L1864" class="blob-num js-line-number" data-line-number="1864"></td>
>         <td id="LC1864" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">FILE</span> *siteDesignations, *sd2;</td>
>       </tr>
>       <tr>
>         <td id="L1865" class="blob-num js-line-number" data-line-number="1865"></td>
>         <td id="LC1865" class="blob-code blob-code-inner js-file-line">    siteDesignations = <span class="pl-c1">fopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SiteClassIndexes.R<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>); <span class="pl-c">// R format</span></td>
>       </tr>
>       <tr>
>         <td id="L1866" class="blob-num js-line-number" data-line-number="1866"></td>
>         <td id="LC1866" class="blob-code blob-code-inner js-file-line">    sd2 = <span class="pl-c1">fopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SiteClassIndexes.m<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>); <span class="pl-c">// matlab format</span></td>
>       </tr>
>       <tr>
>         <td id="L1867" class="blob-num js-line-number" data-line-number="1867"></td>
>         <td id="LC1867" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; nSITE_CLASSES; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1868" class="blob-num js-line-number" data-line-number="1868"></td>
>         <td id="LC1868" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( i == SITE_CLASS_BGS ) {</td>
>       </tr>
>       <tr>
>         <td id="L1869" class="blob-num js-line-number" data-line-number="1869"></td>
>         <td id="LC1869" class="blob-code blob-code-inner js-file-line">            dumi = SITE_CLASS_BGS;</td>
>       </tr>
>       <tr>
>         <td id="L1870" class="blob-num js-line-number" data-line-number="1870"></td>
>         <td id="LC1870" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">strcpy</span>( str, <span class="pl-s"><span class="pl-pds">&quot;</span>BGS_SITE_INDEXES<span class="pl-pds">&quot;</span></span> );</td>
>       </tr>
>       <tr>
>         <td id="L1871" class="blob-num js-line-number" data-line-number="1871"></td>
>         <td id="LC1871" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1872" class="blob-num js-line-number" data-line-number="1872"></td>
>         <td id="LC1872" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( i == SITE_CLASS_POS ) {</td>
>       </tr>
>       <tr>
>         <td id="L1873" class="blob-num js-line-number" data-line-number="1873"></td>
>         <td id="LC1873" class="blob-code blob-code-inner js-file-line">            dumi = SITE_CLASS_POS;</td>
>       </tr>
>       <tr>
>         <td id="L1874" class="blob-num js-line-number" data-line-number="1874"></td>
>         <td id="LC1874" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">strcpy</span>( str, <span class="pl-s"><span class="pl-pds">&quot;</span>POS_SITE_INDEXES<span class="pl-pds">&quot;</span></span> );</td>
>       </tr>
>       <tr>
>         <td id="L1875" class="blob-num js-line-number" data-line-number="1875"></td>
>         <td id="LC1875" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1876" class="blob-num js-line-number" data-line-number="1876"></td>
>         <td id="LC1876" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( i == SITE_CLASS_DIV ) {</td>
>       </tr>
>       <tr>
>         <td id="L1877" class="blob-num js-line-number" data-line-number="1877"></td>
>         <td id="LC1877" class="blob-code blob-code-inner js-file-line">            dumi = SITE_CLASS_DIV;</td>
>       </tr>
>       <tr>
>         <td id="L1878" class="blob-num js-line-number" data-line-number="1878"></td>
>         <td id="LC1878" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">strcpy</span>( str, <span class="pl-s"><span class="pl-pds">&quot;</span>DIV_SITE_INDEXES<span class="pl-pds">&quot;</span></span> );</td>
>       </tr>
>       <tr>
>         <td id="L1879" class="blob-num js-line-number" data-line-number="1879"></td>
>         <td id="LC1879" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1880" class="blob-num js-line-number" data-line-number="1880"></td>
>         <td id="LC1880" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1881" class="blob-num js-line-number" data-line-number="1881"></td>
>         <td id="LC1881" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in setUpGenome():<span class="pl-cce">\n\t</span>site designation out of bounds<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1882" class="blob-num js-line-number" data-line-number="1882"></td>
>         <td id="LC1882" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1883" class="blob-num js-line-number" data-line-number="1883"></td>
>         <td id="LC1883" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1884" class="blob-num js-line-number" data-line-number="1884"></td>
>         <td id="LC1884" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>( siteDesignations, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span> &lt;- c(<span class="pl-pds">&quot;</span></span>, str );</td>
>       </tr>
>       <tr>
>         <td id="L1885" class="blob-num js-line-number" data-line-number="1885"></td>
>         <td id="LC1885" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>( sd2, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%s</span> = [<span class="pl-pds">&quot;</span></span>, str );</td>
>       </tr>
>       <tr>
>         <td id="L1886" class="blob-num js-line-number" data-line-number="1886"></td>
>         <td id="LC1886" class="blob-code blob-code-inner js-file-line">        firstOne = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1887" class="blob-num js-line-number" data-line-number="1887"></td>
>         <td id="LC1887" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( foo = <span class="pl-c1">0</span>; foo &lt; nSITES; foo++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1888" class="blob-num js-line-number" data-line-number="1888"></td>
>         <td id="LC1888" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( *(siteClassifications + foo) == dumi ) {</td>
>       </tr>
>       <tr>
>         <td id="L1889" class="blob-num js-line-number" data-line-number="1889"></td>
>         <td id="LC1889" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> ( firstOne ) { <span class="pl-c">// so no trailing comma or space on end</span></td>
>       </tr>
>       <tr>
>         <td id="L1890" class="blob-num js-line-number" data-line-number="1890"></td>
>         <td id="LC1890" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">fprintf</span>( siteDesignations, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%llu</span><span class="pl-pds">&quot;</span></span>, foo );</td>
>       </tr>
>       <tr>
>         <td id="L1891" class="blob-num js-line-number" data-line-number="1891"></td>
>         <td id="LC1891" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">fprintf</span>( sd2, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%llu</span><span class="pl-pds">&quot;</span></span>, foo );</td>
>       </tr>
>       <tr>
>         <td id="L1892" class="blob-num js-line-number" data-line-number="1892"></td>
>         <td id="LC1892" class="blob-code blob-code-inner js-file-line">                    firstOne = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1893" class="blob-num js-line-number" data-line-number="1893"></td>
>         <td id="LC1893" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1894" class="blob-num js-line-number" data-line-number="1894"></td>
>         <td id="LC1894" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1895" class="blob-num js-line-number" data-line-number="1895"></td>
>         <td id="LC1895" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">fprintf</span>( siteDesignations, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-c1">%llu</span><span class="pl-pds">&quot;</span></span>, foo );</td>
>       </tr>
>       <tr>
>         <td id="L1896" class="blob-num js-line-number" data-line-number="1896"></td>
>         <td id="LC1896" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c1">fprintf</span>( sd2, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-c1">%llu</span><span class="pl-pds">&quot;</span></span>, foo );</td>
>       </tr>
>       <tr>
>         <td id="L1897" class="blob-num js-line-number" data-line-number="1897"></td>
>         <td id="LC1897" class="blob-code blob-code-inner js-file-line">                }</td>
>       </tr>
>       <tr>
>         <td id="L1898" class="blob-num js-line-number" data-line-number="1898"></td>
>         <td id="LC1898" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1899" class="blob-num js-line-number" data-line-number="1899"></td>
>         <td id="LC1899" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1900" class="blob-num js-line-number" data-line-number="1900"></td>
>         <td id="LC1900" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>( siteDesignations, <span class="pl-s"><span class="pl-pds">&quot;</span>);<span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span> );</td>
>       </tr>
>       <tr>
>         <td id="L1901" class="blob-num js-line-number" data-line-number="1901"></td>
>         <td id="LC1901" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>( sd2, <span class="pl-s"><span class="pl-pds">&quot;</span>];<span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span> );</td>
>       </tr>
>       <tr>
>         <td id="L1902" class="blob-num js-line-number" data-line-number="1902"></td>
>         <td id="LC1902" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1903" class="blob-num js-line-number" data-line-number="1903"></td>
>         <td id="LC1903" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fclose</span>(siteDesignations);</td>
>       </tr>
>       <tr>
>         <td id="L1904" class="blob-num js-line-number" data-line-number="1904"></td>
>         <td id="LC1904" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fclose</span>(sd2);</td>
>       </tr>
>       <tr>
>         <td id="L1905" class="blob-num js-line-number" data-line-number="1905"></td>
>         <td id="LC1905" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1906" class="blob-num js-line-number" data-line-number="1906"></td>
>         <td id="LC1906" class="blob-code blob-code-inner js-file-line">    nSelectedSites = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1907" class="blob-num js-line-number" data-line-number="1907"></td>
>         <td id="LC1907" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">FILE</span> *initialFreqs;</td>
>       </tr>
>       <tr>
>         <td id="L1908" class="blob-num js-line-number" data-line-number="1908"></td>
>         <td id="LC1908" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> focalSiteIndex;</td>
>       </tr>
>       <tr>
>         <td id="L1909" class="blob-num js-line-number" data-line-number="1909"></td>
>         <td id="LC1909" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> SiteClassCode;</td>
>       </tr>
>       <tr>
>         <td id="L1910" class="blob-num js-line-number" data-line-number="1910"></td>
>         <td id="LC1910" class="blob-code blob-code-inner js-file-line">    initialFreqs = <span class="pl-c1">fopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>InitialAlleleFreqs.csv<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1911" class="blob-num js-line-number" data-line-number="1911"></td>
>         <td id="LC1911" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(initialFreqs, <span class="pl-s"><span class="pl-pds">&quot;</span>SiteIndex,LinkageGroup,DerivedAlleleCount,DerivedAlleleFreq,SelectionCoefficient,SiteClassCode,SiteClassName<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1912" class="blob-num js-line-number" data-line-number="1912"></td>
>         <td id="LC1912" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( foo = <span class="pl-c1">0</span>; foo &lt; nTrackedSitesInParents; foo++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1913" class="blob-num js-line-number" data-line-number="1913"></td>
>         <td id="LC1913" class="blob-code blob-code-inner js-file-line">        focalSiteIndex = *(parentalTrackedSiteIndexes + foo);</td>
>       </tr>
>       <tr>
>         <td id="L1914" class="blob-num js-line-number" data-line-number="1914"></td>
>         <td id="LC1914" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L1915" class="blob-num js-line-number" data-line-number="1915"></td>
>         <td id="LC1915" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( *(siteClassifications + focalSiteIndex) &gt; SITE_CLASS_NEUTRAL )</td>
>       </tr>
>       <tr>
>         <td id="L1916" class="blob-num js-line-number" data-line-number="1916"></td>
>         <td id="LC1916" class="blob-code blob-code-inner js-file-line">            nSelectedSites++;</td>
>       </tr>
>       <tr>
>         <td id="L1917" class="blob-num js-line-number" data-line-number="1917"></td>
>         <td id="LC1917" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1918" class="blob-num js-line-number" data-line-number="1918"></td>
>         <td id="LC1918" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L1919" class="blob-num js-line-number" data-line-number="1919"></td>
>         <td id="LC1919" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(initialFreqs, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%llu</span>,<span class="pl-c1">%i</span>,<span class="pl-c1">%llu</span>,<span class="pl-c1">%E</span>,<span class="pl-c1">%E</span><span class="pl-pds">&quot;</span></span>, focalSiteIndex, linkageGroupMembership[focalSiteIndex], alleleCounts[focalSiteIndex], alleleFrequencies[focalSiteIndex], selectionCoefficients[focalSiteIndex] );</td>
>       </tr>
>       <tr>
>         <td id="L1920" class="blob-num js-line-number" data-line-number="1920"></td>
>         <td id="LC1920" class="blob-code blob-code-inner js-file-line">        SiteClassCode = siteClassifications[focalSiteIndex];</td>
>       </tr>
>       <tr>
>         <td id="L1921" class="blob-num js-line-number" data-line-number="1921"></td>
>         <td id="LC1921" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(initialFreqs, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, SiteClassCode);</td>
>       </tr>
>       <tr>
>         <td id="L1922" class="blob-num js-line-number" data-line-number="1922"></td>
>         <td id="LC1922" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( SiteClassCode == SITE_CLASS_BGS )</td>
>       </tr>
>       <tr>
>         <td id="L1923" class="blob-num js-line-number" data-line-number="1923"></td>
>         <td id="LC1923" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(initialFreqs, <span class="pl-s"><span class="pl-pds">&quot;</span>,SITE_CLASS_BGS<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1924" class="blob-num js-line-number" data-line-number="1924"></td>
>         <td id="LC1924" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( SiteClassCode == SITE_CLASS_POS )</td>
>       </tr>
>       <tr>
>         <td id="L1925" class="blob-num js-line-number" data-line-number="1925"></td>
>         <td id="LC1925" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(initialFreqs, <span class="pl-s"><span class="pl-pds">&quot;</span>,SITE_CLASS_POS<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1926" class="blob-num js-line-number" data-line-number="1926"></td>
>         <td id="LC1926" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( SiteClassCode == SITE_CLASS_DIV )</td>
>       </tr>
>       <tr>
>         <td id="L1927" class="blob-num js-line-number" data-line-number="1927"></td>
>         <td id="LC1927" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(initialFreqs, <span class="pl-s"><span class="pl-pds">&quot;</span>,SITE_CLASS_DIV<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1928" class="blob-num js-line-number" data-line-number="1928"></td>
>         <td id="LC1928" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( SiteClassCode == SITE_CLASS_NEUTRAL )</td>
>       </tr>
>       <tr>
>         <td id="L1929" class="blob-num js-line-number" data-line-number="1929"></td>
>         <td id="LC1929" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(initialFreqs, <span class="pl-s"><span class="pl-pds">&quot;</span>,SITE_CLASS_NEUTRAL<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1930" class="blob-num js-line-number" data-line-number="1930"></td>
>         <td id="LC1930" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1931" class="blob-num js-line-number" data-line-number="1931"></td>
>         <td id="LC1931" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in setUpGenome:<span class="pl-cce">\n\t</span>Site class (<span class="pl-c1">%i</span>) not found<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, SiteClassCode);</td>
>       </tr>
>       <tr>
>         <td id="L1932" class="blob-num js-line-number" data-line-number="1932"></td>
>         <td id="LC1932" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L1933" class="blob-num js-line-number" data-line-number="1933"></td>
>         <td id="LC1933" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1934" class="blob-num js-line-number" data-line-number="1934"></td>
>         <td id="LC1934" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1935" class="blob-num js-line-number" data-line-number="1935"></td>
>         <td id="LC1935" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fclose</span>(initialFreqs);</td>
>       </tr>
>       <tr>
>         <td id="L1936" class="blob-num js-line-number" data-line-number="1936"></td>
>         <td id="LC1936" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1937" class="blob-num js-line-number" data-line-number="1937"></td>
>         <td id="LC1937" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE )</td>
>       </tr>
>       <tr>
>         <td id="L1938" class="blob-num js-line-number" data-line-number="1938"></td>
>         <td id="LC1938" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>nSelectedSites = <span class="pl-c1">%li</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, nSelectedSites);</td>
>       </tr>
>       <tr>
>         <td id="L1939" class="blob-num js-line-number" data-line-number="1939"></td>
>         <td id="LC1939" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1940" class="blob-num js-line-number" data-line-number="1940"></td>
>         <td id="LC1940" class="blob-code blob-code-inner js-file-line">    initialFreqs = <span class="pl-c1">fopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>InitialSFS.csv<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1941" class="blob-num js-line-number" data-line-number="1941"></td>
>         <td id="LC1941" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(initialFreqs, <span class="pl-s"><span class="pl-pds">&quot;</span>AlleleCount,NumberOfSites<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L1942" class="blob-num js-line-number" data-line-number="1942"></td>
>         <td id="LC1942" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( foo = <span class="pl-c1">0</span>; foo &lt; (PLOIDY * N); foo++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1943" class="blob-num js-line-number" data-line-number="1943"></td>
>         <td id="LC1943" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( SFScounts[foo] ) {</td>
>       </tr>
>       <tr>
>         <td id="L1944" class="blob-num js-line-number" data-line-number="1944"></td>
>         <td id="LC1944" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(initialFreqs, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%llu</span>,<span class="pl-c1">%llu</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, foo, SFScounts[foo]);</td>
>       </tr>
>       <tr>
>         <td id="L1945" class="blob-num js-line-number" data-line-number="1945"></td>
>         <td id="LC1945" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1946" class="blob-num js-line-number" data-line-number="1946"></td>
>         <td id="LC1946" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1947" class="blob-num js-line-number" data-line-number="1947"></td>
>         <td id="LC1947" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fclose</span>(initialFreqs);</td>
>       </tr>
>       <tr>
>         <td id="L1948" class="blob-num js-line-number" data-line-number="1948"></td>
>         <td id="LC1948" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1949" class="blob-num js-line-number" data-line-number="1949"></td>
>         <td id="LC1949" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1950" class="blob-num js-line-number" data-line-number="1950"></td>
>         <td id="LC1950" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1951" class="blob-num js-line-number" data-line-number="1951"></td>
>         <td id="LC1951" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1952" class="blob-num js-line-number" data-line-number="1952"></td>
>         <td id="LC1952" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">free</span>(expectedFreq);</td>
>       </tr>
>       <tr>
>         <td id="L1953" class="blob-num js-line-number" data-line-number="1953"></td>
>         <td id="LC1953" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1954" class="blob-num js-line-number" data-line-number="1954"></td>
>         <td id="LC1954" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//printf(&quot;\nWarning: setUpGenome() not done yet.  Still need to set selection coefficients.\n&quot;);</span></td>
>       </tr>
>       <tr>
>         <td id="L1955" class="blob-num js-line-number" data-line-number="1955"></td>
>         <td id="LC1955" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//exit(0);</span></td>
>       </tr>
>       <tr>
>         <td id="L1956" class="blob-num js-line-number" data-line-number="1956"></td>
>         <td id="LC1956" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L1957" class="blob-num js-line-number" data-line-number="1957"></td>
>         <td id="LC1957" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1958" class="blob-num js-line-number" data-line-number="1958"></td>
>         <td id="LC1958" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L1959" class="blob-num js-line-number" data-line-number="1959"></td>
>         <td id="LC1959" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">setUpInitialAlleleFrequencies</span>(<span class="pl-k">double</span> *expectedFreq)</td>
>       </tr>
>       <tr>
>         <td id="L1960" class="blob-num js-line-number" data-line-number="1960"></td>
>         <td id="LC1960" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L1961" class="blob-num js-line-number" data-line-number="1961"></td>
>         <td id="LC1961" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> i, copies, focalSiteIndex;</td>
>       </tr>
>       <tr>
>         <td id="L1962" class="blob-num js-line-number" data-line-number="1962"></td>
>         <td id="LC1962" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> dum, *dpt, twoN;</td>
>       </tr>
>       <tr>
>         <td id="L1963" class="blob-num js-line-number" data-line-number="1963"></td>
>         <td id="LC1963" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">_Bool</span> looking;</td>
>       </tr>
>       <tr>
>         <td id="L1964" class="blob-num js-line-number" data-line-number="1964"></td>
>         <td id="LC1964" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1965" class="blob-num js-line-number" data-line-number="1965"></td>
>         <td id="LC1965" class="blob-code blob-code-inner js-file-line">    twoN = ((<span class="pl-k">double</span>) PLOIDY) * ((<span class="pl-k">double</span>) N);</td>
>       </tr>
>       <tr>
>         <td id="L1966" class="blob-num js-line-number" data-line-number="1966"></td>
>         <td id="LC1966" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1967" class="blob-num js-line-number" data-line-number="1967"></td>
>         <td id="LC1967" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// make proper scaling of expectedFreq</span></td>
>       </tr>
>       <tr>
>         <td id="L1968" class="blob-num js-line-number" data-line-number="1968"></td>
>         <td id="LC1968" class="blob-code blob-code-inner js-file-line">    dpt = expectedFreq + <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1969" class="blob-num js-line-number" data-line-number="1969"></td>
>         <td id="LC1969" class="blob-code blob-code-inner js-file-line">    dum = *(expectedFreq + (PLOIDY * N) - <span class="pl-c1">1</span>); <span class="pl-c">// cumulative sum</span></td>
>       </tr>
>       <tr>
>         <td id="L1970" class="blob-num js-line-number" data-line-number="1970"></td>
>         <td id="LC1970" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">1</span>; i &lt; ((PLOIDY * N) - <span class="pl-c1">1</span>); i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1971" class="blob-num js-line-number" data-line-number="1971"></td>
>         <td id="LC1971" class="blob-code blob-code-inner js-file-line">        *dpt = (*dpt) / dum; <span class="pl-c">// rescale so total sums to one</span></td>
>       </tr>
>       <tr>
>         <td id="L1972" class="blob-num js-line-number" data-line-number="1972"></td>
>         <td id="LC1972" class="blob-code blob-code-inner js-file-line">        dpt++;</td>
>       </tr>
>       <tr>
>         <td id="L1973" class="blob-num js-line-number" data-line-number="1973"></td>
>         <td id="LC1973" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//        if ( i &lt; 20 )</span></td>
>       </tr>
>       <tr>
>         <td id="L1974" class="blob-num js-line-number" data-line-number="1974"></td>
>         <td id="LC1974" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//            printf(&quot;%E\t%E\n&quot;, *(dpt-2), *(dpt-1));</span></td>
>       </tr>
>       <tr>
>         <td id="L1975" class="blob-num js-line-number" data-line-number="1975"></td>
>         <td id="LC1975" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L1976" class="blob-num js-line-number" data-line-number="1976"></td>
>         <td id="LC1976" class="blob-code blob-code-inner js-file-line">    *(expectedFreq + (PLOIDY * N) - <span class="pl-c1">1</span>) = <span class="pl-c1">1.1</span>; <span class="pl-c">// top out last entry</span></td>
>       </tr>
>       <tr>
>         <td id="L1977" class="blob-num js-line-number" data-line-number="1977"></td>
>         <td id="LC1977" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1978" class="blob-num js-line-number" data-line-number="1978"></td>
>         <td id="LC1978" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L1979" class="blob-num js-line-number" data-line-number="1979"></td>
>         <td id="LC1979" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nTrackedSitesInParents; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L1980" class="blob-num js-line-number" data-line-number="1980"></td>
>         <td id="LC1980" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L1981" class="blob-num js-line-number" data-line-number="1981"></td>
>         <td id="LC1981" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// get index of focal site</span></td>
>       </tr>
>       <tr>
>         <td id="L1982" class="blob-num js-line-number" data-line-number="1982"></td>
>         <td id="LC1982" class="blob-code blob-code-inner js-file-line">        focalSiteIndex = *(parentalTrackedSiteIndexes + i);</td>
>       </tr>
>       <tr>
>         <td id="L1983" class="blob-num js-line-number" data-line-number="1983"></td>
>         <td id="LC1983" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L1984" class="blob-num js-line-number" data-line-number="1984"></td>
>         <td id="LC1984" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// draw random uniform number to choose frequency</span></td>
>       </tr>
>       <tr>
>         <td id="L1985" class="blob-num js-line-number" data-line-number="1985"></td>
>         <td id="LC1985" class="blob-code blob-code-inner js-file-line">        dum = <span class="pl-c1">gsl_rng_uniform</span>(rngState);</td>
>       </tr>
>       <tr>
>         <td id="L1986" class="blob-num js-line-number" data-line-number="1986"></td>
>         <td id="LC1986" class="blob-code blob-code-inner js-file-line">        looking = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1987" class="blob-num js-line-number" data-line-number="1987"></td>
>         <td id="LC1987" class="blob-code blob-code-inner js-file-line">        copies = <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1988" class="blob-num js-line-number" data-line-number="1988"></td>
>         <td id="LC1988" class="blob-code blob-code-inner js-file-line">        dpt = expectedFreq + <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1989" class="blob-num js-line-number" data-line-number="1989"></td>
>         <td id="LC1989" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// run through cumulative probability vector of copy number find chosen one</span></td>
>       </tr>
>       <tr>
>         <td id="L1990" class="blob-num js-line-number" data-line-number="1990"></td>
>         <td id="LC1990" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> ( looking &amp;&amp; (copies &lt; ((PLOIDY * N) - <span class="pl-c1">1</span>)) ) {</td>
>       </tr>
>       <tr>
>         <td id="L1991" class="blob-num js-line-number" data-line-number="1991"></td>
>         <td id="LC1991" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( dum &lt; (*dpt) )</td>
>       </tr>
>       <tr>
>         <td id="L1992" class="blob-num js-line-number" data-line-number="1992"></td>
>         <td id="LC1992" class="blob-code blob-code-inner js-file-line">                looking = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L1993" class="blob-num js-line-number" data-line-number="1993"></td>
>         <td id="LC1993" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L1994" class="blob-num js-line-number" data-line-number="1994"></td>
>         <td id="LC1994" class="blob-code blob-code-inner js-file-line">                copies++;</td>
>       </tr>
>       <tr>
>         <td id="L1995" class="blob-num js-line-number" data-line-number="1995"></td>
>         <td id="LC1995" class="blob-code blob-code-inner js-file-line">                dpt++;</td>
>       </tr>
>       <tr>
>         <td id="L1996" class="blob-num js-line-number" data-line-number="1996"></td>
>         <td id="LC1996" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L1997" class="blob-num js-line-number" data-line-number="1997"></td>
>         <td id="LC1997" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L1998" class="blob-num js-line-number" data-line-number="1998"></td>
>         <td id="LC1998" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L1999" class="blob-num js-line-number" data-line-number="1999"></td>
>         <td id="LC1999" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// store results</span></td>
>       </tr>
>       <tr>
>         <td id="L2000" class="blob-num js-line-number" data-line-number="2000"></td>
>         <td id="LC2000" class="blob-code blob-code-inner js-file-line">        *(alleleFrequencies + focalSiteIndex) = ((<span class="pl-k">double</span>) copies) / twoN;</td>
>       </tr>
>       <tr>
>         <td id="L2001" class="blob-num js-line-number" data-line-number="2001"></td>
>         <td id="LC2001" class="blob-code blob-code-inner js-file-line">        *(alleleCounts + focalSiteIndex) = copies;</td>
>       </tr>
>       <tr>
>         <td id="L2002" class="blob-num js-line-number" data-line-number="2002"></td>
>         <td id="LC2002" class="blob-code blob-code-inner js-file-line">        *(SFScounts + copies) = (*(SFScounts + copies)) + <span class="pl-c1">1</span>;</td>
>       </tr>
>       <tr>
>         <td id="L2003" class="blob-num js-line-number" data-line-number="2003"></td>
>         <td id="LC2003" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L2004" class="blob-num js-line-number" data-line-number="2004"></td>
>         <td id="LC2004" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L2005" class="blob-num js-line-number" data-line-number="2005"></td>
>         <td id="LC2005" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2006" class="blob-num js-line-number" data-line-number="2006"></td>
>         <td id="LC2006" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2007" class="blob-num js-line-number" data-line-number="2007"></td>
>         <td id="LC2007" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2008" class="blob-num js-line-number" data-line-number="2008"></td>
>         <td id="LC2008" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">setUpPopulations</span>(<span class="pl-k">void</span>)</td>
>       </tr>
>       <tr>
>         <td id="L2009" class="blob-num js-line-number" data-line-number="2009"></td>
>         <td id="LC2009" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L2010" class="blob-num js-line-number" data-line-number="2010"></td>
>         <td id="LC2010" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> neededSize, focalSiteIndex;</td>
>       </tr>
>       <tr>
>         <td id="L2011" class="blob-num js-line-number" data-line-number="2011"></td>
>         <td id="LC2011" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> i;</td>
>       </tr>
>       <tr>
>         <td id="L2012" class="blob-num js-line-number" data-line-number="2012"></td>
>         <td id="LC2012" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> j, k, <span class="pl-c1">index</span>, counter, siteAlleleCount;</td>
>       </tr>
>       <tr>
>         <td id="L2013" class="blob-num js-line-number" data-line-number="2013"></td>
>         <td id="LC2013" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span> choiceVector[(PLOIDY * N)], allelesToSwitch[(PLOIDY * N)];</td>
>       </tr>
>       <tr>
>         <td id="L2014" class="blob-num js-line-number" data-line-number="2014"></td>
>         <td id="LC2014" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">short</span> <span class="pl-k">int</span> *sipt;</td>
>       </tr>
>       <tr>
>         <td id="L2015" class="blob-num js-line-number" data-line-number="2015"></td>
>         <td id="LC2015" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">double</span> stepSize;</td>
>       </tr>
>       <tr>
>         <td id="L2016" class="blob-num js-line-number" data-line-number="2016"></td>
>         <td id="LC2016" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2017" class="blob-num js-line-number" data-line-number="2017"></td>
>         <td id="LC2017" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// allocate space for genotypes and keep track of how big they are in memory</span></td>
>       </tr>
>       <tr>
>         <td id="L2018" class="blob-num js-line-number" data-line-number="2018"></td>
>         <td id="LC2018" class="blob-code blob-code-inner js-file-line">    neededSize = PLOIDY * N * <span class="pl-k">sizeof</span>(<span class="pl-k">short</span> <span class="pl-k">int</span>) * nTrackedSitesInParents;</td>
>       </tr>
>       <tr>
>         <td id="L2019" class="blob-num js-line-number" data-line-number="2019"></td>
>         <td id="LC2019" class="blob-code blob-code-inner js-file-line">    genotypes0 = (<span class="pl-k">short</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( neededSize );</td>
>       </tr>
>       <tr>
>         <td id="L2020" class="blob-num js-line-number" data-line-number="2020"></td>
>         <td id="LC2020" class="blob-code blob-code-inner js-file-line">    genotypes1 = (<span class="pl-k">short</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( neededSize );</td>
>       </tr>
>       <tr>
>         <td id="L2021" class="blob-num js-line-number" data-line-number="2021"></td>
>         <td id="LC2021" class="blob-code blob-code-inner js-file-line">    currentBlock = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L2022" class="blob-num js-line-number" data-line-number="2022"></td>
>         <td id="LC2022" class="blob-code blob-code-inner js-file-line">    gts = genotypes0;</td>
>       </tr>
>       <tr>
>         <td id="L2023" class="blob-num js-line-number" data-line-number="2023"></td>
>         <td id="LC2023" class="blob-code blob-code-inner js-file-line">    blockSizes[<span class="pl-c1">0</span>] = neededSize;</td>
>       </tr>
>       <tr>
>         <td id="L2024" class="blob-num js-line-number" data-line-number="2024"></td>
>         <td id="LC2024" class="blob-code blob-code-inner js-file-line">    blockSizes[<span class="pl-c1">1</span>] = neededSize;</td>
>       </tr>
>       <tr>
>         <td id="L2025" class="blob-num js-line-number" data-line-number="2025"></td>
>         <td id="LC2025" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">memset</span>(genotypes0, ALLELE_CODE_ANCESTRAL, neededSize);</td>
>       </tr>
>       <tr>
>         <td id="L2026" class="blob-num js-line-number" data-line-number="2026"></td>
>         <td id="LC2026" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">memset</span>(genotypes1, ALLELE_CODE_ANCESTRAL, neededSize);</td>
>       </tr>
>       <tr>
>         <td id="L2027" class="blob-num js-line-number" data-line-number="2027"></td>
>         <td id="LC2027" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2028" class="blob-num js-line-number" data-line-number="2028"></td>
>         <td id="LC2028" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// make array of abundances in subpopulations</span></td>
>       </tr>
>       <tr>
>         <td id="L2029" class="blob-num js-line-number" data-line-number="2029"></td>
>         <td id="LC2029" class="blob-code blob-code-inner js-file-line">    abundances = (<span class="pl-k">long</span> <span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( nPOPULATIONS * <span class="pl-k">sizeof</span>( <span class="pl-k">long</span> <span class="pl-k">int</span> ) );</td>
>       </tr>
>       <tr>
>         <td id="L2030" class="blob-num js-line-number" data-line-number="2030"></td>
>         <td id="LC2030" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L2031" class="blob-num js-line-number" data-line-number="2031"></td>
>         <td id="LC2031" class="blob-code blob-code-inner js-file-line">        abundances[i] = K_VALUES[i]; <span class="pl-c">// initialize with populations at current carrying capacity</span></td>
>       </tr>
>       <tr>
>         <td id="L2032" class="blob-num js-line-number" data-line-number="2032"></td>
>         <td id="LC2032" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2033" class="blob-num js-line-number" data-line-number="2033"></td>
>         <td id="LC2033" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// set locations of individuals</span></td>
>       </tr>
>       <tr>
>         <td id="L2034" class="blob-num js-line-number" data-line-number="2034"></td>
>         <td id="LC2034" class="blob-code blob-code-inner js-file-line">    locations = (<span class="pl-k">int</span> *) <span class="pl-c1">malloc</span>( N * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L2035" class="blob-num js-line-number" data-line-number="2035"></td>
>         <td id="LC2035" class="blob-code blob-code-inner js-file-line">    counter = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L2036" class="blob-num js-line-number" data-line-number="2036"></td>
>         <td id="LC2036" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L2037" class="blob-num js-line-number" data-line-number="2037"></td>
>         <td id="LC2037" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( j = <span class="pl-c1">0</span>; j &lt; abundances[i]; j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L2038" class="blob-num js-line-number" data-line-number="2038"></td>
>         <td id="LC2038" class="blob-code blob-code-inner js-file-line">            locations[counter] = i;</td>
>       </tr>
>       <tr>
>         <td id="L2039" class="blob-num js-line-number" data-line-number="2039"></td>
>         <td id="LC2039" class="blob-code blob-code-inner js-file-line">            counter++;</td>
>       </tr>
>       <tr>
>         <td id="L2040" class="blob-num js-line-number" data-line-number="2040"></td>
>         <td id="LC2040" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L2041" class="blob-num js-line-number" data-line-number="2041"></td>
>         <td id="LC2041" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L2042" class="blob-num js-line-number" data-line-number="2042"></td>
>         <td id="LC2042" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2043" class="blob-num js-line-number" data-line-number="2043"></td>
>         <td id="LC2043" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// make a choice vector for choosing which alleles in which genotypes to change from zeros to ones</span></td>
>       </tr>
>       <tr>
>         <td id="L2044" class="blob-num js-line-number" data-line-number="2044"></td>
>         <td id="LC2044" class="blob-code blob-code-inner js-file-line">    counter = <span class="pl-c1">0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L2045" class="blob-num js-line-number" data-line-number="2045"></td>
>         <td id="LC2045" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( j = <span class="pl-c1">0</span>; j &lt; N; j++ ) { <span class="pl-c">// individuals&#39; genotypes</span></td>
>       </tr>
>       <tr>
>         <td id="L2046" class="blob-num js-line-number" data-line-number="2046"></td>
>         <td id="LC2046" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; PLOIDY; i++ ) { <span class="pl-c">// the two copies each individual has</span></td>
>       </tr>
>       <tr>
>         <td id="L2047" class="blob-num js-line-number" data-line-number="2047"></td>
>         <td id="LC2047" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">/* the sequence of choices needs to be: 0,1, PLOIDY * nTrackedSitesInParents, PLOIDY*nTrackedSitesInParents + 1, 2*PLOIDY*nTrackedSitesInParents, 2*PLOIDY*nTrackedSitesInParents + 1, etc... */</span></td>
>       </tr>
>       <tr>
>         <td id="L2048" class="blob-num js-line-number" data-line-number="2048"></td>
>         <td id="LC2048" class="blob-code blob-code-inner js-file-line">            choiceVector[counter] = (j * PLOIDY * nTrackedSitesInParents) + i;</td>
>       </tr>
>       <tr>
>         <td id="L2049" class="blob-num js-line-number" data-line-number="2049"></td>
>         <td id="LC2049" class="blob-code blob-code-inner js-file-line">            counter++;</td>
>       </tr>
>       <tr>
>         <td id="L2050" class="blob-num js-line-number" data-line-number="2050"></td>
>         <td id="LC2050" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L2051" class="blob-num js-line-number" data-line-number="2051"></td>
>         <td id="LC2051" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L2052" class="blob-num js-line-number" data-line-number="2052"></td>
>         <td id="LC2052" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2053" class="blob-num js-line-number" data-line-number="2053"></td>
>         <td id="LC2053" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( j = <span class="pl-c1">0</span>; j &lt; nTrackedSitesInParents; j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L2054" class="blob-num js-line-number" data-line-number="2054"></td>
>         <td id="LC2054" class="blob-code blob-code-inner js-file-line">        focalSiteIndex = parentalTrackedSiteIndexes[j];</td>
>       </tr>
>       <tr>
>         <td id="L2055" class="blob-num js-line-number" data-line-number="2055"></td>
>         <td id="LC2055" class="blob-code blob-code-inner js-file-line">        siteAlleleCount = alleleCounts[focalSiteIndex];</td>
>       </tr>
>       <tr>
>         <td id="L2056" class="blob-num js-line-number" data-line-number="2056"></td>
>         <td id="LC2056" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( siteAlleleCount &lt;= <span class="pl-c1">0</span> || siteAlleleCount &gt;= (PLOIDY * N) ) {</td>
>       </tr>
>       <tr>
>         <td id="L2057" class="blob-num js-line-number" data-line-number="2057"></td>
>         <td id="LC2057" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in setUpPopulations():<span class="pl-cce">\n\t</span>siteAlleleCount (= <span class="pl-c1">%llu</span>) out of bounds.<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, siteAlleleCount);</td>
>       </tr>
>       <tr>
>         <td id="L2058" class="blob-num js-line-number" data-line-number="2058"></td>
>         <td id="LC2058" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L2059" class="blob-num js-line-number" data-line-number="2059"></td>
>         <td id="LC2059" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L2060" class="blob-num js-line-number" data-line-number="2060"></td>
>         <td id="LC2060" class="blob-code blob-code-inner js-file-line">            </td>
>       </tr>
>       <tr>
>         <td id="L2061" class="blob-num js-line-number" data-line-number="2061"></td>
>         <td id="LC2061" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// int gsl_ran_choose (const gsl_rng * r, void * dest, size_t k, void * src, size_t n, size_t size)</span></td>
>       </tr>
>       <tr>
>         <td id="L2062" class="blob-num js-line-number" data-line-number="2062"></td>
>         <td id="LC2062" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">gsl_ran_choose</span>( rngState, allelesToSwitch, siteAlleleCount, choiceVector, (PLOIDY * N), <span class="pl-k">sizeof</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-k">int</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L2063" class="blob-num js-line-number" data-line-number="2063"></td>
>         <td id="LC2063" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L2064" class="blob-num js-line-number" data-line-number="2064"></td>
>         <td id="LC2064" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( k = <span class="pl-c1">0</span>; k &lt; siteAlleleCount; k++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L2065" class="blob-num js-line-number" data-line-number="2065"></td>
>         <td id="LC2065" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// index into genotypes array</span></td>
>       </tr>
>       <tr>
>         <td id="L2066" class="blob-num js-line-number" data-line-number="2066"></td>
>         <td id="LC2066" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// genotypes array: each individual = PLOIDY * nTrackedSitesInParents consecutive entries</span></td>
>       </tr>
>       <tr>
>         <td id="L2067" class="blob-num js-line-number" data-line-number="2067"></td>
>         <td id="LC2067" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// two adjacent entries are the two entries for the two alleles an individual has at that locus</span></td>
>       </tr>
>       <tr>
>         <td id="L2068" class="blob-num js-line-number" data-line-number="2068"></td>
>         <td id="LC2068" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// need to add &quot;1&quot; allele at jth locus for each of selected genotypes that get a derived allele copy</span></td>
>       </tr>
>       <tr>
>         <td id="L2069" class="blob-num js-line-number" data-line-number="2069"></td>
>         <td id="LC2069" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// hence, index of jth locus in kth genotype copy is:</span></td>
>       </tr>
>       <tr>
>         <td id="L2070" class="blob-num js-line-number" data-line-number="2070"></td>
>         <td id="LC2070" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">index</span> = (PLOIDY * j) + allelesToSwitch[k]; <span class="pl-c">// kth genotype copy of jth locus to add allele to</span></td>
>       </tr>
>       <tr>
>         <td id="L2071" class="blob-num js-line-number" data-line-number="2071"></td>
>         <td id="LC2071" class="blob-code blob-code-inner js-file-line">            *(gts + <span class="pl-c1">index</span>) = ALLELE_CODE_DERIVED; <span class="pl-c">// derived allele</span></td>
>       </tr>
>       <tr>
>         <td id="L2072" class="blob-num js-line-number" data-line-number="2072"></td>
>         <td id="LC2072" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L2073" class="blob-num js-line-number" data-line-number="2073"></td>
>         <td id="LC2073" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L2074" class="blob-num js-line-number" data-line-number="2074"></td>
>         <td id="LC2074" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L2075" class="blob-num js-line-number" data-line-number="2075"></td>
>         <td id="LC2075" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2076" class="blob-num js-line-number" data-line-number="2076"></td>
>         <td id="LC2076" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2077" class="blob-num js-line-number" data-line-number="2077"></td>
>         <td id="LC2077" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">FILE</span> *initgts;</td>
>       </tr>
>       <tr>
>         <td id="L2078" class="blob-num js-line-number" data-line-number="2078"></td>
>         <td id="LC2078" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L2079" class="blob-num js-line-number" data-line-number="2079"></td>
>         <td id="LC2079" class="blob-code blob-code-inner js-file-line">        initgts = <span class="pl-c1">fopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>InitialGenotypes.csv<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L2080" class="blob-num js-line-number" data-line-number="2080"></td>
>         <td id="LC2080" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(initgts, <span class="pl-s"><span class="pl-pds">&quot;</span>Locus0Copy0,Locus0Copy1<span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L2081" class="blob-num js-line-number" data-line-number="2081"></td>
>         <td id="LC2081" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( k = <span class="pl-c1">1</span>; k &lt; nTrackedSitesInParents; k++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L2082" class="blob-num js-line-number" data-line-number="2082"></td>
>         <td id="LC2082" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; PLOIDY; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L2083" class="blob-num js-line-number" data-line-number="2083"></td>
>         <td id="LC2083" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(initgts, <span class="pl-s"><span class="pl-pds">&quot;</span>,Locus<span class="pl-c1">%llu</span>Copy<span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, k, i);</td>
>       </tr>
>       <tr>
>         <td id="L2084" class="blob-num js-line-number" data-line-number="2084"></td>
>         <td id="LC2084" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L2085" class="blob-num js-line-number" data-line-number="2085"></td>
>         <td id="LC2085" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L2086" class="blob-num js-line-number" data-line-number="2086"></td>
>         <td id="LC2086" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fprintf</span>(initgts,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L2087" class="blob-num js-line-number" data-line-number="2087"></td>
>         <td id="LC2087" class="blob-code blob-code-inner js-file-line">        </td>
>       </tr>
>       <tr>
>         <td id="L2088" class="blob-num js-line-number" data-line-number="2088"></td>
>         <td id="LC2088" class="blob-code blob-code-inner js-file-line">        sipt = gts;</td>
>       </tr>
>       <tr>
>         <td id="L2089" class="blob-num js-line-number" data-line-number="2089"></td>
>         <td id="LC2089" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( k = <span class="pl-c1">0</span>; k &lt; N; k++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L2090" class="blob-num js-line-number" data-line-number="2090"></td>
>         <td id="LC2090" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(initgts, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, *sipt);</td>
>       </tr>
>       <tr>
>         <td id="L2091" class="blob-num js-line-number" data-line-number="2091"></td>
>         <td id="LC2091" class="blob-code blob-code-inner js-file-line">            sipt++;</td>
>       </tr>
>       <tr>
>         <td id="L2092" class="blob-num js-line-number" data-line-number="2092"></td>
>         <td id="LC2092" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( j = <span class="pl-c1">1</span>; j &lt; (PLOIDY * nTrackedSitesInParents); j++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L2093" class="blob-num js-line-number" data-line-number="2093"></td>
>         <td id="LC2093" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">fprintf</span>(initgts, <span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-c1">%i</span><span class="pl-pds">&quot;</span></span>, *sipt);</td>
>       </tr>
>       <tr>
>         <td id="L2094" class="blob-num js-line-number" data-line-number="2094"></td>
>         <td id="LC2094" class="blob-code blob-code-inner js-file-line">                sipt++;</td>
>       </tr>
>       <tr>
>         <td id="L2095" class="blob-num js-line-number" data-line-number="2095"></td>
>         <td id="LC2095" class="blob-code blob-code-inner js-file-line">            }</td>
>       </tr>
>       <tr>
>         <td id="L2096" class="blob-num js-line-number" data-line-number="2096"></td>
>         <td id="LC2096" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(initgts, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L2097" class="blob-num js-line-number" data-line-number="2097"></td>
>         <td id="LC2097" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L2098" class="blob-num js-line-number" data-line-number="2098"></td>
>         <td id="LC2098" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">fclose</span>(initgts);</td>
>       </tr>
>       <tr>
>         <td id="L2099" class="blob-num js-line-number" data-line-number="2099"></td>
>         <td id="LC2099" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L2100" class="blob-num js-line-number" data-line-number="2100"></td>
>         <td id="LC2100" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2101" class="blob-num js-line-number" data-line-number="2101"></td>
>         <td id="LC2101" class="blob-code blob-code-inner js-file-line">    environmentGradient = (<span class="pl-k">double</span> *) <span class="pl-c1">malloc</span>( nPOPULATIONS * <span class="pl-k">sizeof</span>(<span class="pl-k">double</span>) );</td>
>       </tr>
>       <tr>
>         <td id="L2102" class="blob-num js-line-number" data-line-number="2102"></td>
>         <td id="LC2102" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( ENVIRONMENT_TYPE == ENVT_TYPE_GRADIENT )</td>
>       </tr>
>       <tr>
>         <td id="L2103" class="blob-num js-line-number" data-line-number="2103"></td>
>         <td id="LC2103" class="blob-code blob-code-inner js-file-line">        stepSize = (ENVT_MAX - ENVT_MIN) / (((<span class="pl-k">double</span>) nPOPULATIONS) - <span class="pl-c1">1.0</span>);</td>
>       </tr>
>       <tr>
>         <td id="L2104" class="blob-num js-line-number" data-line-number="2104"></td>
>         <td id="LC2104" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ ) {</td>
>       </tr>
>       <tr>
>         <td id="L2105" class="blob-num js-line-number" data-line-number="2105"></td>
>         <td id="LC2105" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( ENVIRONMENT_TYPE == ENVT_TYPE_GRADIENT )</td>
>       </tr>
>       <tr>
>         <td id="L2106" class="blob-num js-line-number" data-line-number="2106"></td>
>         <td id="LC2106" class="blob-code blob-code-inner js-file-line">            environmentGradient[i] = ENVT_MIN + (((<span class="pl-k">double</span>) i) * stepSize);</td>
>       </tr>
>       <tr>
>         <td id="L2107" class="blob-num js-line-number" data-line-number="2107"></td>
>         <td id="LC2107" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( ENVIRONMENT_TYPE == ENVT_TYPE_MOSAIC ) {</td>
>       </tr>
>       <tr>
>         <td id="L2108" class="blob-num js-line-number" data-line-number="2108"></td>
>         <td id="LC2108" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( i % <span class="pl-c1">2</span> )</td>
>       </tr>
>       <tr>
>         <td id="L2109" class="blob-num js-line-number" data-line-number="2109"></td>
>         <td id="LC2109" class="blob-code blob-code-inner js-file-line">                environmentGradient[i] = ENVT_MAX;</td>
>       </tr>
>       <tr>
>         <td id="L2110" class="blob-num js-line-number" data-line-number="2110"></td>
>         <td id="LC2110" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span></td>
>       </tr>
>       <tr>
>         <td id="L2111" class="blob-num js-line-number" data-line-number="2111"></td>
>         <td id="LC2111" class="blob-code blob-code-inner js-file-line">                environmentGradient[i] = ENVT_MIN;</td>
>       </tr>
>       <tr>
>         <td id="L2112" class="blob-num js-line-number" data-line-number="2112"></td>
>         <td id="LC2112" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L2113" class="blob-num js-line-number" data-line-number="2113"></td>
>         <td id="LC2113" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> <span class="pl-k">if</span> ( ENVIRONMENT_TYPE == ENVT_TYPE_INVARIANT )</td>
>       </tr>
>       <tr>
>         <td id="L2114" class="blob-num js-line-number" data-line-number="2114"></td>
>         <td id="LC2114" class="blob-code blob-code-inner js-file-line">            environmentGradient[i] = <span class="pl-c1">0.0</span>;</td>
>       </tr>
>       <tr>
>         <td id="L2115" class="blob-num js-line-number" data-line-number="2115"></td>
>         <td id="LC2115" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> {</td>
>       </tr>
>       <tr>
>         <td id="L2116" class="blob-num js-line-number" data-line-number="2116"></td>
>         <td id="LC2116" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in setUpPopulations():<span class="pl-cce">\n\t</span>ENVIRONMENT_TYPE (<span class="pl-c1">%i</span>) unrecognized<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, ENVIRONMENT_TYPE);</td>
>       </tr>
>       <tr>
>         <td id="L2117" class="blob-num js-line-number" data-line-number="2117"></td>
>         <td id="LC2117" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L2118" class="blob-num js-line-number" data-line-number="2118"></td>
>         <td id="LC2118" class="blob-code blob-code-inner js-file-line">        }</td>
>       </tr>
>       <tr>
>         <td id="L2119" class="blob-num js-line-number" data-line-number="2119"></td>
>         <td id="LC2119" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L2120" class="blob-num js-line-number" data-line-number="2120"></td>
>         <td id="LC2120" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( VERBOSE ) {</td>
>       </tr>
>       <tr>
>         <td id="L2121" class="blob-num js-line-number" data-line-number="2121"></td>
>         <td id="LC2121" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>environmentGradient:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L2122" class="blob-num js-line-number" data-line-number="2122"></td>
>         <td id="LC2122" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> ( i = <span class="pl-c1">0</span>; i &lt; nPOPULATIONS; i++ )</td>
>       </tr>
>       <tr>
>         <td id="L2123" class="blob-num js-line-number" data-line-number="2123"></td>
>         <td id="LC2123" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-c1">%f</span><span class="pl-pds">&quot;</span></span>, environmentGradient[i]);</td>
>       </tr>
>       <tr>
>         <td id="L2124" class="blob-num js-line-number" data-line-number="2124"></td>
>         <td id="LC2124" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">printf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L2125" class="blob-num js-line-number" data-line-number="2125"></td>
>         <td id="LC2125" class="blob-code blob-code-inner js-file-line">    }</td>
>       </tr>
>       <tr>
>         <td id="L2126" class="blob-num js-line-number" data-line-number="2126"></td>
>         <td id="LC2126" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2127" class="blob-num js-line-number" data-line-number="2127"></td>
>         <td id="LC2127" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L2128" class="blob-num js-line-number" data-line-number="2128"></td>
>         <td id="LC2128" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2129" class="blob-num js-line-number" data-line-number="2129"></td>
>         <td id="LC2129" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2130" class="blob-num js-line-number" data-line-number="2130"></td>
>         <td id="LC2130" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2131" class="blob-num js-line-number" data-line-number="2131"></td>
>         <td id="LC2131" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">usage</span>(<span class="pl-k">char</span> *progname)</td>
>       </tr>
>       <tr>
>         <td id="L2132" class="blob-num js-line-number" data-line-number="2132"></td>
>         <td id="LC2132" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L2133" class="blob-num js-line-number" data-line-number="2133"></td>
>         <td id="LC2133" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(stdout, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-c1">%s</span>:<span class="pl-cce">\n\t</span>Options:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, progname);</td>
>       </tr>
>       <tr>
>         <td id="L2134" class="blob-num js-line-number" data-line-number="2134"></td>
>         <td id="LC2134" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2135" class="blob-num js-line-number" data-line-number="2135"></td>
>         <td id="LC2135" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(stdout, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Note that limited options are available here on the command line.<span class="pl-cce">\n</span>For extensive flexible settings, put settings in parameters.ini.txt.<span class="pl-cce">\n</span>Options available on command line are as follows:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L2136" class="blob-num js-line-number" data-line-number="2136"></td>
>         <td id="LC2136" class="blob-code blob-code-inner js-file-line">    </td>
>       </tr>
>       <tr>
>         <td id="L2137" class="blob-num js-line-number" data-line-number="2137"></td>
>         <td id="LC2137" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(stdout, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t</span>-V<span class="pl-cce">\t</span>Verbose: print lots of human readable messages to<span class="pl-cce">\n\t\t</span>stdout related to run status.<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L2138" class="blob-num js-line-number" data-line-number="2138"></td>
>         <td id="LC2138" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L2139" class="blob-num js-line-number" data-line-number="2139"></td>
>         <td id="LC2139" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2140" class="blob-num js-line-number" data-line-number="2140"></td>
>         <td id="LC2140" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2141" class="blob-num js-line-number" data-line-number="2141"></td>
>         <td id="LC2141" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2142" class="blob-num js-line-number" data-line-number="2142"></td>
>         <td id="LC2142" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//void viabilitySelection(void)</span></td>
>       </tr>
>       <tr>
>         <td id="L2143" class="blob-num js-line-number" data-line-number="2143"></td>
>         <td id="LC2143" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//{</span></td>
>       </tr>
>       <tr>
>         <td id="L2144" class="blob-num js-line-number" data-line-number="2144"></td>
>         <td id="LC2144" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    long int i, j;</span></td>
>       </tr>
>       <tr>
>         <td id="L2145" class="blob-num js-line-number" data-line-number="2145"></td>
>         <td id="LC2145" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    double fitnessValues[N];</span></td>
>       </tr>
>       <tr>
>         <td id="L2146" class="blob-num js-line-number" data-line-number="2146"></td>
>         <td id="LC2146" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    </span></td>
>       </tr>
>       <tr>
>         <td id="L2147" class="blob-num js-line-number" data-line-number="2147"></td>
>         <td id="LC2147" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    memset( fitnessValues, 0, (N * sizeof(double)) );</span></td>
>       </tr>
>       <tr>
>         <td id="L2148" class="blob-num js-line-number" data-line-number="2148"></td>
>         <td id="LC2148" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    computeFitness(fitnessValues);</span></td>
>       </tr>
>       <tr>
>         <td id="L2149" class="blob-num js-line-number" data-line-number="2149"></td>
>         <td id="LC2149" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    </span></td>
>       </tr>
>       <tr>
>         <td id="L2150" class="blob-num js-line-number" data-line-number="2150"></td>
>         <td id="LC2150" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    </span></td>
>       </tr>
>       <tr>
>         <td id="L2151" class="blob-num js-line-number" data-line-number="2151"></td>
>         <td id="LC2151" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    </span></td>
>       </tr>
>       <tr>
>         <td id="L2152" class="blob-num js-line-number" data-line-number="2152"></td>
>         <td id="LC2152" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    printf(&quot;\nWarning: viabilitySelection() not written yet!\n&quot;);</span></td>
>       </tr>
>       <tr>
>         <td id="L2153" class="blob-num js-line-number" data-line-number="2153"></td>
>         <td id="LC2153" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    exit(0);</span></td>
>       </tr>
>       <tr>
>         <td id="L2154" class="blob-num js-line-number" data-line-number="2154"></td>
>         <td id="LC2154" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//}</span></td>
>       </tr>
>       <tr>
>         <td id="L2155" class="blob-num js-line-number" data-line-number="2155"></td>
>         <td id="LC2155" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2156" class="blob-num js-line-number" data-line-number="2156"></td>
>         <td id="LC2156" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2157" class="blob-num js-line-number" data-line-number="2157"></td>
>         <td id="LC2157" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">wrongParametersIniOption</span>(<span class="pl-k">char</span> *expected, <span class="pl-k">char</span> *previous, <span class="pl-k">char</span> *found)</td>
>       </tr>
>       <tr>
>         <td id="L2158" class="blob-num js-line-number" data-line-number="2158"></td>
>         <td id="LC2158" class="blob-code blob-code-inner js-file-line">{</td>
>       </tr>
>       <tr>
>         <td id="L2159" class="blob-num js-line-number" data-line-number="2159"></td>
>         <td id="LC2159" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>Error in readInParametersFromFile():<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L2160" class="blob-num js-line-number" data-line-number="2160"></td>
>         <td id="LC2160" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>Expecting &#39;<span class="pl-c1">%s</span>&#39; after &#39;<span class="pl-c1">%s</span>&#39;<span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>, expected, previous);</td>
>       </tr>
>       <tr>
>         <td id="L2161" class="blob-num js-line-number" data-line-number="2161"></td>
>         <td id="LC2161" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span>in parameters.ini.txt, but instead found: &#39;<span class="pl-c1">%s</span>&#39;.<span class="pl-cce">\n\t</span>Please fix parameters.ini.txt<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, found);</td>
>       </tr>
>       <tr>
>         <td id="L2162" class="blob-num js-line-number" data-line-number="2162"></td>
>         <td id="LC2162" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fprintf</span>(stderr, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t\t</span>*** Exiting *** <span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>);</td>
>       </tr>
>       <tr>
>         <td id="L2163" class="blob-num js-line-number" data-line-number="2163"></td>
>         <td id="LC2163" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">exit</span>(-<span class="pl-c1">1</span>);</td>
>       </tr>
>       <tr>
>         <td id="L2164" class="blob-num js-line-number" data-line-number="2164"></td>
>         <td id="LC2164" class="blob-code blob-code-inner js-file-line">}</td>
>       </tr>
>       <tr>
>         <td id="L2165" class="blob-num js-line-number" data-line-number="2165"></td>
>         <td id="LC2165" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2166" class="blob-num js-line-number" data-line-number="2166"></td>
>         <td id="LC2166" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2167" class="blob-num js-line-number" data-line-number="2167"></td>
>         <td id="LC2167" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2168" class="blob-num js-line-number" data-line-number="2168"></td>
>         <td id="LC2168" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2169" class="blob-num js-line-number" data-line-number="2169"></td>
>         <td id="LC2169" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
>       <tr>
>         <td id="L2170" class="blob-num js-line-number" data-line-number="2170"></td>
>         <td id="LC2170" class="blob-code blob-code-inner js-file-line">
> </td>
>       </tr>
> </table>
> 
>   </div>
> 
> </div>
> 
> <a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
> <div id="jump-to-line" style="display:none">
>   <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
>     <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
>     <button type="submit" class="btn">Go</button>
> </form></div>
> 
>         </div>
>       </div>
>       <div class="modal-backdrop"></div>
>     </div>
>   </div>
> 
> 
>     </div>
> 
>       <div class="container">
>   <div class="site-footer" role="contentinfo">
>     <ul class="site-footer-links right">
>         <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
>       <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
>       <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
>       <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
>         <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
>         <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>
>         <li><a href="https://github.com/pricing" data-ga-click="Footer, go to pricing, text:pricing">Pricing</a></li>
> 
>     </ul>
> 
>     <a href="https://github.com" aria-label="Homepage">
>       <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
> </a>
>     <ul class="site-footer-links">
>       <li>&copy; 2015 <span title="0.25015s from github-fe118-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
>         <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
>         <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
>         <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
>         <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact</a></li>
>         <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
>     </ul>
>   </div>
> </div>
> 
> 
> 
>     
>     
> 
>     <div id="ajax-error-message" class="flash flash-error">
>       <span class="octicon octicon-alert"></span>
>       <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
>         <span class="octicon octicon-x"></span>
>       </button>
>       Something went wrong with that request. Please try again.
>     </div>
> 
> 
>       <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-2c67e846b237d12dc49d9ba38bef688797518db6c4fc7ec256caf871623c69e4.js"></script>
>       <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-cdf2812e9b014c7112138481f998b4d18770faa142b62ce3c3223fbf481b6a94.js"></script>
>       
>       
>     <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner hidden">
>       <span class="octicon octicon-alert"></span>
>       <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
>       <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
>     </div>
>   </body>
> </html>
